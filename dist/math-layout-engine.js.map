{"version":3,"sources":["node-types.ts","../node_modules/ramda/es/F.js","../node_modules/ramda/es/T.js","../node_modules/ramda/es/__.js","../node_modules/ramda/es/internal/_isPlaceholder.js","../node_modules/ramda/es/internal/_curry1.js","../node_modules/ramda/es/internal/_curry2.js","../node_modules/ramda/es/add.js","../node_modules/ramda/es/internal/_concat.js","../node_modules/ramda/es/internal/_arity.js","../node_modules/ramda/es/internal/_curryN.js","../node_modules/ramda/es/curryN.js","../node_modules/ramda/es/addIndex.js","../node_modules/ramda/es/internal/_curry3.js","../node_modules/ramda/es/adjust.js","../node_modules/ramda/es/internal/_isArray.js","../node_modules/ramda/es/internal/_isTransformer.js","../node_modules/ramda/es/internal/_dispatchable.js","../node_modules/ramda/es/internal/_reduced.js","../node_modules/ramda/es/internal/_xfBase.js","../node_modules/ramda/es/internal/_xall.js","../node_modules/ramda/es/all.js","../node_modules/ramda/es/max.js","../node_modules/ramda/es/internal/_map.js","../node_modules/ramda/es/internal/_isString.js","../node_modules/ramda/es/internal/_isArrayLike.js","../node_modules/ramda/es/internal/_xwrap.js","../node_modules/ramda/es/bind.js","../node_modules/ramda/es/internal/_reduce.js","../node_modules/ramda/es/internal/_xmap.js","../node_modules/ramda/es/internal/_has.js","../node_modules/ramda/es/internal/_isArguments.js","../node_modules/ramda/es/keys.js","../node_modules/ramda/es/map.js","../node_modules/ramda/es/path.js","../node_modules/ramda/es/prop.js","../node_modules/ramda/es/pluck.js","../node_modules/ramda/es/reduce.js","../node_modules/ramda/es/allPass.js","../node_modules/ramda/es/always.js","../node_modules/ramda/es/and.js","../node_modules/ramda/es/internal/_xany.js","../node_modules/ramda/es/any.js","../node_modules/ramda/es/anyPass.js","../node_modules/ramda/es/ap.js","../node_modules/ramda/es/internal/_aperture.js","../node_modules/ramda/es/internal/_xaperture.js","../node_modules/ramda/es/aperture.js","../node_modules/ramda/es/append.js","../node_modules/ramda/es/apply.js","../node_modules/ramda/es/values.js","../node_modules/ramda/es/applySpec.js","../node_modules/ramda/es/applyTo.js","../node_modules/ramda/es/ascend.js","../node_modules/ramda/es/assoc.js","../node_modules/ramda/es/internal/_isInteger.js","../node_modules/ramda/es/isNil.js","../node_modules/ramda/es/assocPath.js","../node_modules/ramda/es/nAry.js","../node_modules/ramda/es/binary.js","../node_modules/ramda/es/internal/_isFunction.js","../node_modules/ramda/es/liftN.js","../node_modules/ramda/es/lift.js","../node_modules/ramda/es/both.js","../node_modules/ramda/es/curry.js","../node_modules/ramda/es/call.js","../node_modules/ramda/es/internal/_makeFlat.js","../node_modules/ramda/es/internal/_forceReduced.js","../node_modules/ramda/es/internal/_flatCat.js","../node_modules/ramda/es/internal/_xchain.js","../node_modules/ramda/es/chain.js","../node_modules/ramda/es/clamp.js","../node_modules/ramda/es/internal/_cloneRegExp.js","../node_modules/ramda/es/type.js","../node_modules/ramda/es/internal/_clone.js","../node_modules/ramda/es/clone.js","../node_modules/ramda/es/comparator.js","../node_modules/ramda/es/not.js","../node_modules/ramda/es/complement.js","../node_modules/ramda/es/internal/_pipe.js","../node_modules/ramda/es/internal/_checkForMethod.js","../node_modules/ramda/es/slice.js","../node_modules/ramda/es/tail.js","../node_modules/ramda/es/pipe.js","../node_modules/ramda/es/reverse.js","../node_modules/ramda/es/compose.js","../node_modules/ramda/es/composeK.js","../node_modules/ramda/es/internal/_pipeP.js","../node_modules/ramda/es/pipeP.js","../node_modules/ramda/es/composeP.js","../node_modules/ramda/es/nth.js","../node_modules/ramda/es/head.js","../node_modules/ramda/es/internal/_identity.js","../node_modules/ramda/es/identity.js","../node_modules/ramda/es/pipeWith.js","../node_modules/ramda/es/composeWith.js","../node_modules/ramda/es/internal/_arrayFromIterator.js","../node_modules/ramda/es/internal/_includesWith.js","../node_modules/ramda/es/internal/_functionName.js","../node_modules/ramda/es/internal/_objectIs.js","../node_modules/ramda/es/internal/_equals.js","../node_modules/ramda/es/equals.js","../node_modules/ramda/es/internal/_indexOf.js","../node_modules/ramda/es/internal/_includes.js","../node_modules/ramda/es/internal/_quote.js","../node_modules/ramda/es/internal/_toISOString.js","../node_modules/ramda/es/internal/_complement.js","../node_modules/ramda/es/internal/_filter.js","../node_modules/ramda/es/internal/_isObject.js","../node_modules/ramda/es/internal/_xfilter.js","../node_modules/ramda/es/filter.js","../node_modules/ramda/es/reject.js","../node_modules/ramda/es/internal/_toString.js","../node_modules/ramda/es/toString.js","../node_modules/ramda/es/concat.js","../node_modules/ramda/es/cond.js","../node_modules/ramda/es/constructN.js","../node_modules/ramda/es/construct.js","../node_modules/ramda/es/contains.js","../node_modules/ramda/es/converge.js","../node_modules/ramda/es/internal/_xreduceBy.js","../node_modules/ramda/es/reduceBy.js","../node_modules/ramda/es/countBy.js","../node_modules/ramda/es/dec.js","../node_modules/ramda/es/defaultTo.js","../node_modules/ramda/es/descend.js","../node_modules/ramda/es/internal/_Set.js","../node_modules/ramda/es/difference.js","../node_modules/ramda/es/differenceWith.js","../node_modules/ramda/es/dissoc.js","../node_modules/ramda/es/remove.js","../node_modules/ramda/es/update.js","../node_modules/ramda/es/dissocPath.js","../node_modules/ramda/es/divide.js","../node_modules/ramda/es/internal/_xdrop.js","../node_modules/ramda/es/drop.js","../node_modules/ramda/es/internal/_xtake.js","../node_modules/ramda/es/take.js","../node_modules/ramda/es/internal/_dropLast.js","../node_modules/ramda/es/internal/_xdropLast.js","../node_modules/ramda/es/dropLast.js","../node_modules/ramda/es/internal/_dropLastWhile.js","../node_modules/ramda/es/internal/_xdropLastWhile.js","../node_modules/ramda/es/dropLastWhile.js","../node_modules/ramda/es/internal/_xdropRepeatsWith.js","../node_modules/ramda/es/last.js","../node_modules/ramda/es/dropRepeatsWith.js","../node_modules/ramda/es/dropRepeats.js","../node_modules/ramda/es/internal/_xdropWhile.js","../node_modules/ramda/es/dropWhile.js","../node_modules/ramda/es/or.js","../node_modules/ramda/es/either.js","../node_modules/ramda/es/empty.js","../node_modules/ramda/es/takeLast.js","../node_modules/ramda/es/endsWith.js","../node_modules/ramda/es/eqBy.js","../node_modules/ramda/es/eqProps.js","../node_modules/ramda/es/evolve.js","../node_modules/ramda/es/internal/_xfind.js","../node_modules/ramda/es/find.js","../node_modules/ramda/es/internal/_xfindIndex.js","../node_modules/ramda/es/findIndex.js","../node_modules/ramda/es/internal/_xfindLast.js","../node_modules/ramda/es/findLast.js","../node_modules/ramda/es/internal/_xfindLastIndex.js","../node_modules/ramda/es/findLastIndex.js","../node_modules/ramda/es/flatten.js","../node_modules/ramda/es/flip.js","../node_modules/ramda/es/forEach.js","../node_modules/ramda/es/forEachObjIndexed.js","../node_modules/ramda/es/fromPairs.js","../node_modules/ramda/es/groupBy.js","../node_modules/ramda/es/groupWith.js","../node_modules/ramda/es/gt.js","../node_modules/ramda/es/gte.js","../node_modules/ramda/es/hasPath.js","../node_modules/ramda/es/has.js","../node_modules/ramda/es/hasIn.js","../node_modules/ramda/es/identical.js","../node_modules/ramda/es/ifElse.js","../node_modules/ramda/es/inc.js","../node_modules/ramda/es/includes.js","../node_modules/ramda/es/indexBy.js","../node_modules/ramda/es/indexOf.js","../node_modules/ramda/es/init.js","../node_modules/ramda/es/innerJoin.js","../node_modules/ramda/es/insert.js","../node_modules/ramda/es/insertAll.js","../node_modules/ramda/es/uniqBy.js","../node_modules/ramda/es/uniq.js","../node_modules/ramda/es/intersection.js","../node_modules/ramda/es/intersperse.js","../node_modules/ramda/es/internal/_objectAssign.js","../node_modules/ramda/es/objOf.js","../node_modules/ramda/es/internal/_stepCat.js","../node_modules/ramda/es/into.js","../node_modules/ramda/es/invert.js","../node_modules/ramda/es/invertObj.js","../node_modules/ramda/es/invoker.js","../node_modules/ramda/es/is.js","../node_modules/ramda/es/isEmpty.js","../node_modules/ramda/es/join.js","../node_modules/ramda/es/juxt.js","../node_modules/ramda/es/keysIn.js","../node_modules/ramda/es/lastIndexOf.js","../node_modules/ramda/es/internal/_isNumber.js","../node_modules/ramda/es/length.js","../node_modules/ramda/es/lens.js","../node_modules/ramda/es/lensIndex.js","../node_modules/ramda/es/lensPath.js","../node_modules/ramda/es/lensProp.js","../node_modules/ramda/es/lt.js","../node_modules/ramda/es/lte.js","../node_modules/ramda/es/mapAccum.js","../node_modules/ramda/es/mapAccumRight.js","../node_modules/ramda/es/mapObjIndexed.js","../node_modules/ramda/es/match.js","../node_modules/ramda/es/mathMod.js","../node_modules/ramda/es/maxBy.js","../node_modules/ramda/es/sum.js","../node_modules/ramda/es/mean.js","../node_modules/ramda/es/median.js","../node_modules/ramda/es/memoizeWith.js","../node_modules/ramda/es/merge.js","../node_modules/ramda/es/mergeAll.js","../node_modules/ramda/es/mergeWithKey.js","../node_modules/ramda/es/mergeDeepWithKey.js","../node_modules/ramda/es/mergeDeepLeft.js","../node_modules/ramda/es/mergeDeepRight.js","../node_modules/ramda/es/mergeDeepWith.js","../node_modules/ramda/es/mergeLeft.js","../node_modules/ramda/es/mergeRight.js","../node_modules/ramda/es/mergeWith.js","../node_modules/ramda/es/min.js","../node_modules/ramda/es/minBy.js","../node_modules/ramda/es/modulo.js","../node_modules/ramda/es/move.js","../node_modules/ramda/es/multiply.js","../node_modules/ramda/es/negate.js","../node_modules/ramda/es/none.js","../node_modules/ramda/es/nthArg.js","../node_modules/ramda/es/o.js","../node_modules/ramda/es/internal/_of.js","../node_modules/ramda/es/of.js","../node_modules/ramda/es/omit.js","../node_modules/ramda/es/once.js","../node_modules/ramda/es/internal/_assertPromise.js","../node_modules/ramda/es/otherwise.js","../node_modules/ramda/es/over.js","../node_modules/ramda/es/pair.js","../node_modules/ramda/es/internal/_createPartialApplicator.js","../node_modules/ramda/es/partial.js","../node_modules/ramda/es/partialRight.js","../node_modules/ramda/es/partition.js","../node_modules/ramda/es/pathEq.js","../node_modules/ramda/es/pathOr.js","../node_modules/ramda/es/pathSatisfies.js","../node_modules/ramda/es/pick.js","../node_modules/ramda/es/pickAll.js","../node_modules/ramda/es/pickBy.js","../node_modules/ramda/es/pipeK.js","../node_modules/ramda/es/prepend.js","../node_modules/ramda/es/product.js","../node_modules/ramda/es/useWith.js","../node_modules/ramda/es/project.js","../node_modules/ramda/es/propEq.js","../node_modules/ramda/es/propIs.js","../node_modules/ramda/es/propOr.js","../node_modules/ramda/es/propSatisfies.js","../node_modules/ramda/es/props.js","../node_modules/ramda/es/range.js","../node_modules/ramda/es/reduceRight.js","../node_modules/ramda/es/reduceWhile.js","../node_modules/ramda/es/reduced.js","../node_modules/ramda/es/times.js","../node_modules/ramda/es/repeat.js","../node_modules/ramda/es/replace.js","../node_modules/ramda/es/scan.js","../node_modules/ramda/es/sequence.js","../node_modules/ramda/es/set.js","../node_modules/ramda/es/sort.js","../node_modules/ramda/es/sortBy.js","../node_modules/ramda/es/sortWith.js","../node_modules/ramda/es/split.js","../node_modules/ramda/es/splitAt.js","../node_modules/ramda/es/splitEvery.js","../node_modules/ramda/es/splitWhen.js","../node_modules/ramda/es/startsWith.js","../node_modules/ramda/es/subtract.js","../node_modules/ramda/es/symmetricDifference.js","../node_modules/ramda/es/symmetricDifferenceWith.js","../node_modules/ramda/es/takeLastWhile.js","../node_modules/ramda/es/internal/_xtakeWhile.js","../node_modules/ramda/es/takeWhile.js","../node_modules/ramda/es/internal/_xtap.js","../node_modules/ramda/es/tap.js","../node_modules/ramda/es/internal/_isRegExp.js","../node_modules/ramda/es/test.js","../node_modules/ramda/es/then.js","../node_modules/ramda/es/toLower.js","../node_modules/ramda/es/toPairs.js","../node_modules/ramda/es/toPairsIn.js","../node_modules/ramda/es/toUpper.js","../node_modules/ramda/es/transduce.js","../node_modules/ramda/es/transpose.js","../node_modules/ramda/es/traverse.js","../node_modules/ramda/es/trim.js","../node_modules/ramda/es/tryCatch.js","../node_modules/ramda/es/unapply.js","../node_modules/ramda/es/unary.js","../node_modules/ramda/es/uncurryN.js","../node_modules/ramda/es/unfold.js","../node_modules/ramda/es/union.js","../node_modules/ramda/es/uniqWith.js","../node_modules/ramda/es/unionWith.js","../node_modules/ramda/es/unless.js","../node_modules/ramda/es/unnest.js","../node_modules/ramda/es/until.js","../node_modules/ramda/es/valuesIn.js","../node_modules/ramda/es/view.js","../node_modules/ramda/es/when.js","../node_modules/ramda/es/where.js","../node_modules/ramda/es/whereEq.js","../node_modules/ramda/es/without.js","../node_modules/ramda/es/xprod.js","../node_modules/ramda/es/zip.js","../node_modules/ramda/es/zipObj.js","../node_modules/ramda/es/zipWith.js","../node_modules/ramda/es/thunkify.js","../node_modules/ramda/es/index.js","font-data/font-metrics-data.js","font-data/font-bbox-data.js","font-data/katex-font-util.ts","style.ts","util/util.ts","layout/layout-util.ts","layout/script/limit-layout.ts","layout/error.ts","layout/script/no-limit-layout.ts","layout/script/script-layout.ts","layout/fraction-layout.ts","opentype.ts","layout/delimiter/create-delimiter.ts","layout/horizontal-layout.ts","layout/delimiter/delimited-layout.ts","layout/root/create-radical.ts","layout/root/root-layout.ts","layout/text-layout.ts","layout/char-layout.ts","layout/mathlist-layout.ts","layout/matrix-layout.ts","layout/accent-layout.ts","layout/layout.ts","rendering/render.ts","fonts/load-fonts.ts","type-from-unicode.ts","parsing/parser.ts","index.ts"],"names":["F","T","_isPlaceholder","a","_curry1","fn","f1","arguments","length","apply","_curry2","f2","b","_b","_a","add","Number","_concat","set1","set2","idx","len1","len2","result","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_curryN","received","combinedIdx","combined","argsIdx","left","curryN","addIndex","origFn","list","args","Array","prototype","slice","call","_curry3","f3","c","_c","adjust","start","_idx","_list","isArray","val","Object","toString","_isTransformer","obj","_dispatchable","methodNames","xf","pop","transducer","_reduced","x","init","_xall","XAll","f","all","_xfBase","input","max","_map","functor","len","_isString","_isArrayLike","nodeType","hasOwnProperty","XWrap","acc","_xwrap","bind","thisObj","_arrayReduce","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","_reduce","reduce","TypeError","_xmap","XMap","_has","prop","_isArguments","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","map","key","path","paths","p","pluck","allPass","preds","always","and","_xany","XAny","any","anyPass","ap","applyF","applyX","_aperture","limit","_xaperture","XAperture","pos","full","store","getCopy","aperture","append","el","values","props","vals","applySpec","mapValues","spec","v","applyTo","ascend","aa","bb","assoc","isInteger","isNil","assocPath","nextObj","arr","concat","nAry","binary","_isFunction","liftN","arity","lifted","lift","both","g","curry","_makeFlat","recursive","flatt","jlen","j","ilen","_forceReduced","_flatCat","preservingReduced","ret","rxf","_xchain","chain","monad","clamp","min","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","type","undefined","_clone","refFrom","refTo","deep","copy","copiedValue","Date","valueOf","clone","comparator","pred","not","complement","_pipe","_checkForMethod","methodname","fromIndex","toIndex","tail","Infinity","pipe","reverse","split","join","compose","composeK","last","_pipeP","ctx","then","pipeP","composeP","nth","offset","charAt","head","_identity","identity","pipeWith","headList","tailList","composeWith","_arrayFromIterator","push","_includesWith","_functionName","match","String","_objectIs","is","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","typeA","equals","constructor","name","message","size","entries","keysA","extendedStackA","extendedStackB","_indexOf","inf","indexOf","_includes","_quote","s","replace","_toISOString","pad","toISOString","d","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_complement","_filter","_isObject","_xfilter","XFilter","filter","filterable","reject","_toString","seen","recur","y","xs","mapPairs","k","sort","test","isNaN","NaN","repr","cond","pairs","pair","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","construct","converge","after","fns","context","_xreduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","reduceBy","elt","countBy","elem","dec","defaultTo","descend","_Set","_nativeSet","Set","_items","hasOrAdd","has","shouldAdd","set","prevSize","bIdx","difference","first","second","out","firstLen","secondLen","toFilterOut","i","differenceWith","dissoc","remove","count","splice","update","dissocPath","divide","_xdrop","XDrop","drop","Math","_xtake","XTake","take","dropLast","_xdropLast","XDropLast","_dropLast","dropLastWhile","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_dropLastWhile","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","dropRepeatsWith","dropRepeats","_xdropWhile","XDropWhile","dropWhile","or","either","empty","takeLast","endsWith","suffix","eqBy","eqProps","obj1","obj2","evolve","transformations","object","transformation","_xfind","XFind","found","find","_xfindIndex","XFindIndex","findIndex","_xfindLast","XFindLast","findLast","_xfindLastIndex","XFindLastIndex","lastIdx","findLastIndex","flatten","flip","forEach","forEachObjIndexed","keyList","fromPairs","groupBy","groupWith","res","nextidx","gt","gte","hasPath","_path","hasIn","identical","ifElse","condition","onTrue","onFalse","inc","includes","indexBy","target","innerJoin","ys","insert","insertAll","elts","uniqBy","appliedItem","uniq","intersection","list1","list2","lookupList","filteredList","intersperse","separator","_objectAssign","output","nextKey","assign","objOf","_stepCatArray","_stepCatString","_stepCatObject","_stepCat","into","invert","invertObj","invoker","method","Ctor","isEmpty","juxt","keysIn","lastIndexOf","_isNumber","lens","getter","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","lt","lte","mapAccum","tuple","mapAccumRight","mapObjIndexed","rx","str","mathMod","m","maxBy","sum","mean","median","width","memoizeWith","mFn","cache","merge","l","r","mergeAll","mergeWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeLeft","mergeRight","mergeWith","_","_l","_r","minBy","modulo","move","from","to","positiveFrom","positiveTo","multiply","negate","none","nthArg","o","_of","of","omit","names","index","once","called","_assertPromise","otherwise","over","Identity","fst","snd","_createPartialApplicator","partial","partialRight","partition","pathEq","pathOr","pathSatisfies","propPath","pick","pickAll","pickBy","pipeK","prepend","product","useWith","transformers","project","propEq","propIs","propOr","propSatisfies","ps","range","reduceRight","reduceWhile","reduced","times","RangeError","repeat","regex","replacement","scan","sequence","traversable","sortBy","sortWith","splitAt","array","splitEvery","splitWhen","prefix","startsWith","subtract","symmetricDifference","symmetricDifferenceWith","takeLastWhile","_xtakeWhile","XTakeWhile","takeWhile","_xtap","XTap","tap","_isRegExp","toLower","toPairs","toPairsIn","toUpper","transduce","transpose","outerlist","innerlist","traverse","trim","ws","zeroWidth","hasProtoTrim","beginRx","endRx","tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","union","uniqWith","unionWith","unless","whenFalseFn","unnest","until","valuesIn","vs","view","Const","when","whenTrueFn","where","testObj","whereEq","without","xprod","zip","rv","zipObj","zipWith","thunkify","fnArgs"],"mappings":"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,EAAG,OAAS,EAAG,EAAG,QACnB,KAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,KAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,KAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,KAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,KAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,KAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACxB,MAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,MAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,MAAA,CAAC,OAAS,OAAS,E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AAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,QAC/B,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,OACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,QAC/B,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,QAC/B,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,QAC/B,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,IAC/B,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,OACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,QACzB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,OAAS,OAAS,OAAS,EAAG,QAC/B,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,QACnB,IAAA,CAAC,EAAG,OAAS,OAAS,EAAG,QACzB,IAAA,CAAC,OAAS,OAAS,EAA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C,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,GAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,GAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,OAAS,EAAG,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,GAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MAClB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,EAAG,EAAG,EAAG,MACb,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,EAAG,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,OAAS,OAAS,EAAG,EAAG,MACzB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MACnB,IAAA,CAAC,EAAG,OAAS,EAAG,EAAG,MAC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MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,IACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGlB,GAAA,CACF,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,OAIlB,GAAA,CACF,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGlB,GAAA,CACF,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,IACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,EAAA,SAID,aAAA,OAIjB,IAAA,CACH,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,GAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,IAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,IAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,IACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,GACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,IAET,CACe,SAAA,EACN,EAAA,GACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,KAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,IAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,GACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,IAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,GACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGjB,IAAA,CACH,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,GAET,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,IAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,KAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,OAIhB,KAAA,CACJ,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,OAmThB,KAAA,CACJ,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGhB,KAAA,CACJ,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,SAID,aAAA,OAIhB,KAAA,CACJ,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,IACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGhB,KAAA,CACJ,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAIf,MAAA,CACL,CACc,OAAA,eACF,KAAA,CACI,KAAA,IACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,KAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,IACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,IACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,OAGf,MAAA,CACL,CACc,OAAA,eACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,KAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,QAID,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,QAIF,aAAA,KAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,IACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,SAIF,aAAA,MAEpB,CACc,OAAA,gBACF,KAAA,CACI,KAAA,KACA,MAAC,MACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACN,EAAA,I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oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,SAKrB,CACY,WAAA,QACC,YAAA,MACD,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAIT,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAGT,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,SAKrB,CACY,WAAA,QACC,YAAA,MACD,KAAA,CACI,KAAA,KACA,MAAC,IACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAGT,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAGT,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,QAKtB,CACY,WAAA,QACC,YAAA,MACD,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEA,SAAA,CACR,CACI,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,OAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAGrB,CACY,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,MAGN,CACY,SAAA,EACW,oBAAA,EACjB,EAAA,MACA,EAAA,OAEM,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,MACf,EAAA,OAEM,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,GAAC,OAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,OAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,GAAC,SAKtB,CACY,WAAA,QACC,YAAA,MACD,KAAA,CACI,KAAA,KACA,MAAC,KACD,KAAA,KACA,KAAA,MAEF,aAAA,MACE,SAAA,CACR,CACI,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,KAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,IACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAET,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,GAAC,MAEV,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,MAGT,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAGrB,CACY,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAqBN,CACY,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,KAGM,CACe,SAAA,EACW,oBAAA,EACjB,EAAA,KACA,EAAA,SAMnB,EAA+B,CACjC,CAAC,EAAG,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,CAAC,GAAI,KAGtC,EAA6B,CAC/B,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,KAE7D,EAAgB,KAUhB,EAAoB,SAAC,EAAkB,GAAgD,OAAA,EAAQ,IAAI,SAAC,EAAY,GAC/G,IAAA,GAAoC,EAAY,KAAK,SAAA,GAAO,OAAA,EAAI,QAAU,KAAU,CAAE,MAAO,CAAE,EAAG,EAAW,EAAG,EAAG,EAAW,KAAO,MAC3I,OAAA,EAAA,EAAA,GAAY,GAAe,MAEf,QAAA,eAAiB,SAAC,EAAmB,GAC3C,IAAA,EAAa,EAAiB,GAE9B,EADY,EAAS,GACD,SAAS,GAC7B,EAAQ,EAAQ,EAAW,IAAI,EAAI,EAClC,OAAA,EAAkB,EAAS,CACjC,CAAE,MAAO,EAAW,GAAI,MAAO,CAAE,EAAG,EAAO,EAAG,EAAQ,EAAW,IAAI,IACrE,CAAE,MAAO,EAAW,GAAI,MAAO,CAAE,EAAG,EAAO,EAAG,EAAQ,EAAW,IAAI,OAG1D,QAAA,iBAAmB,SAAC,EAAgB,GAC1C,IAAA,EAAY,EAAS,GAErB,EADU,EAAU,KAAK,KACF,EACvB,EAAa,EAAa,EAC1B,EAAQ,EAAU,aAAe,EACjC,EAAU,EAAU,SAAS,GAC5B,OAAA,EAAkB,EAAS,CACjC,CAAE,MAAO,GAAI,MAAO,CAAE,EAAG,EAAQ,IAAI,EAAG,EAAG,IAC3C,CAAE,MAAO,GAAI,MAAO,CAAE,EAAG,EAAO,EAAG,IACnC,CAAE,MAAO,GAAI,MAAO,CAAE,EAAG,EAAO,EAAG,IACnC,CAAE,MAAO,GAAI,MAAO,CAAE,EAAG,EAAQ,IAAI,EAAG,EAAG,OAK7C,IAAM,EAAuB,SAAC,GACxB,IAAA,IAAI,EAAI,EAAG,EAAI,EAAG,IAClB,GAAA,EAAS,GAAG,YAAc,EACtB,OAAA,EAGF,OAAA,GAUK,QAAA,cAAgB,SAAC,EAAe,GACtC,IAAA,EAAY,EAAqB,GACjC,EAAY,EAAS,GACnB,EAAA,EAAA,KACJ,GAAA,EAAY,EAAE,CACX,IAAA,EAAc,EAAS,EAAU,YACjC,EAAQ,KAAK,IAAI,EAAG,KAAK,IAAI,EAAa,IAAO,IACjD,EAAa,EAAA,IAAI,SAAA,GAAO,OAAA,EAAM,GAAO,GACrC,EAAU,QAAA,eAAe,EAAW,EAAQ,GAE3C,MAAA,CACG,KAAM,WACf,SAHsB,EAAA,cAAc,EAAO,CAAC,IAI5C,YAAa,EAAW,KACf,YAAa,EAAQ,EAAU,YAC/B,YAAa,EAAe,GACrC,WAAY,CACX,MAAO,EAAW,KAAO,EACzB,KAAM,EAAW,KACjB,KAAM,EAAW,OAKb,IAAA,EAAS,EAAS,GAAW,aAC5B,MAAA,CACG,KAAM,WACf,SAAU,CAAC,QAAA,iBAAiB,EAAQ,IACpC,YAAa,EACJ,YAAa,EAAS,EAAK,KAC3B,YAAa,EAAe,GACrC,WAAY,CACX,MAAO,EAAS,EAChB,KAAM,EAAK,KACX,KAAM,EAAK,KAAO;;AC9/BT,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA/Bb,IAAA,EAAA,QAAA,aACA,EAAA,QAAA,kBACA,EAAA,QAAA,mBACA,EAAA,QAAA,SACA,EAAA,QAAA,oBACA,EAAA,QAAA,eAGA,EAAA,QAAA,YASM,EAAc,SAAC,EAAkB,EAAyB,EAA4B,GACrF,IAAA,EAAyB,EAAA,KAAK,EAAA,UAAU,EAAA,gBAAgB,EAAW,OAAQ,EAAA,WAAlD,CAA8D,GACvF,EAAwB,EAAA,IAAI,EAAA,SAAS,EAAU,UAAvB,CAAkC,GAC1D,EAAsB,CAC3B,EAAe,GAAK,EAAa,GACjC,EAAe,GAAK,EAAa,IAE5B,EAAyB,CAC9B,EAAoB,GAAK,EAAc,WAAW,MAClD,EAAoB,GAAK,EAAc,WAAW,MAE5C,OAAA,EAAA,YAAY,EAAZ,CAA2B,IAGtB,QAAA,WAAa,SAAC,GAC1B,EAAA,mBAAmB,CAClB,SAAU,UADX,CAEG,GAEK,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,SACJ,EAA6B,EAAA,KAAK,EAAA,UAAU,GAAQ,EAAA,WAAvB,CAAmC,EAAK,UAEnE,EAAc,EAAiB,WAC/B,EAAgB,EAAA,IAAI,EAAA,SAAS,EAAI,GAAW,EAAiB,YAC7D,EAAS,CAAC,IAAM,KAChB,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,EAAA,GAAA,EAAA,gBAAA,IAAC,EAAA,EAAA,GAAe,EAAA,EAAA,GAKhB,EAAU,EAAA,cAAc,EAAe,GACvC,EAAc,EAAA,IAAI,EAAA,SAAS,GAAW,EAAQ,YAC9C,EAAe,EAAQ,SAIvB,EAA2B,CAAC,EAF0D,IAAxE,EAAQ,YAAc,EAAW,EAAY,KAAO,EAAY,OACrD,EAAY,KAAO,EAAY,OAGxD,EAAmB,CACxB,GAAY,EAAQ,YAAc,EAAO,IAAK,GAE/C,OAAO,OAAO,EAAkB,CAAE,SAAU,IAExC,IAAA,EAAiC,CACpC,KAAM,WAAY,MAAK,EACvB,SAAU,EACV,SAAU,CAAC,EAAe,GAAI,EAAe,GAAK,EAAiB,IACnE,WAAY,GAET,EAA0B,EAAK,MAAQ,EAAY,EAAO,EAAgB,EAAQ,YAAa,EAAK,YAAS,EAQ3G,EAAS,GAAiB,EAAc,SAAS,GAAK,GAAM,EAAc,SAAS,GAAK,EAC1F,EAAQ,IACX,EAAc,SAAS,GAAK,EAC5B,EAAiB,SAAS,IAAM,EAChC,EAAgB,SAAS,IAAM,GAG1B,IAAA,EAAa,EAAA,uBAAuB,CAAC,EAAiB,GAAe,OAAO,EAAA,YAElF,OAAA,EAAA,CACC,KAAM,OAAQ,WAAU,EACxB,QAAS,EACT,SAAU,GACN,EAAgB,CAAE,MAAO,GAAkB;;ACjEpC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvBb,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,gCACA,EAAA,QAAA,YAGA,EAAA,QAAA,WAUM,EAAmB,KACnB,GAAmB,KAEnB,EAAmB,SAAC,EAAc,GAAiB,OAAA,EAAA,iBAAiB,EAAM,WAAY,EAAM,SAAU,EAAK,WAAW,KACtH,EAAqB,SAAC,EAAc,GAAkB,OAAA,EAAA,KAC3D,MAAM,KAAM,EAAA,IAAI,SAAC,GAAiB,OAAA,EAAiB,EAAO,GAAM,QAAQ,EAAA,IADb,CAE1D,IAEW,QAAA,eAAiB,SAAC,GAC9B,EAAA,mBAAmB,CAClB,KAAM,UADP,CAEG,GAEK,IAAA,EAAA,EAAA,KACF,EAAQ,EAAA,gBAAgB,EAAU,CACvC,KAAM,EAAS,MAAM,KACrB,WAAY,OACZ,SAAU,YAEX,MAAM,KAAK,GAAM,QAAQ,SAAA,GAAQ,OAAA,EAAA,mBAAmB,EAAO,KACnD,IAAA,EAAA,EAAA,SACF,EAAa,EAAA,IAAI,EAAA,SAAS,GAAb,CAAwB,CAC1C,MAAO,EAAmB,EAAO,GACjC,KAAM,EACN,KAAM,IAEA,MAAA,CACN,KAAM,OACN,QAAS,EAAS,KAClB,KAAI,EAAE,WAAU,EAAE,MAAK;;ACLZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvCb,IAAA,EAAA,QAAA,gCAIA,EAAA,QAAA,SACA,EAAA,QAAA,YAKA,EAAA,QAAA,WAYM,EAA0B,SAAC,EAAc,EAAuB,GAC/D,IAAA,EAAmB,EAAA,iBAAiB,EAAM,WAAY,EAAM,SAAU,GACrE,OAAA,EAAA,IAAI,EAAA,SAAS,EAAM,UAAnB,CAA8B,CACpC,MAAO,EAAQ,MACf,MAAO,EAAQ,MACf,KAAM,EAAQ,UAIV,EAAsB,SAAC,GAA2B,OAAA,SAAC,GACpD,GAAc,OAAd,EAAK,OAAkB,CAAC,QAAS,SAAS,SAAS,EAAM,YACrD,OAAA,EAEF,IAAA,EAA4B,MAAf,EAAM,KAAe,QAAU,QAC3C,OAAA,EAAA,MAAM,aAAc,EAAY,KAG3B,QAAA,eAAiB,SAAC,GAC9B,EAAA,mBAAmB,CAClB,MAAO,UADR,CAEG,GAEG,IAAA,EAAA,EAAA,yBAAA,EAAA,OAAE,EAAA,EAAA,WAAY,EAAA,EAAA,QACd,EAAO,OAAO,aAAa,GAC3B,EAAoB,EAAA,mBAAmB,GACvC,EAAgB,EAAA,KAAK,EAAoB,GAAzB,CAAgC,CACrD,KAAM,EAAK,MAAM,KACjB,WAAU,EAAE,SAAQ,IAEf,EAAQ,EAAA,gBAAgB,EAAM,GAChC,IAAC,EAAA,qBAAqB,EAAM,WAAY,EAAM,SAAU,GACrD,KAAA,QAAQ,EAAM,WAAU,IAAI,EAAM,SAAQ,2BAA2B,EAAI,IAEzE,MAAA,CACN,KAAM,OACN,QAAS,EAAK,KACd,QAAO,EAAE,MAAK,EACd,KAAM,OAAO,aAAa,GAC1B,WAAY,EAAwB,EAAO,EAAM,GACjD,KAAM,EAAA,IACL,EAAA,SAAS,EAAM,UADV,CAEJ,EAAA,kBAAkB,EAAM,WAAY,EAAS,EAAM;;AC/C1C,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhBb,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,iBACA,EAAA,QAAA,uBACA,EAAA,QAAA,SACA,EAAA,QAAA,YAGA,EAAA,QAAA,WAMM,EAA6B,SAAC,EAAc,EAAe,EAAmB,EAAoB,GAC/F,OAAA,GAAS,EAAY,GAAK,CAAC,IAAK,MAAM,SAAS,EAAM,MAAS,EAAI,EAAA,wBAAwB,EAAO,GAAS,EAAM,UAE5G,QAAA,eAAiB,SAAC,GAC9B,EAAA,mBAAmB,CAClB,MAAO,SADR,CAEG,GAQE,IANG,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,MACF,EAA0B,EAAA,IAAI,EAAA,KAAK,EAAA,UAAU,GAAQ,EAAA,YAA3B,CAAwC,GAEpE,EAAO,EACL,EAAgC,GAC7B,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CAChC,IAAA,EAAa,EAAY,GAE/B,EAAU,KAAK,CAAC,EAAM,IACtB,GAAQ,EAAW,WAAW,MAG9B,GAAQ,EAA2B,EAAO,EAAG,EAAM,OAAQ,EAAM,GAAI,EAAM,EAAI,IAG1E,IAAA,EAA8B,EAAY,IAAI,SAAC,EAAY,GAChE,OAAA,EAAA,EAAA,GAAY,GAAU,CAAE,SAAU,EAAU,OAGtC,MAAA,CACN,KAAM,WACN,MAAK,EACL,WAAY,EAAA,uBAAuB,GACnC,MAAO;;ACmDI,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhGb,IAAA,EAAA,QAAA,SAEA,EAAA,QAAA,gBAEA,EAAA,QAAA,WACA,EAAA,QAAA,YACA,EAAA,QAAA,iBAWM,EAAsB,SAAC,EAAkB,GACvC,MAAA,CACN,KAAK,MAAM,EAAY,GACvB,EAAY,IAIR,EAAoB,SAAI,EAAkB,GACxC,OAAA,EAAM,OACZ,SAAC,EAAa,EAAS,GAGf,OADP,EADe,EAAM,EAAK,QACb,KAAK,GACX,GAER,EAAA,IAAI,WAAM,MAAA,IAAI,EAAA,MAAM,EAAG,MAInB,EAAoB,SAAI,EAAkB,GACxC,OAAA,EAAM,OACZ,SAAC,EAAM,EAAM,GAGL,OADP,EADe,KAAK,MAAM,EAAM,IACnB,KAAK,GACX,GAER,EAAA,IAAI,WAAM,MAAA,IAAI,EAAA,MAAM,EAAG,EAAM,OAAS,MASlC,EAAe,SAAC,GAAkC,OAAA,EAAA,KAAK,CAAC,OAAQ,QAAS,EAAK,aAC9E,EAAc,SAAC,GAAkB,OAAA,EAAK,WAAW,OACjD,EAAoB,SAAC,GAAuC,OAAA,EAAA,SAAS,CAC1E,KAAM,KAAK,IAAG,MAAR,KAAY,EAAiB,IAAI,SAAA,GAAO,OAAA,EAAI,QAClD,KAAM,KAAK,IAAG,MAAR,KAAY,EAAiB,IAAI,SAAA,GAAO,OAAA,EAAI,WAG7C,EAA8B,SAAC,EAAwC,GACxE,MAAc,SAAd,EACI,EAEU,WAAd,EACI,EAAiB,EAEP,UAAd,EACI,OADJ,GAKC,EAAa,SAClB,EAAkB,EAClB,EAAwB,EACxB,EAAoB,GAEb,OAAA,EAAA,IACN,SAAC,GACM,IAAA,EAAO,EAAM,GACb,EAAA,EAAA,EAAA,GAAC,EAAA,EAAA,GAAU,EAAA,EAAA,GACV,OAAA,EAAA,YAAY,CAClB,EAAa,GAAY,EACxB,EAAM,oBAAqB,EAAU,GAAY,EAAK,WAAW,OAElE,EAAa,IAJP,CAKJ,IATE,CAWL,EAAA,MAAM,EAAG,EAAM,UAGZ,EAA2C,CAChD,WAAY,GACZ,WAAY,GACZ,oBAAqB,UAIT,QAAA,aAAe,SAAC,GAMxB,GALJ,EAAA,mBAAmB,CAClB,SAAU,SACV,SAAU,SACV,MAAO,UAEJ,EAAW,SAAW,EAAW,WAAa,EAAW,MAAM,OAC5D,KAAA,+BAA+B,EAAW,MAAM,OAAM,yCAAyC,EAAW,SAAW,EAAW,SAAQ,IAGzI,IAAA,EAAK,EAAA,EAAA,GACP,GACA,EAAW,OAET,EAAuD,EAAA,KAAK,CAAC,aAAc,cAAe,GACxF,EAAA,EAAA,SACA,EAAA,EAAA,SAAU,EAAA,EAAA,SAAU,EAAA,EAAA,MACxB,EAA2B,EAAA,IAAI,EAAA,gBAAgB,GAAQ,GAErD,EAAsB,EAAA,KAC3B,EAAA,QAAQ,EAAmB,CAAC,IAC5B,EAAA,IACC,SAAC,GAAmB,OAAA,EAAA,KACnB,EAAA,IAAI,GACJ,EAAA,IAFmB,CAGlB,KANwB,CAQ1B,GAEI,EAA4B,EAAA,KACjC,EAAA,QAAQ,EAAmB,CAAC,IAC5B,EAAA,IACC,SAAC,GAAmB,OAAA,EACnB,EAAA,IAAI,SAAC,GAAkB,OAAA,EAAa,IAAO,MAJZ,CAOhC,GAEI,EAA+D,EAAA,KACpE,EAAA,KAAK,CAAC,aAAc,eACpB,EAAA,IAAI,EAAA,SAAS,IAFuD,CAGnE,GAEM,EAAA,EAAA,WAAY,EAAA,EAAA,WACd,EAAa,EAAA,IAAI,IAAc,EAAW,GAAK,EAC/C,EAAc,EAAA,IAAI,EAAA,IAAI,SAAA,GAAO,OAAA,EAAI,KAAO,EAAI,MAA1B,CAAgC,KAAa,EAAW,GAAK,EAE/E,EADa,EAAc,EACP,EAAA,cAAc,GAClC,EAAyB,EAAA,KAAK,EAAA,IAAI,EAAA,IAAI,IAAc,EAAA,SAA3B,CAAqC,GAC9D,EAAyB,EAAQ,OACtC,SAAC,EAAQ,EAAQ,GACZ,GAAA,IAAW,EAAW,EAAG,OAAO,EAC9B,IAAA,EAAU,EAAO,EAAO,OAAS,GACjC,EAAA,CAAA,EAAA,EAAA,EAAA,IAAS,EAAA,EAAA,GACT,EADC,EAAA,GACgB,KAAO,EAAa,EAAQ,KAE5C,OADP,EAAO,KAAK,EAAU,GACf,GAER,CAAC,EAAO,EAAQ,GAAG,OAWb,OARP,EAAgB,EAAW,EAAU,EAAc,EAAc,EAAW,EAAO,GAQ5E,CACN,KAAM,SACN,SAAQ,EAAE,SAAQ,EAClB,WATkB,CAClB,MAAO,EACP,KAAM,EAAO,EACb,KAAM,GAMM,MAAK,EACjB,MAAO;;ACzHI,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhDb,IAAA,EAAA,QAAA,YACA,EAAA,QAAA,iBACA,EAAA,QAAA,iBACA,EAAA,QAAA,gCAKA,EAAA,QAAA,WAQM,EAA0B,SAAC,EAAc,EAAyB,EAAkB,GAClF,IAAA,EAAc,EAAe,WAAW,MACxC,EAAU,EAAA,WAAW,GAAU,EAAM,SAAW,EAAe,KAAO,EAQnE,OALwB,OAA3B,EAAe,UAEf,GADA,EAAc,KAAQ,EAAM,UAIzB,CACH,YAAW,EAAE,cAAe,IAI9B,EAAyB,SAAC,EAAc,EAAsB,EAA0B,EAAkB,GACxG,GAAA,EAAA,WAAW,GAAS,CACd,IAAA,EAAe,EAAgB,MAC/B,EAAkB,EAAgC,QAClD,EAAiB,EAAA,iBAAiB,EAAa,WAAY,EAAa,SAAU,GAClF,EAAe,EAAgB,WAAW,MAAQ,EAAe,iBAEjE,EAAA,EAAA,EAAA,EAAA,EAAA,GACC,MAAA,CAAE,aAAY,EAAE,YADf,EAAA,YAC4B,cADf,EAAA,eAGlB,MAAA,CACH,aAAc,EAAgB,WAAW,MACzC,YAAa,EAAe,WAAW,MACvC,cAAe,IAIV,QAAA,aAAe,SAAC,GACzB,EAAA,mBAAmB,CACf,QAAS,SACT,OAAQ,UAFZ,CAGG,GAEK,IAAA,EAAA,EAAA,QAAS,EAAA,EAAA,OACT,EAAA,EAAA,MACA,EAAA,EAAA,SACF,EAAkB,EAAA,gBAAgB,EAAhB,CAAuB,GACzC,EAAiB,EAAA,gBAAgB,EAAhB,CAAuB,GAExC,EAAsB,EAAuB,EAAO,EAAS,EAAiB,EAAQ,GAEtF,EAAU,EAAA,OAAO,EAAoB,YAAa,EAAoB,cAAgB,EAAoB,cAC1G,EAAkB,GAAM,EACxB,EAAU,EAAgB,WAAW,KAAO,EAAe,KAAK,KAAO,EAEvE,EAAkB,KAAK,IAAI,GAAI,GAC/B,EAA6B,EAAA,YAAY,CAAC,EAAiB,GAA9B,CAAkC,GAC/D,EAAgC,EAAA,YAAyB,CAAC,EAAS,GAAnC,CAA6C,GAO5E,OALwB,OAA3B,EAAe,UACf,EAAe,WAAW,OAAS,EAAoB,eAIpD,CACH,KAAM,WACN,MAAK,EAAE,WAHQ,EAAA,uBAAuB,CAAC,EAAmB,IAI1D,QAAS,EACT,OAAQ;;AC5EhB,aAuIa,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAzGb,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,SAEA,EAAA,QAAA,0BACA,EAAA,QAAA,qBACA,EAAA,QAAA,gCACA,EAAA,QAAA,sBACA,EAAA,QAAA,iBACA,EAAA,QAAA,iBACA,EAAA,QAAA,qBACA,EAAA,QAAA,mBACA,EAAA,QAAA,mBACA,EAAA,QAAA,YACA,EAAA,QAAA,iBAMM,EAAwD,CACjD,SAAA,EAAA,eACA,SAAA,EAAA,eACF,OAAA,EAAA,aACG,UAAA,EAAA,gBACL,KAAA,EAAA,WACE,OAAA,EAAA,aACE,SAAA,EAAA,cAGb,EAAA,SAAA,GACC,SAAA,EAAY,GAAZ,IAAA,EACC,EAAA,KAAA,KAAM,IAAQ,KA0EH,OAzEX,EAAK,KAAO,mBAyED,EAvEb,OAL+B,EAAA,EAAA,GAK/B,EALA,CAA+B,OAM/B,EAAA,SAAA,GACC,SAAA,EAAY,GAAZ,IAAA,EACC,EAAA,KAAA,KAAM,IAAQ,KAoEH,OAnEX,EAAK,KAAO,mBAmED,EAjEb,OAL+B,EAAA,EAAA,GAK/B,EALA,CAA+B,OAOzB,EAAsB,SAAC,GACxB,GAAiB,iBAAV,EACJ,KAAA,8BAEH,QAAc,IAAd,EAAK,KACF,MAAA,IAAI,EAAiB,gCAIxB,GAAA,QAAQ,QAAQ,GAAmB,SAAS,EAAK,MAC7C,OAAA,EAAkB,EAAK,MAE3B,GAAA,EAAA,WAAW,GAAO,OAAO,EAAA,eACzB,GAAA,EAAA,WAAW,GAAO,OAAO,EAAA,eAGvB,MAAA,IAAI,EAAwC,SAAtB,EAAa,KACxC,4DACA,IAAI,EAAK,KAAI,+BAaF,QAAA,YAAc,SAAC,GAAkD,OAAA,SAAC,GAG5D,IAFZ,IAAA,EAAwB,GAEZ,EAAA,EAAA,EADK,QAAQ,QAAQ,GACrB,EAAA,EAAA,OAAA,IAAK,CAAZ,IAAA,EAAG,EAAA,GACb,EAAS,GAAO,EAAU,GAAK,EAAS,IAElC,OAAA,IAIK,QAAA,WAA8B,SAAC,GACpC,OAAA,EAAoB,EAApB,CAA0B,IAErB,QAAA,gBAAkB,SAAC,GACxB,OAAA,EAAA,KAAK,EAAA,UAAU,GAAQ,QAAA,aAK/B,IAAM,EAAuB,CAC5B,KAAM,IACN,SAAU,GACV,MAAO,SAMF,EAAkB,SAAC,GAAiC,OAAA,OAAO,OAAO,EAAM,CAC7E,MAAO,EAAK,WAAW,MACvB,OAAQ,EAAA,gBAAgB,EAAK,eAEjB,QAAA,OAAS,SAAC,GAA4C,OAAA,EAAA,KAClE,QAAA,gBAAgB,GAAe,EADmC,CAEjE;;ACUW,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAtJb,IAAA,EAAA,QAAA,gCAEA,EAAA,QAAA,yBAIA,EAAA,QAAA,eAGA,EAAA,QAAA,gBAEa,QAAA,mBAAqB,WAAA,OAAA,OAAA,OAAA,OAAA,EAAA,WA2IrB,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAAA,EAAA,OAAA,KAAA,EArIZ,MALgB,wDACI,SACd,EAA6C,EAAA,gBAAgB,OAAO,SAAC,EAAQ,GAwIvE,IAAA,EAxI+E,OAAA,OAAO,OAAO,IAAM,EAAA,IAD3F,SAEJ,GAAM,8DAA2B,EAAG,OADuC,KAEvF,IACJ,CAAA,EAAM,EAAA,aAAa,IAqIP,KAAA,EAAA,OArIZ,EAAA,OAqIY,CAAA,SArHb,IAAM,EAAoB,SAAC,EAA+B,GACnD,IAAA,EAAM,EAAK,WACX,EAAS,EAAI,KAAO,EAAI,KAE9B,EAAI,OACJ,EAAI,YACJ,EAAI,KAAK,EAAG,EAAI,KAAM,EAAI,MAAO,GACjC,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC,EAAI,UAAY,EAChB,EAAI,SACJ,EAAI,UAEJ,EAAI,OACJ,EAAI,YAEJ,EAAI,OAAO,EADD,GAEV,EAAI,OAAO,EAAI,MAFL,GAGV,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC,EAAI,UAAY,EAChB,EAAI,YAAc,MAClB,EAAI,SACJ,EAAI,WAEC,EAAa,SAAC,EAA+B,EAAc,GAChE,EAAI,OACJ,EAAI,KAAU,EAAM,SAAQ,YAAY,EAAM,WAAU,IAAI,EAAM,SAClE,EAAI,MAAM,GAAI,GACV,EAAM,0BAET,EAAI,OAAO,MAEZ,EAAI,SAAS,EAAM,EAAG,GACtB,EAAI,WAEC,EAAa,SAAC,EAA+B,GAAsB,OAAA,EAAW,EAAK,EAAK,MAAO,EAAK,OACpG,EAAiB,SAAC,EAA+B,GAAsB,OAAA,EAAW,EAAK,EAAK,MAAO,EAAK,OAExG,EAAiB,SAAC,EAA+B,GACtD,EAAI,OACI,IAAA,EAAA,EAAA,MAAA,SACR,EAAI,MAAM,EAAU,GACpB,EAAA,aAAa,EAAK,EAAK,UACvB,EAAI,OACJ,EAAI,WAEC,EAAa,SAAC,EAA+B,GAC5C,IAAA,EAAY,EAAK,WAAW,KAAO,EAAK,WAAW,KACzD,EAAI,YACJ,EAAI,OAAO,EAAG,GACd,EAAI,OAAO,EAAK,WAAW,MAAO,GAClC,EAAI,UAAY,EAChB,EAAI,UAEC,EAAiB,SAAC,EAA+B,EAAe,GAAoB,OAAA,EAAA,SAAS,EAAO,GACxG,OAAO,EAAA,WAAW,QAAS,SAAA,GAAW,OAAA,QAAA,WAAW,EAAK,MAElD,EAAc,SAAC,EAA+B,GAAqB,OAAA,EAAM,QAAQ,SAAA,GAAQ,OAAA,QAAA,WAAW,EAAK,MAClG,QAAA,WAAa,SAAC,EAA+B,GAKrD,GAHJ,EAAI,OAEJ,EAAI,UAAS,MAAb,EAAiB,EAAK,UAClB,EAAK,OAAS,EAAK,MAAM,MAAM,CAC5B,IAAA,EAAQ,EAAK,MAAM,MACzB,OAAO,OAAO,EAAK,CAClB,YAAa,EACb,UAAW,IAMP,IAAA,EAAW,EAAK,KACL,SAAb,EACH,EAAW,EAAK,GAEK,SAAb,EACR,EAAe,EAAK,GAEC,aAAb,EACR,EAAe,EAAK,GAEC,aAAb,EACR,EAAY,EAAM,EAAyB,OAEtB,aAAb,EACR,EAAe,EAAK,EAAM,CAAC,YAAa,OAAQ,gBAE3B,SAAb,EACR,EAAW,EAAK,GAEK,WAAb,EACR,EAAe,EAAK,EAAM,CAAC,UAAW,MAAO,QAExB,SAAb,EACR,EAAe,EAAK,EAAM,CAAC,UAAW,WAAY,UAE7B,WAAb,EACR,EAAY,EAAM,EAAuB,OAEpB,aAAb,EACR,EAAe,EAAK,EAAM,CAAC,UAAW,WAEjB,cAAb,GACR,EAAe,EAAK,EAAM,CAAC,YAAa,YAAa,eAGtD,EAAI,WAEQ,QAAA,wBAA0B,SAAC,EAA2B,GAC3D,MAAA,EACL,EAAO,MAAQ,EAAK,WAAW,OAAS,GACxC,EAAO,OAAS,EAAK,WAAW,KAAO,EAAK,WAAW,MAAQ,IAGrD,QAAA,mBAAqB,SAAC,EAA2B,GAA4B,OAAA,EAAA,YAAY,QAAA,wBAAwB,EAAQ,GAA5C,CAAmD,IAEhI,QAAA,oBAAsB,SAAC,EAA2B,EAA+B,GAC7F,EAAI,OACJ,EAAI,aAAa,EAAG,EAAG,GAAI,EAAG,EAAG,EAAO,QACxC,QAAA,WAAW,EAAK,GAChB,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJQ,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHb,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,QAAA,gBAEa,QAAA,cAAgB,WAAM,OAAA,EAAA,aAAa,EAAA;;AC8JnC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAhKb,IAAA,EAAA,QAAA,+BAEa,QAAA,iBAAmD,CACtD,KAAA,KACA,KAAA,KACA,KAAA,KACA,KAAA,KAEF,GAAA,MACD,KAAA,MACF,GAAA,MACI,IAAA,MACC,KAAA,MACD,IAAA,MACA,IAAA,MACC,KAAA,MACF,GAAA,MACA,GAAA,MAEA,GAAA,MACA,GAAA,MACA,GAAA,MACE,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACA,KAAA,MACC,MAAA,MACD,KAAA,MACA,KAAA,MAEF,GAAA,OACC,IAAA,OACD,GAAA,OACG,MAAA,OACD,KAAA,OACA,KAAA,OAEF,GAAA,QACC,IAAA,QACD,GAAA,QACG,MAAA,QACD,KAAA,QACA,KAAA,QAEF,GAAA,QACA,GAAA,QACA,GAAA,QAEC,IAAA,MACC,KAAA,MACD,IAAA,MACA,IAAA,MACA,IAAA,MACD,GAAA,MAEE,KAAA,MACA,KAAA,MACA,KAAA,MACF,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MAED,GAAA,MACA,GAAA,MACC,IAAA,MACA,IAAA,MACD,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,MACD,GAAA,MACA,GAAA,MACC,IAAA,MACD,GAAA,MACA,GAAA,MACC,IAAA,MACD,GAAA,MACC,IAAA,MACD,GAAA,MACC,IAAA,MACD,GAAA,MACC,IAAA,MACA,IAAA,MACD,GAAA,MACC,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACC,KAAA,MACD,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACA,IAAA,MACC,KAAA,MACD,IAAA,MACA,IAAA,MACC,KAAA,MACD,IAAA,MACA,IAAA,MACA,IAAA,MACD,GAAA,MACA,GAAA,MACA,GAAA,MACC,IAAA,MACA,IAAA,MACC,KAAA,MACA,KAAA,MACD,IAAA,MACA,IAAA,MACC,KAAA,MACA,KAAA,OAGG,QAAA,kBAAoB,SAAC,GACxB,IAAA,EAAU,EAAA,cAAc,GAC1B,GAAC,EACE,OAAA,QAAA,iBAAiB;;ACkhBf,aAAA,IAAA,EAAA,MAAA,KAAA,UAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,EAAA,MAAA,KAAA,gBAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,GAAA,UAAA,GAAA,OAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,IAAA,EAAA,UAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAvnBb,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,gCACA,EAAA,QAAA,wBA6BM,EAAqB,CACvB,OAAQ,OAAQ,SAAU,SAAU,QAWlC,EAAmB,SAAC,EAAc,GAO7B,OANc,IAAjB,EAAM,QAAwC,iBAAjB,EAAA,KAAK,GAClC,EAAM,KAAK,GAGX,EAAM,EAAM,OAAS,IAAM,EAExB,GAEL,EAAU,SAAC,GAAsB,OAAA,MAAM,QAAQ,IAE/C,EAAwB,SAAC,GAEtB,IADD,IAAA,EAAmC,GAC9B,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAI,CACjC,IAAA,EAAO,EAAW,GAClB,EAAa,EAAW,OAAO,GACjC,GAAA,EAAW,WAAW,WAAtB,CACM,IAAA,EAAiB,EAAI,EAEvB,IADE,EAAe,EAAW,QAAQ,IAAK,IAC1B,EACT,KAAA,iDAEJ,IAAA,EAAU,EAAW,UAAU,EAAgB,GACrD,EAAU,KAAK,CACX,KAAM,MACN,KAAM,IAEV,EAAI,OAGV,GAAA,EAAW,WAAW,aAAtB,CACG,IACA,EADA,EAAiB,EAAI,EAEvB,IADE,EAAe,EAAW,QAAQ,IAAK,IAC1B,EACZ,KAAA,0DAED,EAAU,EAAW,UAAU,EAAgB,GACrD,EAAU,KAAK,CACd,KAAM,KACN,KAAM,IAEP,EAAI,OAGL,EAAY,EAAiB,EAAW,GAE/B,OAAA,GAIL,EAAuB,SAAC,GACzB,IAAA,EAAW,EAAA,iBAAiB,GAKzB,OAJF,IACJ,QAAQ,KAAQ,OAAO,aAAa,GAAQ,6EAC5C,EAAW,OAEL,GAEF,EAAmB,SAAC,GAEjB,IADD,IAAA,EAAW,KACN,EAAI,EAAG,EAAI,EAAA,SAAS,OAAQ,IAE5B,IADC,IAAA,EAAa,EAAA,SAAS,GACnB,EAAI,EAAG,EAAI,EAAW,MAAM,OAAQ,IAAI,CACvC,IAAA,EAAW,EAAW,MAAM,GAC7B,EAAI,WAAW,OAEf,GAAY,EAAS,OAAS,EAAS,MAAM,UAC9C,EAAW,CACtB,MAAO,EACP,QAAS,EAAW,QACpB,WAAY,EAAW,cAKjB,OAAA,GAEL,EAA2B,SAAC,GACvB,OAAA,EAAmB,KAAK,SAAA,GAAY,OAAA,EAAI,WAAW,MAExD,EAAe,SAAC,GAAiB,OAAuB,KAAvB,EAAK,WAAW,IACjD,EAA0B,SAAC,GAExB,IADD,IAAA,EAAuD,GAClD,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAI,CACjC,IAAA,EAAO,EAAW,GACpB,GAAA,EAAa,GAAM,CACb,IAAA,EAAa,EAAW,OAAO,EAAI,GAEnC,EAAgB,EAAyB,GAC3C,GAAA,EAAc,CACd,EAAU,KAAK,CACX,KAAM,sBACN,MAAO,IAEX,GAAK,EAAc,OACnB,SAGE,IAAA,EAAa,EAAiB,GAChC,GAAA,EAAW,CACH,IAAA,EAAA,EAAA,QACJ,EAAW,EAAA,iBAAiB,GAC3B,IACD,QAAQ,KAAK,+BAA+B,EAAW,MAAK,gFAC3E,EAAW,OAEA,EAAU,KAAK,CACX,KAAM,EACrB,MAAO,OAAO,aAAa,GAC3B,MAAO,CACN,WAAY,EAAW,WACvB,SAAU,EAAA,mBAAmB,EAAW,eAG9B,GAAK,EAAW,MAAM,OACtB,SAGE,KAAA,8CAA8C,EAAU,IAElE,EAAY,EAAiB,EAAW,GAErC,OAAA,GAML,EAAU,SAAC,GAA0B,MAAA,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK,SAAS,IACjG,EAAyB,SAAC,GAWvB,IAVD,IAAA,EAA8C,GAC9C,GAAwB,EACxB,EAA4B,KAC1B,EAAoB,WACtB,EAAU,KACN,EAAkB,OAAS,EAC3B,CAAE,KAAM,MAAO,KAAM,GACrB,CAAE,KAAM,MAAO,MAAO,KAGrB,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAI,CACjC,IAAA,EAAO,EAAW,GAC1B,EAAQ,IAAkB,MAAT,GACN,IACD,GAAwB,EACxB,EAAoB,IAExB,GAAqB,IAGjB,IACA,IACA,GAAwB,GAE5B,EAAY,EAAiB,EAAW,IAMzC,OAHH,GACA,IAEG,GAGL,EAAiB,SAAC,GAElB,IADD,IAAA,EAAiD,GAC5C,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAK,CACrC,IAAA,EAAO,EAAW,GACX,MAAT,EAOS,MAAT,EAOJ,EAAY,EAAiB,EAAW,GANvC,EAAU,KAAK,CACd,KAAM,cACN,MAAO,IATR,EAAU,KAAK,CACd,KAAM,aACN,MAAO,IAaH,OAAA,GAGF,EAAkB,SAAC,GAEhB,IADD,IAAA,EAAmD,GAC9C,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAI,CACjC,IAAA,EAAO,EAAW,GACX,MAAT,EAOS,MAAT,EAOJ,EAAY,EAAiB,EAAW,GANpC,EAAU,KAAK,CACX,KAAM,YACN,MAAO,MATX,EAAU,KAAK,CACX,KAAM,cACN,MAAO,MAaZ,OAAA,GAGL,EAAkB,CACvB,GACA,EACA,IAEK,EAAgB,SAAC,GAAoB,OAAA,EAAgB,SAAS,IAC9D,EAAgB,SAAC,GAEd,IADC,IAAA,EAAmC,GAChC,EAAI,EAAG,EAAI,EAAW,OAAQ,IAAI,CACjC,IACN,EADa,EAAW,GACT,WAAW,GAC5B,IAAA,EAAc,GAAd,CACQ,IAAA,EAAW,EAAqB,GACtC,EAAU,KAAK,CACX,KAAM,EACN,MAAO,OAAO,aAAa,MAG5B,OAAA,GAGL,EAAsB,EAAA,MACxB,SAAC,EAAoC,GAE5B,IADC,IAAA,EAA0C,GACvC,EAAI,EAAG,EAAI,EAAkB,OAAQ,IAAI,CACxC,IAAA,EAAO,EAAkB,GACV,iBAAV,EACP,EAAU,KAAI,MAAd,EAAkB,EAAa,IAG/B,EAAU,KAAK,GAGhB,OAAA,IAIT,EAAwC,CAC1C,EACA,EACA,EACA,EACA,EACA,GAEE,EAAW,SAAC,GAEa,IADvB,IAAA,EAAuC,CAAC,GACjB,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAc,CAA9B,IAAA,EAAY,EAAA,GACnB,EAAS,EAAoB,EAAc,GAExC,OAAA,GAQL,EAAoB,EAAA,MACtB,SAAC,EAAc,EAAe,GACnB,OAAA,EAAQ,OAAS,GAAS,EAAgB,QAAU,IAG7D,EAAuB,CACpB,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KAEH,EAAe,SAAC,EAAiB,GAA0B,OAAA,EAAK,OAAS,GACzE,EAAkB,SAAC,EAAiB,GAA6B,OAAA,EAAM,SAAS,EAAK,OAKrF,EAAqB,SAAC,EAAqB,EAAoB,EAA6B,GAEzF,IADD,IAAA,EAAQ,EACH,EAAI,EAAa,EAAG,EAAI,EAAO,OAAQ,IAAI,CAC1C,IAAA,EAAQ,EAAO,GACjB,GAAA,EAAa,GACb,SAGA,GAAA,EAAW,IAEG,MADd,EAEW,OAAA,EAIZ,OAAC,GAEN,EAAiB,SAAC,GAEf,IADF,IAAA,EAA2E,GACrE,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAI,CAC5B,IAAA,EAAO,EAAM,GACf,GAAA,EAAgB,EAAM,CAAC,aAAc,SAArC,CACM,IAAA,EAA4B,eAAd,EAAK,KAAwB,cAAgB,QAC3D,EAAa,EAA6C,MAC1D,EAAW,EACb,EAAO,EACP,EAAkB,EAAK,KAAM,GAC7B,EAAkB,EAAa,EAAqB,KAEpD,GAAA,EAAW,EACL,KAAA,2CAGb,IAAA,EAAW,EAAM,MAAM,EAAI,EAAG,GAC9B,EAAiB,EAAgB,GACrB,eAAd,EAAK,KACR,EAAU,KAAK,GAGf,EAAU,KAAK,CACd,KAAM,YACN,UAAW,EACX,UAAW,EAAM,GACjB,WAAY,EAAM,KAIpB,EAAI,OAID,EAAa,EAAM,gBACvB,EAAU,KAAK,GAET,OAAA,GAMF,EAAoB,SAAC,GACnB,GAAgB,IAAhB,EAAK,OACC,KAAA,uCAEH,MAAA,CACH,KAAM,WACZ,UAAW,EAAK,GAChB,YAAa,EAAK,KAGd,EAAgB,SAAC,GAClB,GAAgB,IAAhB,EAAK,QAAgB,EAAK,OAAS,EAChC,KAAA,yCAGH,OAAgB,IAAhB,EAAK,OACD,CACN,KAAM,OACN,SAAU,EAAK,IAIT,CACN,KAAM,OACN,SAAU,EAAK,GACf,MAAO,EAAK,KAIT,EAAkB,SAAC,GACpB,GAAgB,IAAhB,EAAK,OACI,KAAA,qCAEH,MAAA,CACH,KAAM,WACZ,QAAS,EAAK,GACd,OAAQ,EAAK,KAGT,EAAkB,SAAC,GACpB,GAAA,EAAK,OAAS,EACX,KAAA,wCAIF,IAFD,IAAA,EAAwB,CAAC,IACzB,EAAqB,EAChB,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAI,CAC9B,IAAA,EAAO,EAAK,GACd,EAAkB,QAAS,IAAK,GACnC,EAAK,KAAK,KAGX,EAAK,EAAK,OAAS,GAAG,KAAK,GAC3B,EAAa,KAAK,IAAI,EAAY,EAAA,KAAK,GAAM,SAExC,IAAA,EAAY,CACjB,KAAM,WACN,MAAO,IASD,MAAA,CACN,KAAM,SACN,UAPD,EAAO,EAAK,IAAI,SAAA,GAAO,OAAA,EACnB,EACA,EAAA,MAAM,EAAG,EAAa,EAAI,QAAQ,IAAI,WAAM,OAAA,QAKhC,OACf,SAAU,EACV,MAAO,EAAA,QAAQ,KAGX,EAAmF,CAC7E,KAAA,EACA,KAAA,EACD,OAAA,EACA,OAAA,GAEL,EAA2B,SAAC,GACzB,MAAc,cAAd,EAAK,MAAoF,MAAzD,EAAuB,UAAwB,OAElF,EAAoB,SAAC,GAA6B,OAAA,EAAkB,OAAQ,IAAK,IACjF,EAAoB,SAAC,GAErB,IADC,IAAA,EAAY,GACT,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAI,CAC/B,IAAA,EAAO,EAAM,GACf,GAAA,EAAa,EAAM,cAAnB,CACG,IAAA,EAAkB,EACvB,EAAO,EACP,EAAkB,aAAc,KAChC,EAAkB,cAAe,MAE9B,GAAA,EAAkB,EACf,KAAA,6BAED,IAAA,EAAQ,EAAM,MAAM,EAAI,EAAG,GACjC,EAAU,KAAK,EAAgB,IAC/B,EAAI,MAXD,CAcA,IAAC,EAAkB,QAAS,IAAK,GAC9B,KAAA,iBAAiB,EAAK,KAAI,uCAEjC,EAAU,KAAK,IAET,OAAA,GAEF,EAAiB,SAAC,GAElB,IADC,IAAA,EAAgF,GAC7E,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CAChC,IAAA,EAAO,EAAM,GACf,GAAA,EAAa,EAAmB,uBAAhC,CACG,IAAA,EAAY,EAA2B,MACzC,IAAC,EAAuB,GAClB,MAAA,EAAQ,2BAEd,GAAA,IAAM,EAAM,OAAS,IAAM,EAAkB,EAAM,EAAI,IACpD,KAAA,YAAY,EAAQ,wBAErB,IAAA,EAAW,EAChB,EAAO,EAAI,EACX,EAAkB,OAAQ,KAC1B,EAAkB,QAAS,MAExB,GAAA,EAAW,EACR,KAAA,6BAGD,IAAA,EAAW,EAAkB,EAAM,MAAM,EAAI,EAAG,IACtD,EAAU,KAAK,EAAuB,GAAU,IAChD,EAAI,OAGL,EAAU,KAAK,GAET,OAAA,GAIF,EAAqB,SAAC,GACpB,OAAA,EAAgB,EAAM,CAAC,YAAa,iBAEtC,EAAe,SAAC,GAEb,IADC,IAAA,EAA2B,GACxB,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAI,CAClC,IAAA,EAAO,EAAM,GACf,GAAA,EAAmB,GAChB,KAAA,oDAEG,GAAA,IAAM,EAAM,OAAS,GAAM,EAAmB,EAAM,EAAI,IAAxD,CAKE,IAAA,EAAW,EAAM,EAAI,GACrB,EAAqB,EAAM,OAAS,EAAI,EAC9C,EAAgB,EAAa,EAAU,eACvC,EAAgB,EAAS,KACzB,EAAiB,EAAgB,YAAc,cAC3C,GAAuB,IAAvB,GAA4B,EAAmB,EAAM,EAAI,IACzD,MAAA,EAAa,YAEX,IAAA,EAAa,CACf,KAAM,SACN,QAAS,EAAM,IAIf,GAFJ,EAAW,EAAgB,MAAQ,OAAS,EAAM,EAAI,GAE3B,IAAvB,GAA6B,EAAa,EAAM,EAAI,GAAI,GAAxD,CAMA,GAAuB,IAAvB,EACA,MAAA,EAAc,YAElB,EAAW,EAAgB,MAAQ,OAAS,EAAM,EAAI,GACtD,EAAU,KAAK,GACf,GAAK,OAVD,EAAU,KAAK,GACf,GAAK,OApBL,EAAU,KAAK,GA+BhB,OAAA,GAGL,EAA8B,SAAC,GAChC,OAAiB,IAAjB,EAAM,OAAqB,EAAM,GAC3B,CACH,KAAM,WACZ,MAAO,IAIH,EAA2B,SAAC,GAC7B,GAAc,QAAd,EAAK,KAAgB,OAAO,EAC1B,IAAA,EAAQ,EAAkB,MACzB,MAAA,CAAC,IAAK,IAAK,KAAK,SAAS,IAE3B,EAAY,SAAC,GACX,OAAC,CAAC,MAAO,MAAO,SAAS,SAAS,EAAK,OAEzC,EAAuB,SAAC,GACzB,GAAiB,IAAjB,EAAM,OAAc,OAAO,EAE1B,IADC,IAAA,EAAY,GACT,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAI,CAC/B,IAAA,EAAO,EAAM,GACf,GAAC,EAAyB,GAI1B,GAAM,IAAN,GAAW,IAAM,EAAM,OAAS,EAAhC,CAQE,IAAA,EAAc,EAAU,EAAI,GAC5B,EAAe,EAAM,EAAI,GAC1B,EAAU,IAAiB,EAAU,GAQ1C,EAAU,KAAK,GAPd,EAAU,KAAI,EAAA,EAAA,GACV,GAAI,CACP,KAAM,cAZP,EAAU,KAAI,EAAA,EAAA,GACV,GAAI,CACP,KAAM,cANP,EAAU,KAAK,GAuBV,OAAA,GAGF,EAAkB,SAAC,GAAoC,OAAA,EAAA,KACzD,EACH,EACG,EACH,EACA,EAL4D,CAM3D,IAMW,QAAA,MAAQ,SAAC,GACX,OAAA,EAAA,KACH,EACN,EAFS,CAGL;;ACvrBG,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAHT,IAAA,EAAA,QAAA,mBAAS,QAAA,cAAA,EAAA,OACT,IAAA,EAAA,QAAA,sBAAS,QAAA,mBAAA,EAAA,mBAAoB,QAAA,oBAAA,EAAA,oBAC7B,IAAA,EAAA,QAAA,sBAAS,QAAA,cAAA,EAAA,cACT,IAAA,EAAA,QAAA,oBAAS,QAAA,gBAAA,EAAA","file":"math-layout-engine.js","sourceRoot":"../src","sourcesContent":["\nexport const nodeType = {\n\n\t//atomic\n\tord: \"ord\", /* ordinary (x, \\alpha, \\mu, ...) */ \n\top: \"op\", /* operator (\\sum, \\integral, \\sin, \\cos, ...) */ \n\tbin: \"bin\", /* binary operator (+ - * / % ...) */ \n\trel: \"rel\", /* relation (> < = ...) */ \n\topen: \"open\", /* open ( { [ */ \n\tclose: \"close\", /* close ) } ] */ \n\tpunct: \"punct\", /* punctuation ( , ; ) */ \n\n\t//groups/composite\n\tmathlist: \"mathlist\", \n\tfraction: \"fraction\",\n\troot: \"root\",\n\tscript: \"script\",\n\tdelimited: \"delimited\",\n\taccented: \"accented\",\n\tmatrix: \"matrix\"\n};\n\nexport const glyphTypes = [\"ord\", \"op\", \"bin\", \"rel\", \"open\", \"close\", \"punct\"];\nexport const compositeTypes = [\n\t\"mathlist\", \"fraction\", \"root\", \"script\", \"delimited\", \"accented\", \"matrix\"\n];\n\nimport { FormulaNode, TextNode, BoxNode } from './types';\n\nexport const isNodeTextual = (node: FormulaNode) : boolean => isNodeChar(node) || isNodeText(node);\nexport const isNodeChar = (node: FormulaNode) : boolean => glyphTypes.includes(node.type) && (node as TextNode).text === undefined;\nexport const isNodeText = (node: FormulaNode) : boolean => (node.type === \"ord\" || node.type === \"op\") && (node as TextNode).text !== undefined;\nexport const isNodeComposite = (node: FormulaNode) : boolean => compositeTypes.includes(node.type);","\n\n/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function () {\n  return false;\n};\nexport default F;","\n\n/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function () {\n  return true;\n};\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default { '@@functional/placeholder': true };","export default function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from './_curry1.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","import _curry2 from './internal/_curry2.js';\n\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\nvar add = /*#__PURE__*/_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n\n  idx = 0;\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n  idx = 0;\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n  return result;\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","import _concat from './internal/_concat.js';\nimport _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\nvar addIndex = /*#__PURE__*/_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n    return fn.apply(this, args);\n  });\n});\nexport default addIndex;","import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n  var start = idx < 0 ? list.length : 0;\n  var _idx = start + idx;\n  var _list = _concat(list);\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\nexport default adjust;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from './_isArray.js';\nimport _isTransformer from './_isTransformer.js';\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAll = /*#__PURE__*/function () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall = /*#__PURE__*/_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\nexport default _xall;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n    idx += 1;\n  }\n  return true;\n}));\nexport default all;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from './_has.js';\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js';\n\n// cover IE < 9 keys issues\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nexport default reduce;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\nvar allPass = /*#__PURE__*/_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n      idx += 1;\n    }\n    return true;\n  });\n});\nexport default allPass;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\nexport default always;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\nvar and = /*#__PURE__*/_curry2(function and(a, b) {\n  return a && b;\n});\nexport default and;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAny = /*#__PURE__*/function () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany = /*#__PURE__*/_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\nexport default _xany;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xany from './internal/_xany.js';\n\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\nvar any = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}));\nexport default any;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\nvar anyPass = /*#__PURE__*/_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n      idx += 1;\n    }\n    return false;\n  });\n});\nexport default anyPass;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\nvar ap = /*#__PURE__*/_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n  return acc;\n}","import _concat from './_concat.js';\nimport _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAperture = /*#__PURE__*/function () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture = /*#__PURE__*/_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\nexport default _xaperture;","import _aperture from './internal/_aperture.js';\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xaperture from './internal/_xaperture.js';\n\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\nvar aperture = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xaperture, _aperture));\nexport default aperture;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\nvar append = /*#__PURE__*/_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\nexport default append;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\nvar apply = /*#__PURE__*/_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\nexport default apply;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nexport default values;","import _curry1 from './internal/_curry1.js';\nimport apply from './apply.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\nimport keys from './keys.js';\nimport values from './values.js';\n\n// Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\nvar applySpec = /*#__PURE__*/_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\nexport default applySpec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/_curry2(function applyTo(x, f) {\n  return f(x);\n});\nexport default applyTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\nexport default ascend;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nexport default assoc;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1.js';\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\nvar assocPath = /*#__PURE__*/_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n  var idx = path[0];\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\nexport default assocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\nvar nAry = /*#__PURE__*/_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\nexport default nAry;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\nvar binary = /*#__PURE__*/_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\nexport default binary;","export default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport ap from './ap.js';\nimport curryN from './curryN.js';\nimport map from './map.js';\n\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\nvar liftN = /*#__PURE__*/_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\nexport default liftN;","import _curry1 from './internal/_curry1.js';\nimport liftN from './liftN.js';\n\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\nvar lift = /*#__PURE__*/_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\nexport default lift;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport and from './and.js';\nimport lift from './lift.js';\n\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\nvar both = /*#__PURE__*/_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\nexport default both;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nexport default curry;","import curry from './curry.js';\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _isArrayLike from './_isArrayLike.js';\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _forceReduced from './_forceReduced.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar preservingReduced = function (xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function (result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function (result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","import _curry2 from './_curry2.js';\nimport _flatCat from './_flatCat.js';\nimport map from '../map.js';\n\nvar _xchain = /*#__PURE__*/_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\nexport default _xchain;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _makeFlat from './internal/_makeFlat.js';\nimport _xchain from './internal/_xchain.js';\nimport map from './map.js';\n\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\nvar chain = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n  return _makeFlat(false)(map(fn, monad));\n}));\nexport default chain;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\nvar clamp = /*#__PURE__*/_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n  return value < min ? min : value > max ? max : value;\n});\nexport default clamp;","export default function _cloneRegExp(pattern) {\n                                  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\nvar clone = /*#__PURE__*/_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\nexport default clone;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\nvar comparator = /*#__PURE__*/_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\nexport default comparator;","import _curry1 from './internal/_curry1.js';\n\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\nvar not = /*#__PURE__*/_curry1(function not(a) {\n  return !a;\n});\nexport default not;","import lift from './lift.js';\nimport not from './not.js';\n\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\nvar complement = /*#__PURE__*/lift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _isArray from './_isArray.js';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nexport default slice;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\nvar reverse = /*#__PURE__*/_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\nexport default reverse;","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain.js';\nimport compose from './compose.js';\nimport map from './map.js';\n\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n  return pipeP.apply(this, reverse(arguments));\n}","import _curry2 from './internal/_curry2.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import nth from './nth.js';\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\nvar head = /*#__PURE__*/nth(0);\nexport default head;","export default function _identity(x) {\n  return x;\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\nvar identity = /*#__PURE__*/_curry1(_identity);\nexport default identity;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport head from './head.js';\nimport _reduce from './internal/_reduce.js';\nimport tail from './tail.js';\nimport identity from './identity.js';\n\n/**\n * Performs left-to-right function composition using transforming function. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, f(g, ...args)))\n */\nvar pipeWith = /*#__PURE__*/_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\nexport default pipeWith;","import _curry2 from './internal/_curry2.js';\nimport pipeWith from './pipeWith.js';\nimport reverse from './reverse.js';\n\n/**\n * Performs right-to-left function composition using transforming function. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, f(i, ...args)))\n */\nvar composeWith = /*#__PURE__*/_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\nexport default composeWith;","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import equals from '../equals.js';\n\nexport default function _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","import _indexOf from './_indexOf.js';\n\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","export default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFilter = /*#__PURE__*/function () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","import _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\n\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\nvar concat = /*#__PURE__*/_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\nexport default concat;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport map from './map.js';\nimport max from './max.js';\nimport reduce from './reduce.js';\n\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\nvar cond = /*#__PURE__*/_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n      idx += 1;\n    }\n  });\n});\nexport default cond;","import _curry2 from './internal/_curry2.js';\nimport curry from './curry.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\nvar constructN = /*#__PURE__*/_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n      case 2:\n        return new Fn($0, $1);\n      case 3:\n        return new Fn($0, $1, $2);\n      case 4:\n        return new Fn($0, $1, $2, $3);\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\nexport default constructN;","import _curry1 from './internal/_curry1.js';\nimport constructN from './constructN.js';\n\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\nvar construct = /*#__PURE__*/_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\nexport default construct;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\nvar contains = /*#__PURE__*/_curry2(_includes);\nexport default contains;","import _curry2 from './internal/_curry2.js';\nimport _map from './internal/_map.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import reduceBy from './reduceBy.js';\n\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\nvar countBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add.js';\n\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\nvar dec = /*#__PURE__*/add(-1);\nexport default dec;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nexport default defaultTo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\nvar descend = /*#__PURE__*/_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\nexport default descend;","import _includes from './_includes.js';\n\nvar _Set = /*#__PURE__*/function () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nexport default _Set;","import _curry2 from './internal/_curry2.js';\nimport _Set from './internal/_Set.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default difference;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\nvar differenceWith = /*#__PURE__*/_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n    idx += 1;\n  }\n  return out;\n});\nexport default differenceWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\nvar dissoc = /*#__PURE__*/_curry2(function dissoc(prop, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  delete result[prop];\n  return result;\n});\nexport default dissoc;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\nvar remove = /*#__PURE__*/_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\nexport default remove;","import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nexport default update;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\nimport _isArray from './internal/_isArray.js';\nimport assoc from './assoc.js';\nimport dissoc from './dissoc.js';\nimport remove from './remove.js';\nimport update from './update.js';\n\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\nvar dissocPath = /*#__PURE__*/_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n  }\n});\nexport default dissocPath;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\nvar divide = /*#__PURE__*/_curry2(function divide(a, b) {\n  return a / b;\n});\nexport default divide;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDrop = /*#__PURE__*/function () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nexport default _xdrop;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTake = /*#__PURE__*/function () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nexport default _xtake;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nexport default take;","import take from '../take.js';\n\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLast = /*#__PURE__*/function () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nexport default _xdropLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLast from './internal/_dropLast.js';\nimport _xdropLast from './internal/_xdropLast.js';\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nexport default dropLast;","import slice from '../slice.js';\n\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLastWhile = /*#__PURE__*/function () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile = /*#__PURE__*/_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLastWhile from './internal/_dropLastWhile.js';\nimport _xdropLastWhile from './internal/_xdropLastWhile.js';\n\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\nvar dropLastWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLastWhile, _dropLastWhile));\nexport default dropLastWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropRepeatsWith = /*#__PURE__*/function () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith = /*#__PURE__*/_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\nexport default _xdropRepeatsWith;","import nth from './nth.js';\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\nvar last = /*#__PURE__*/nth(-1);\nexport default last;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport last from './last.js';\n\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\nvar dropRepeatsWith = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n  if (len !== 0) {\n    result[0] = list[0];\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n  }\n  return result;\n}));\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport dropRepeatsWith from './dropRepeatsWith.js';\nimport equals from './equals.js';\n\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\nvar dropRepeats = /*#__PURE__*/_curry1( /*#__PURE__*/_dispatchable([], /*#__PURE__*/_xdropRepeatsWith(equals), /*#__PURE__*/dropRepeatsWith(equals)));\nexport default dropRepeats;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile = /*#__PURE__*/function () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n      this.f = null;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile = /*#__PURE__*/_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\nexport default _xdropWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropWhile from './internal/_xdropWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\nvar dropWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n  return slice(idx, Infinity, xs);\n}));\nexport default dropWhile;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\nvar or = /*#__PURE__*/_curry2(function or(a, b) {\n  return a || b;\n});\nexport default or;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport lift from './lift.js';\nimport or from './or.js';\n\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\nvar either = /*#__PURE__*/_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\nexport default either;","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\nvar empty = /*#__PURE__*/_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\nexport default empty;","import _curry2 from './internal/_curry2.js';\nimport drop from './drop.js';\n\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\nvar takeLast = /*#__PURE__*/_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\nexport default takeLast;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport takeLast from './takeLast.js';\n\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar endsWith = /*#__PURE__*/_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\nexport default endsWith;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\nvar eqBy = /*#__PURE__*/_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\nexport default eqBy;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\nvar eqProps = /*#__PURE__*/_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\nexport default eqProps;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindIndex = /*#__PURE__*/function () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex = /*#__PURE__*/_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\nexport default _xfindIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}));\nexport default findIndex;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLast = /*#__PURE__*/function () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast = /*#__PURE__*/_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\nexport default _xfindLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLast from './internal/_xfindLast.js';\n\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\nvar findLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx -= 1;\n  }\n}));\nexport default findLast;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLastIndex = /*#__PURE__*/function () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex = /*#__PURE__*/_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLastIndex from './internal/_xfindLastIndex.js';\n\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\nvar findLastIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n    idx -= 1;\n  }\n  return -1;\n}));\nexport default findLastIndex;","import _curry1 from './internal/_curry1.js';\nimport _makeFlat from './internal/_makeFlat.js';\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nexport default flatten;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nexport default flip;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\nvar forEach = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n  return list;\n}));\nexport default forEach;","import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n});\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nexport default groupBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\nvar gt = /*#__PURE__*/_curry2(function gt(a, b) {\n  return a > b;\n});\nexport default gt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\nvar gte = /*#__PURE__*/_curry2(function gte(a, b) {\n  return a >= b;\n});\nexport default gte;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nexport default hasPath;","import _curry2 from './internal/_curry2.js';\nimport hasPath from './hasPath.js';\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nexport default has;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\nvar hasIn = /*#__PURE__*/_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\nexport default hasIn;","import _objectIs from './internal/_objectIs.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nexport default identical;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\nvar ifElse = /*#__PURE__*/_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\nexport default ifElse;","import add from './add.js';\n\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\nvar inc = /*#__PURE__*/add(1);\nexport default inc;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\nvar includes = /*#__PURE__*/_curry2(_includes);\nexport default includes;","import reduceBy from './reduceBy.js';\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2.js';\nimport _indexOf from './internal/_indexOf.js';\nimport _isArray from './internal/_isArray.js';\n\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\nvar indexOf = /*#__PURE__*/_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\nexport default indexOf;","import slice from './slice.js';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\nimport _filter from './internal/_filter.js';\n\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\nvar innerJoin = /*#__PURE__*/_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\nexport default innerJoin;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\nvar insert = /*#__PURE__*/_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\nexport default insert;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\nvar insertAll = /*#__PURE__*/_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\nexport default insertAll;","import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqBy;","import identity from './identity.js';\nimport uniqBy from './uniqBy.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\nvar uniq = /*#__PURE__*/uniqBy(identity);\nexport default uniq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport _filter from './internal/_filter.js';\nimport flip from './flip.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\nvar intersection = /*#__PURE__*/_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\nexport default intersection;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list with the separator interposed between elements.\n *\n * Dispatches to the `intersperse` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} separator The element to add to the list.\n * @param {Array} list The list to be interposed.\n * @return {Array} The new list.\n * @example\n *\n *      R.intersperse('a', ['b', 'n', 'n', 's']); //=> ['b', 'a', 'n', 'a', 'n', 'a', 's']\n */\nvar intersperse = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('intersperse', function intersperse(separator, list) {\n  var out = [];\n  var idx = 0;\n  var length = list.length;\n  while (idx < length) {\n    if (idx === length - 1) {\n      out.push(list[idx]);\n    } else {\n      out.push(list[idx], separator);\n    }\n    idx += 1;\n  }\n  return out;\n}));\nexport default intersperse;","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\nvar objOf = /*#__PURE__*/_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\nexport default objOf;","import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\n\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function (xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function (a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function (result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\n\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\nvar into = /*#__PURE__*/_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\nvar invert = /*#__PURE__*/_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invert;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n  return out;\n});\nexport default invertObj;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nexport default invoker;","import _curry2 from './internal/_curry2.js';\n\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\nvar is = /*#__PURE__*/_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\nexport default is;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;","import invoker from './invoker.js';\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\nvar join = /*#__PURE__*/invoker(1, 'join');\nexport default join;","import _curry1 from './internal/_curry1.js';\nimport converge from './converge.js';\n\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\nvar keysIn = /*#__PURE__*/_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n  return ks;\n});\nexport default keysIn;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport equals from './equals.js';\n\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\nvar lastIndexOf = /*#__PURE__*/_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n      idx -= 1;\n    }\n    return -1;\n  }\n});\nexport default lastIndexOf;","export default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\nvar length = /*#__PURE__*/_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\nexport default length;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\n\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lens = /*#__PURE__*/_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\nexport default lens;","import _curry1 from './internal/_curry1.js';\nimport lens from './lens.js';\nimport nth from './nth.js';\nimport update from './update.js';\n\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\nvar lensIndex = /*#__PURE__*/_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\nexport default lensIndex;","import _curry1 from './internal/_curry1.js';\nimport assocPath from './assocPath.js';\nimport lens from './lens.js';\nimport path from './path.js';\n\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\nvar lensPath = /*#__PURE__*/_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\nexport default lensPath;","import _curry1 from './internal/_curry1.js';\nimport assoc from './assoc.js';\nimport lens from './lens.js';\nimport prop from './prop.js';\n\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\nvar lensProp = /*#__PURE__*/_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\nexport default lensProp;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\nvar lt = /*#__PURE__*/_curry2(function lt(a, b) {\n  return a < b;\n});\nexport default lt;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\nvar lte = /*#__PURE__*/_curry2(function lte(a, b) {\n  return a <= b;\n});\nexport default lte;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\nvar mapAccum = /*#__PURE__*/_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccum;","import _curry3 from './internal/_curry3.js';\n\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\nvar mapAccumRight = /*#__PURE__*/_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n  return [tuple[0], result];\n});\nexport default mapAccumRight;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nexport default mapObjIndexed;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\nvar match = /*#__PURE__*/_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\nexport default match;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\n\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\nvar mathMod = /*#__PURE__*/_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n  return (m % p + p) % p;\n});\nexport default mathMod;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\nvar maxBy = /*#__PURE__*/_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\nexport default maxBy;","import add from './add.js';\nimport reduce from './reduce.js';\n\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\nvar sum = /*#__PURE__*/reduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1.js';\nimport sum from './sum.js';\n\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\nvar mean = /*#__PURE__*/_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\nexport default mean;","import _curry1 from './internal/_curry1.js';\nimport mean from './mean.js';\n\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\nvar median = /*#__PURE__*/_curry1(function median(list) {\n  var len = list.length;\n  if (len === 0) {\n    return NaN;\n  }\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\nexport default median;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\nvar memoizeWith = /*#__PURE__*/_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n    return cache[key];\n  });\n});\nexport default memoizeWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default merge;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\nvar mergeDeepLeft = /*#__PURE__*/_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\nvar mergeDeepWith = /*#__PURE__*/_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\nexport default mergeDeepWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\nvar mergeLeft = /*#__PURE__*/_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\nexport default mergeLeft;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\nvar mergeRight = /*#__PURE__*/_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\nexport default mergeRight;","import _curry3 from './internal/_curry3.js';\nimport mergeWithKey from './mergeWithKey.js';\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\nvar mergeWith = /*#__PURE__*/_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\nexport default mergeWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\nvar min = /*#__PURE__*/_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\nexport default min;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\nvar minBy = /*#__PURE__*/_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\nexport default minBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\nexport default modulo;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\nvar multiply = /*#__PURE__*/_curry2(function multiply(a, b) {\n  return a * b;\n});\nexport default multiply;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\nvar negate = /*#__PURE__*/_curry1(function negate(n) {\n  return -n;\n});\nexport default negate;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\nvar none = /*#__PURE__*/_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\nexport default none;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport nth from './nth.js';\n\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\nvar nthArg = /*#__PURE__*/_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\nexport default nthArg;","import _curry3 from './internal/_curry3.js';\n\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\nvar o = /*#__PURE__*/_curry3(function o(f, g, x) {\n  return f(g(x));\n});\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1.js';\nimport _of from './internal/_of.js';\n\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\nvar of = /*#__PURE__*/_curry1(_of);\nexport default of;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\nvar omit = /*#__PURE__*/_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default omit;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nexport default once;","import _isFunction from './_isFunction.js';\nimport _toString from './_toString.js';\n\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\nvar otherwise = /*#__PURE__*/_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\nexport default otherwise;","import _curry3 from './internal/_curry3.js';\n\n// `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\nvar Identity = function (x) {\n  return { value: x, map: function (f) {\n      return Identity(f(x));\n    } };\n};\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\nvar over = /*#__PURE__*/_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\nexport default over;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\nvar pair = /*#__PURE__*/_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\nexport default pair;","import _arity from './_arity.js';\nimport _curry2 from './_curry2.js';\n\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\nvar partial = /*#__PURE__*/_createPartialApplicator(_concat);\nexport default partial;","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\nimport flip from './flip.js';\n\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\nvar partialRight = /*#__PURE__*/_createPartialApplicator( /*#__PURE__*/flip(_concat));\nexport default partialRight;","import filter from './filter.js';\nimport juxt from './juxt.js';\nimport reject from './reject.js';\n\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\nimport path from './path.js';\n\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\nvar pathEq = /*#__PURE__*/_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\nexport default pathEq;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\nvar pathOr = /*#__PURE__*/_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\nexport default pathOr;","import _curry3 from './internal/_curry3.js';\nimport path from './path.js';\n\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\nvar pathSatisfies = /*#__PURE__*/_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\nexport default pathSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default pick;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\nvar pickAll = /*#__PURE__*/_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n  return result;\n});\nexport default pickAll;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nexport default pickBy;","import composeK from './composeK.js';\nimport reverse from './reverse.js';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\nvar prepend = /*#__PURE__*/_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\nexport default prepend;","import multiply from './multiply.js';\nimport reduce from './reduce.js';\n\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\nvar product = /*#__PURE__*/reduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\nvar useWith = /*#__PURE__*/_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\nexport default useWith;","import _map from './internal/_map.js';\nimport identity from './identity.js';\nimport pickAll from './pickAll.js';\nimport useWith from './useWith.js';\n\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\nvar project = /*#__PURE__*/useWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\nexport default project;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\nexport default propEq;","import _curry3 from './internal/_curry3.js';\nimport is from './is.js';\n\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\nvar propIs = /*#__PURE__*/_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\nexport default propIs;","import _curry3 from './internal/_curry3.js';\nimport pathOr from './pathOr.js';\n\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\nvar propOr = /*#__PURE__*/_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\nexport default propOr;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\nvar propSatisfies = /*#__PURE__*/_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\nexport default propSatisfies;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\nexport default props;","import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n  var result = [];\n  var n = from;\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n  return result;\n});\nexport default range;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\nvar reduceRight = /*#__PURE__*/_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n  return acc;\n});\nexport default reduceRight;","import _curryN from './internal/_curryN.js';\nimport _reduce from './internal/_reduce.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\nvar reduceWhile = /*#__PURE__*/_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\nexport default reduceWhile;","import _curry1 from './internal/_curry1.js';\nimport _reduced from './internal/_reduced.js';\n\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\nvar reduced = /*#__PURE__*/_curry1(_reduced);\nexport default reduced;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\nvar times = /*#__PURE__*/_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n  list = new Array(len);\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n  return list;\n});\nexport default times;","import _curry2 from './internal/_curry2.js';\nimport always from './always.js';\nimport times from './times.js';\n\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\nvar repeat = /*#__PURE__*/_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\nexport default repeat;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\nvar replace = /*#__PURE__*/_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\nexport default replace;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;","import _curry2 from './internal/_curry2.js';\nimport ap from './ap.js';\nimport map from './map.js';\nimport prepend from './prepend.js';\nimport reduceRight from './reduceRight.js';\n\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\nvar sequence = /*#__PURE__*/_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\nexport default sequence;","import _curry3 from './internal/_curry3.js';\nimport always from './always.js';\nimport over from './over.js';\n\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\nvar set = /*#__PURE__*/_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\nexport default set;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\nvar sort = /*#__PURE__*/_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n    return result;\n  });\n});\nexport default sortWith;","import invoker from './invoker.js';\n\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\nvar split = /*#__PURE__*/invoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2.js';\nimport length from './length.js';\nimport slice from './slice.js';\n\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\nvar splitAt = /*#__PURE__*/_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\nexport default splitAt;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\nvar splitEvery = /*#__PURE__*/_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n  var result = [];\n  var idx = 0;\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n  return result;\n});\nexport default splitEvery;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\nvar splitWhen = /*#__PURE__*/_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\nexport default splitWhen;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\nvar subtract = /*#__PURE__*/_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\nexport default subtract;","import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;","import _curry3 from './internal/_curry3.js';\nimport concat from './concat.js';\nimport differenceWith from './differenceWith.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\nvar symmetricDifferenceWith = /*#__PURE__*/_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\nvar takeLastWhile = /*#__PURE__*/_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n  return slice(idx + 1, Infinity, xs);\n});\nexport default takeLastWhile;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTakeWhile = /*#__PURE__*/function () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile = /*#__PURE__*/_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTap = /*#__PURE__*/function () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap = /*#__PURE__*/_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\nexport default _xtap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtap from './internal/_xtap.js';\n\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\nvar tap = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\nexport default tap;","export default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _cloneRegExp from './internal/_cloneRegExp.js';\nimport _curry2 from './internal/_curry2.js';\nimport _isRegExp from './internal/_isRegExp.js';\nimport toString from './toString.js';\n\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\nvar test = /*#__PURE__*/_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n  return _cloneRegExp(pattern).test(str);\n});\nexport default test;","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\nvar then = /*#__PURE__*/_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\nexport default then;","import invoker from './invoker.js';\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nexport default toPairs;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n  return pairs;\n});\nexport default toPairsIn;","import invoker from './invoker.js';\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce.js';\nimport _xwrap from './internal/_xwrap.js';\nimport curryN from './curryN.js';\n\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\nvar transduce = /*#__PURE__*/curryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return result;\n});\nexport default transpose;","import _curry3 from './internal/_curry3.js';\nimport map from './map.js';\nimport sequence from './sequence.js';\n\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\nvar traverse = /*#__PURE__*/_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\nexport default traverse;","import _curry1 from './internal/_curry1.js';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? /*#__PURE__*/_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from './internal/_arity.js';\nimport _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n `` */\nvar tryCatch = /*#__PURE__*/_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\nexport default tryCatch;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\nvar unapply = /*#__PURE__*/_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\nexport default unapply;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\nvar uncurryN = /*#__PURE__*/_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n    return value;\n  });\n});\nexport default uncurryN;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\nvar unfold = /*#__PURE__*/_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n  return result;\n});\nexport default unfold;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\nvar union = /*#__PURE__*/_curry2( /*#__PURE__*/compose(uniq, _concat));\nexport default union;","import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default uniqWith;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nexport default unless;","import _identity from './internal/_identity.js';\nimport chain from './chain.js';\n\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\nvar unnest = /*#__PURE__*/chain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\nvar until = /*#__PURE__*/_curry3(function until(pred, fn, init) {\n  var val = init;\n  while (!pred(val)) {\n    val = fn(val);\n  }\n  return val;\n});\nexport default until;","import _curry1 from './internal/_curry1.js';\n\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\nvar valuesIn = /*#__PURE__*/_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n  return vs;\n});\nexport default valuesIn;","import _curry2 from './internal/_curry2.js';\n\n// `Const` is a functor that effectively ignores the function given to `map`.\nvar Const = function (x) {\n  return { value: x, 'fantasy-land/map': function () {\n      return this;\n    } };\n};\n\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\nexport default view;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nexport default when;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport map from './map.js';\nimport where from './where.js';\n\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\nvar whereEq = /*#__PURE__*/_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\nexport default whereEq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport flip from './flip.js';\nimport reject from './reject.js';\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nexport default without;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n  while (idx < ilen) {\n    j = 0;\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n    idx += 1;\n  }\n  return result;\n});\nexport default xprod;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\nvar zip = /*#__PURE__*/_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n  return rv;\n});\nexport default zip;","import _curry2 from './internal/_curry2.js';\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nexport default zipObj;","import _curry3 from './internal/_curry3.js';\n\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\nvar zipWith = /*#__PURE__*/_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n  return rv;\n});\nexport default zipWith;","import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\nvar thunkify = /*#__PURE__*/_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from './F.js';\nexport { default as T } from './T.js';\nexport { default as __ } from './__.js';\nexport { default as add } from './add.js';\nexport { default as addIndex } from './addIndex.js';\nexport { default as adjust } from './adjust.js';\nexport { default as all } from './all.js';\nexport { default as allPass } from './allPass.js';\nexport { default as always } from './always.js';\nexport { default as and } from './and.js';\nexport { default as any } from './any.js';\nexport { default as anyPass } from './anyPass.js';\nexport { default as ap } from './ap.js';\nexport { default as aperture } from './aperture.js';\nexport { default as append } from './append.js';\nexport { default as apply } from './apply.js';\nexport { default as applySpec } from './applySpec.js';\nexport { default as applyTo } from './applyTo.js';\nexport { default as ascend } from './ascend.js';\nexport { default as assoc } from './assoc.js';\nexport { default as assocPath } from './assocPath.js';\nexport { default as binary } from './binary.js';\nexport { default as bind } from './bind.js';\nexport { default as both } from './both.js';\nexport { default as call } from './call.js';\nexport { default as chain } from './chain.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as comparator } from './comparator.js';\nexport { default as complement } from './complement.js';\nexport { default as compose } from './compose.js';\nexport { default as composeK } from './composeK.js';\nexport { default as composeP } from './composeP.js';\nexport { default as composeWith } from './composeWith.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as construct } from './construct.js';\nexport { default as constructN } from './constructN.js';\nexport { default as contains } from './contains.js';\nexport { default as converge } from './converge.js';\nexport { default as countBy } from './countBy.js';\nexport { default as curry } from './curry.js';\nexport { default as curryN } from './curryN.js';\nexport { default as dec } from './dec.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as descend } from './descend.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as dissoc } from './dissoc.js';\nexport { default as dissocPath } from './dissocPath.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropLast } from './dropLast.js';\nexport { default as dropLastWhile } from './dropLastWhile.js';\nexport { default as dropRepeats } from './dropRepeats.js';\nexport { default as dropRepeatsWith } from './dropRepeatsWith.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as either } from './either.js';\nexport { default as empty } from './empty.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as eqBy } from './eqBy.js';\nexport { default as eqProps } from './eqProps.js';\nexport { default as equals } from './equals.js';\nexport { default as evolve } from './evolve.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flip } from './flip.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachObjIndexed } from './forEachObjIndexed.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as groupWith } from './groupWith.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as hasPath } from './hasPath.js';\nexport { default as head } from './head.js';\nexport { default as identical } from './identical.js';\nexport { default as identity } from './identity.js';\nexport { default as ifElse } from './ifElse.js';\nexport { default as inc } from './inc.js';\nexport { default as includes } from './includes.js';\nexport { default as indexBy } from './indexBy.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as init } from './init.js';\nexport { default as innerJoin } from './innerJoin.js';\nexport { default as insert } from './insert.js';\nexport { default as insertAll } from './insertAll.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersperse } from './intersperse.js';\nexport { default as into } from './into.js';\nexport { default as invert } from './invert.js';\nexport { default as invertObj } from './invertObj.js';\nexport { default as invoker } from './invoker.js';\nexport { default as is } from './is.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isNil } from './isNil.js';\nexport { default as join } from './join.js';\nexport { default as juxt } from './juxt.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as length } from './length.js';\nexport { default as lens } from './lens.js';\nexport { default as lensIndex } from './lensIndex.js';\nexport { default as lensPath } from './lensPath.js';\nexport { default as lensProp } from './lensProp.js';\nexport { default as lift } from './lift.js';\nexport { default as liftN } from './liftN.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapAccum } from './mapAccum.js';\nexport { default as mapAccumRight } from './mapAccumRight.js';\nexport { default as mapObjIndexed } from './mapObjIndexed.js';\nexport { default as match } from './match.js';\nexport { default as mathMod } from './mathMod.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as median } from './median.js';\nexport { default as memoizeWith } from './memoizeWith.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeAll } from './mergeAll.js';\nexport { default as mergeDeepLeft } from './mergeDeepLeft.js';\nexport { default as mergeDeepRight } from './mergeDeepRight.js';\nexport { default as mergeDeepWith } from './mergeDeepWith.js';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey.js';\nexport { default as mergeLeft } from './mergeLeft.js';\nexport { default as mergeRight } from './mergeRight.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as mergeWithKey } from './mergeWithKey.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as modulo } from './modulo.js';\nexport { default as move } from './move.js';\nexport { default as multiply } from './multiply.js';\nexport { default as nAry } from './nAry.js';\nexport { default as negate } from './negate.js';\nexport { default as none } from './none.js';\nexport { default as not } from './not.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as o } from './o.js';\nexport { default as objOf } from './objOf.js';\nexport { default as of } from './of.js';\nexport { default as omit } from './omit.js';\nexport { default as once } from './once.js';\nexport { default as or } from './or.js';\nexport { default as otherwise } from './otherwise.js';\nexport { default as over } from './over.js';\nexport { default as pair } from './pair.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as path } from './path.js';\nexport { default as pathEq } from './pathEq.js';\nexport { default as pathOr } from './pathOr.js';\nexport { default as pathSatisfies } from './pathSatisfies.js';\nexport { default as pick } from './pick.js';\nexport { default as pickAll } from './pickAll.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as pipe } from './pipe.js';\nexport { default as pipeK } from './pipeK.js';\nexport { default as pipeP } from './pipeP.js';\nexport { default as pipeWith } from './pipeWith.js';\nexport { default as pluck } from './pluck.js';\nexport { default as prepend } from './prepend.js';\nexport { default as product } from './product.js';\nexport { default as project } from './project.js';\nexport { default as prop } from './prop.js';\nexport { default as propEq } from './propEq.js';\nexport { default as propIs } from './propIs.js';\nexport { default as propOr } from './propOr.js';\nexport { default as propSatisfies } from './propSatisfies.js';\nexport { default as props } from './props.js';\nexport { default as range } from './range.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceBy } from './reduceBy.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reduceWhile } from './reduceWhile.js';\nexport { default as reduced } from './reduced.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as reverse } from './reverse.js';\nexport { default as scan } from './scan.js';\nexport { default as sequence } from './sequence.js';\nexport { default as set } from './set.js';\nexport { default as slice } from './slice.js';\nexport { default as sort } from './sort.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortWith } from './sortWith.js';\nexport { default as split } from './split.js';\nexport { default as splitAt } from './splitAt.js';\nexport { default as splitEvery } from './splitEvery.js';\nexport { default as splitWhen } from './splitWhen.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as symmetricDifference } from './symmetricDifference.js';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeLast } from './takeLast.js';\nexport { default as takeLastWhile } from './takeLastWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as test } from './test.js';\nexport { default as then } from './then.js';\nexport { default as times } from './times.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transduce } from './transduce.js';\nexport { default as transpose } from './transpose.js';\nexport { default as traverse } from './traverse.js';\nexport { default as trim } from './trim.js';\nexport { default as tryCatch } from './tryCatch.js';\nexport { default as type } from './type.js';\nexport { default as unapply } from './unapply.js';\nexport { default as unary } from './unary.js';\nexport { default as uncurryN } from './uncurryN.js';\nexport { default as unfold } from './unfold.js';\nexport { default as union } from './union.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as unless } from './unless.js';\nexport { default as unnest } from './unnest.js';\nexport { default as until } from './until.js';\nexport { default as update } from './update.js';\nexport { default as useWith } from './useWith.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as view } from './view.js';\nexport { default as when } from './when.js';\nexport { default as where } from './where.js';\nexport { default as whereEq } from './whereEq.js';\nexport { default as without } from './without.js';\nexport { default as xprod } from './xprod.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObj } from './zipObj.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default as thunkify } from './thunkify.js';","// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n//[depth, height, italic correction, skew, width]\nexport default {\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0, 0.72222],\n        \"66\": [0, 0.68889, 0, 0, 0.66667],\n        \"67\": [0, 0.68889, 0, 0, 0.72222],\n        \"68\": [0, 0.68889, 0, 0, 0.72222],\n        \"69\": [0, 0.68889, 0, 0, 0.66667],\n        \"70\": [0, 0.68889, 0, 0, 0.61111],\n        \"71\": [0, 0.68889, 0, 0, 0.77778],\n        \"72\": [0, 0.68889, 0, 0, 0.77778],\n        \"73\": [0, 0.68889, 0, 0, 0.38889],\n        \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n        \"75\": [0, 0.68889, 0, 0, 0.77778],\n        \"76\": [0, 0.68889, 0, 0, 0.66667],\n        \"77\": [0, 0.68889, 0, 0, 0.94445],\n        \"78\": [0, 0.68889, 0, 0, 0.72222],\n        \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"80\": [0, 0.68889, 0, 0, 0.61111],\n        \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"82\": [0, 0.68889, 0, 0, 0.72222],\n        \"83\": [0, 0.68889, 0, 0, 0.55556],\n        \"84\": [0, 0.68889, 0, 0, 0.66667],\n        \"85\": [0, 0.68889, 0, 0, 0.72222],\n        \"86\": [0, 0.68889, 0, 0, 0.72222],\n        \"87\": [0, 0.68889, 0, 0, 1.0],\n        \"88\": [0, 0.68889, 0, 0, 0.72222],\n        \"89\": [0, 0.68889, 0, 0, 0.72222],\n        \"90\": [0, 0.68889, 0, 0, 0.66667],\n        \"107\": [0, 0.68889, 0, 0, 0.55556],\n        \"165\": [0, 0.675, 0.025, 0, 0.75],\n        \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n        \"240\": [0, 0.68889, 0, 0, 0.55556],\n        \"295\": [0, 0.68889, 0, 0, 0.54028],\n        \"710\": [0, 0.825, 0, 0, 2.33334],\n        \"732\": [0, 0.9, 0, 0, 2.33334],\n        \"770\": [0, 0.825, 0, 0, 2.33334],\n        \"771\": [0, 0.9, 0, 0, 2.33334],\n        \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"8245\": [0, 0.54986, 0, 0, 0.275],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8487\": [0, 0.68889, 0, 0, 0.72222],\n        \"8498\": [0, 0.68889, 0, 0, 0.55556],\n        \"8502\": [0, 0.68889, 0, 0, 0.66667],\n        \"8503\": [0, 0.68889, 0, 0, 0.44445],\n        \"8504\": [0, 0.68889, 0, 0, 0.66667],\n        \"8513\": [0, 0.68889, 0, 0, 0.63889],\n        \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8619\": [0, 0.54986, 0, 0, 1.0],\n        \"8620\": [0, 0.54986, 0, 0, 1.0],\n        \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n        \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8624\": [0, 0.69224, 0, 0, 0.5],\n        \"8625\": [0, 0.69224, 0, 0, 0.5],\n        \"8630\": [0, 0.43056, 0, 0, 1.0],\n        \"8631\": [0, 0.43056, 0, 0, 1.0],\n        \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n        \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8705\": [0, 0.825, 0, 0, 0.5],\n        \"8708\": [0, 0.68889, 0, 0, 0.55556],\n        \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8717\": [0, 0.43056, 0, 0, 0.42917],\n        \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n        \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8733\": [0, 0.69224, 0, 0, 0.77778],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8737\": [0, 0.69224, 0, 0, 0.72222],\n        \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n        \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n        \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n        \"8756\": [0, 0.69224, 0, 0, 0.66667],\n        \"8757\": [0, 0.69224, 0, 0, 0.66667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n        \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8790\": [0, 0.69224, 0, 0, 0.77778],\n        \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n        \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n        \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8862\": [0, 0.675, 0, 0, 0.77778],\n        \"8863\": [0, 0.675, 0, 0, 0.77778],\n        \"8864\": [0, 0.675, 0, 0, 0.77778],\n        \"8865\": [0, 0.675, 0, 0, 0.77778],\n        \"8872\": [0, 0.69224, 0, 0, 0.61111],\n        \"8873\": [0, 0.69224, 0, 0, 0.72222],\n        \"8874\": [0, 0.69224, 0, 0, 0.88889],\n        \"8876\": [0, 0.68889, 0, 0, 0.61111],\n        \"8877\": [0, 0.68889, 0, 0, 0.61111],\n        \"8878\": [0, 0.68889, 0, 0, 0.72222],\n        \"8879\": [0, 0.68889, 0, 0, 0.72222],\n        \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8888\": [0, 0.54986, 0, 0, 1.11111],\n        \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8901\": [0, 0.54986, 0, 0, 0.27778],\n        \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8907\": [0, 0.69224, 0, 0, 0.77778],\n        \"8908\": [0, 0.69224, 0, 0, 0.77778],\n        \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n        \"8910\": [0, 0.54986, 0, 0, 0.76042],\n        \"8911\": [0, 0.54986, 0, 0, 0.76042],\n        \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8914\": [0, 0.54986, 0, 0, 0.66667],\n        \"8915\": [0, 0.54986, 0, 0, 0.66667],\n        \"8916\": [0, 0.69224, 0, 0, 0.66667],\n        \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n        \"9484\": [0, 0.69224, 0, 0, 0.5],\n        \"9488\": [0, 0.69224, 0, 0, 0.5],\n        \"9492\": [0, 0.37788, 0, 0, 0.5],\n        \"9496\": [0, 0.37788, 0, 0, 0.5],\n        \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n        \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n        \"9632\": [0, 0.675, 0, 0, 0.77778],\n        \"9633\": [0, 0.675, 0, 0, 0.77778],\n        \"9650\": [0, 0.54986, 0, 0, 0.72222],\n        \"9651\": [0, 0.54986, 0, 0, 0.72222],\n        \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9660\": [0, 0.54986, 0, 0, 0.72222],\n        \"9661\": [0, 0.54986, 0, 0, 0.72222],\n        \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n        \"10003\": [0, 0.69224, 0, 0, 0.83334],\n        \"10016\": [0, 0.69224, 0, 0, 0.83334],\n        \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n        \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"57371\": [0.13597, 0.63597, 0, 0, 0.77778],\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0, 0.5],\n        \"49\": [0, 0.43056, 0, 0, 0.5],\n        \"50\": [0, 0.43056, 0, 0, 0.5],\n        \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n        \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n        \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n        \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n        \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n        \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n        \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n        \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n        \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n        \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n        \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n        \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n        \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n        \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n        \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n        \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n        \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n        \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n        \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n        \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n        \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n        \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n        \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473],\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0, 0.29574],\n        \"34\": [0, 0.69141, 0, 0, 0.21471],\n        \"38\": [0, 0.69141, 0, 0, 0.73786],\n        \"39\": [0, 0.69141, 0, 0, 0.21201],\n        \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"42\": [0, 0.62119, 0, 0, 0.27764],\n        \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"44\": [0, 0.10803, 0, 0, 0.27764],\n        \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"46\": [0, 0.10803, 0, 0, 0.27764],\n        \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n        \"48\": [0, 0.47534, 0, 0, 0.50181],\n        \"49\": [0, 0.47534, 0, 0, 0.50181],\n        \"50\": [0, 0.47534, 0, 0, 0.50181],\n        \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"54\": [0, 0.69141, 0, 0, 0.50181],\n        \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"56\": [0, 0.69141, 0, 0, 0.50181],\n        \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"58\": [0, 0.47534, 0, 0, 0.21606],\n        \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n        \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n        \"63\": [0, 0.69141, 0, 0, 0.36245],\n        \"65\": [0, 0.69141, 0, 0, 0.7176],\n        \"66\": [0, 0.69141, 0, 0, 0.88397],\n        \"67\": [0, 0.69141, 0, 0, 0.61254],\n        \"68\": [0, 0.69141, 0, 0, 0.83158],\n        \"69\": [0, 0.69141, 0, 0, 0.66278],\n        \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n        \"71\": [0, 0.69141, 0, 0, 0.78539],\n        \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n        \"73\": [0, 0.69141, 0, 0, 0.55448],\n        \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n        \"75\": [0, 0.69141, 0, 0, 0.66845],\n        \"76\": [0, 0.69141, 0, 0, 0.66602],\n        \"77\": [0, 0.69141, 0, 0, 1.04953],\n        \"78\": [0, 0.69141, 0, 0, 0.83212],\n        \"79\": [0, 0.69141, 0, 0, 0.82699],\n        \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n        \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n        \"82\": [0, 0.69141, 0, 0, 0.82807],\n        \"83\": [0, 0.69141, 0, 0, 0.82861],\n        \"84\": [0, 0.69141, 0, 0, 0.66899],\n        \"85\": [0, 0.69141, 0, 0, 0.64576],\n        \"86\": [0, 0.69141, 0, 0, 0.83131],\n        \"87\": [0, 0.69141, 0, 0, 1.04602],\n        \"88\": [0, 0.69141, 0, 0, 0.71922],\n        \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n        \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n        \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"94\": [0, 0.69141, 0, 0, 0.49965],\n        \"97\": [0, 0.47534, 0, 0, 0.50046],\n        \"98\": [0, 0.69141, 0, 0, 0.51315],\n        \"99\": [0, 0.47534, 0, 0, 0.38946],\n        \"100\": [0, 0.62119, 0, 0, 0.49857],\n        \"101\": [0, 0.47534, 0, 0, 0.40053],\n        \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n        \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n        \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n        \"105\": [0, 0.69141, 0, 0, 0.27899],\n        \"106\": [0, 0.69141, 0, 0, 0.28088],\n        \"107\": [0, 0.69141, 0, 0, 0.38946],\n        \"108\": [0, 0.69141, 0, 0, 0.27953],\n        \"109\": [0, 0.47534, 0, 0, 0.76676],\n        \"110\": [0, 0.47534, 0, 0, 0.52666],\n        \"111\": [0, 0.47534, 0, 0, 0.48885],\n        \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n        \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n        \"114\": [0, 0.47534, 0, 0, 0.38919],\n        \"115\": [0, 0.47534, 0, 0, 0.44266],\n        \"116\": [0, 0.62119, 0, 0, 0.33301],\n        \"117\": [0, 0.47534, 0, 0, 0.5172],\n        \"118\": [0, 0.52396, 0, 0, 0.5118],\n        \"119\": [0, 0.52396, 0, 0, 0.77351],\n        \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n        \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n        \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n        \"8216\": [0, 0.69141, 0, 0, 0.21471],\n        \"8217\": [0, 0.69141, 0, 0, 0.21471],\n        \"58112\": [0, 0.62119, 0, 0, 0.49749],\n        \"58113\": [0, 0.62119, 0, 0, 0.4983],\n        \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n        \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n        \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n        \"58117\": [0, 0.69141, 0, 0, 0.33301],\n        \"58118\": [0, 0.62119, 0, 0, 0.33409],\n        \"58119\": [0, 0.47534, 0, 0, 0.50073],\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.35],\n        \"34\": [0, 0.69444, 0, 0, 0.60278],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n        \"36\": [0.05556, 0.75, 0, 0, 0.575],\n        \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n        \"38\": [0, 0.69444, 0, 0, 0.89444],\n        \"39\": [0, 0.69444, 0, 0, 0.31944],\n        \"40\": [0.25, 0.75, 0, 0, 0.44722],\n        \"41\": [0.25, 0.75, 0, 0, 0.44722],\n        \"42\": [0, 0.75, 0, 0, 0.575],\n        \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n        \"45\": [0, 0.44444, 0, 0, 0.38333],\n        \"46\": [0, 0.15556, 0, 0, 0.31944],\n        \"47\": [0.25, 0.75, 0, 0, 0.575],\n        \"48\": [0, 0.64444, 0, 0, 0.575],\n        \"49\": [0, 0.64444, 0, 0, 0.575],\n        \"50\": [0, 0.64444, 0, 0, 0.575],\n        \"51\": [0, 0.64444, 0, 0, 0.575],\n        \"52\": [0, 0.64444, 0, 0, 0.575],\n        \"53\": [0, 0.64444, 0, 0, 0.575],\n        \"54\": [0, 0.64444, 0, 0, 0.575],\n        \"55\": [0, 0.64444, 0, 0, 0.575],\n        \"56\": [0, 0.64444, 0, 0, 0.575],\n        \"57\": [0, 0.64444, 0, 0, 0.575],\n        \"58\": [0, 0.44444, 0, 0, 0.31944],\n        \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n        \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"63\": [0, 0.69444, 0, 0, 0.54305],\n        \"64\": [0, 0.69444, 0, 0, 0.89444],\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0, 0, 0.81805],\n        \"67\": [0, 0.68611, 0, 0, 0.83055],\n        \"68\": [0, 0.68611, 0, 0, 0.88194],\n        \"69\": [0, 0.68611, 0, 0, 0.75555],\n        \"70\": [0, 0.68611, 0, 0, 0.72361],\n        \"71\": [0, 0.68611, 0, 0, 0.90416],\n        \"72\": [0, 0.68611, 0, 0, 0.9],\n        \"73\": [0, 0.68611, 0, 0, 0.43611],\n        \"74\": [0, 0.68611, 0, 0, 0.59444],\n        \"75\": [0, 0.68611, 0, 0, 0.90138],\n        \"76\": [0, 0.68611, 0, 0, 0.69166],\n        \"77\": [0, 0.68611, 0, 0, 1.09166],\n        \"78\": [0, 0.68611, 0, 0, 0.9],\n        \"79\": [0, 0.68611, 0, 0, 0.86388],\n        \"80\": [0, 0.68611, 0, 0, 0.78611],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n        \"82\": [0, 0.68611, 0, 0, 0.8625],\n        \"83\": [0, 0.68611, 0, 0, 0.63889],\n        \"84\": [0, 0.68611, 0, 0, 0.8],\n        \"85\": [0, 0.68611, 0, 0, 0.88472],\n        \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n        \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n        \"88\": [0, 0.68611, 0, 0, 0.86944],\n        \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n        \"90\": [0, 0.68611, 0, 0, 0.70277],\n        \"91\": [0.25, 0.75, 0, 0, 0.31944],\n        \"92\": [0.25, 0.75, 0, 0, 0.575],\n        \"93\": [0.25, 0.75, 0, 0, 0.31944],\n        \"94\": [0, 0.69444, 0, 0, 0.575],\n        \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n        \"97\": [0, 0.44444, 0, 0, 0.55902],\n        \"98\": [0, 0.69444, 0, 0, 0.63889],\n        \"99\": [0, 0.44444, 0, 0, 0.51111],\n        \"100\": [0, 0.69444, 0, 0, 0.63889],\n        \"101\": [0, 0.44444, 0, 0, 0.52708],\n        \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n        \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n        \"104\": [0, 0.69444, 0, 0, 0.63889],\n        \"105\": [0, 0.69444, 0, 0, 0.31944],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n        \"107\": [0, 0.69444, 0, 0, 0.60694],\n        \"108\": [0, 0.69444, 0, 0, 0.31944],\n        \"109\": [0, 0.44444, 0, 0, 0.95833],\n        \"110\": [0, 0.44444, 0, 0, 0.63889],\n        \"111\": [0, 0.44444, 0, 0, 0.575],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n        \"114\": [0, 0.44444, 0, 0, 0.47361],\n        \"115\": [0, 0.44444, 0, 0, 0.45361],\n        \"116\": [0, 0.63492, 0, 0, 0.44722],\n        \"117\": [0, 0.44444, 0, 0, 0.63889],\n        \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n        \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n        \"120\": [0, 0.44444, 0, 0, 0.60694],\n        \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n        \"122\": [0, 0.44444, 0, 0, 0.51111],\n        \"123\": [0.25, 0.75, 0, 0, 0.575],\n        \"124\": [0.25, 0.75, 0, 0, 0.31944],\n        \"125\": [0.25, 0.75, 0, 0, 0.575],\n        \"126\": [0.35, 0.34444, 0, 0, 0.575],\n        \"168\": [0, 0.69444, 0, 0, 0.575],\n        \"172\": [0, 0.44444, 0, 0, 0.76666],\n        \"176\": [0, 0.69444, 0, 0, 0.86944],\n        \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"184\": [0.17014, 0, 0, 0, 0.51111],\n        \"198\": [0, 0.68611, 0, 0, 1.04166],\n        \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n        \"223\": [0, 0.69444, 0, 0, 0.59722],\n        \"230\": [0, 0.44444, 0, 0, 0.83055],\n        \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n        \"305\": [0, 0.44444, 0, 0, 0.31944],\n        \"338\": [0, 0.68611, 0, 0, 1.16944],\n        \"339\": [0, 0.44444, 0, 0, 0.89444],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n        \"710\": [0, 0.69444, 0, 0, 0.575],\n        \"711\": [0, 0.63194, 0, 0, 0.575],\n        \"713\": [0, 0.59611, 0, 0, 0.575],\n        \"714\": [0, 0.69444, 0, 0, 0.575],\n        \"715\": [0, 0.69444, 0, 0, 0.575],\n        \"728\": [0, 0.69444, 0, 0, 0.575],\n        \"729\": [0, 0.69444, 0, 0, 0.31944],\n        \"730\": [0, 0.69444, 0, 0, 0.86944],\n        \"732\": [0, 0.69444, 0, 0, 0.575],\n        \"733\": [0, 0.69444, 0, 0, 0.575],\n        \"915\": [0, 0.68611, 0, 0, 0.69166],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0, 0, 0.89444],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0, 0, 0.76666],\n        \"928\": [0, 0.68611, 0, 0, 0.9],\n        \"931\": [0, 0.68611, 0, 0, 0.83055],\n        \"933\": [0, 0.68611, 0, 0, 0.89444],\n        \"934\": [0, 0.68611, 0, 0, 0.83055],\n        \"936\": [0, 0.68611, 0, 0, 0.89444],\n        \"937\": [0, 0.68611, 0, 0, 0.83055],\n        \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n        \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n        \"8216\": [0, 0.69444, 0, 0, 0.31944],\n        \"8217\": [0, 0.69444, 0, 0, 0.31944],\n        \"8220\": [0, 0.69444, 0, 0, 0.60278],\n        \"8221\": [0, 0.69444, 0, 0, 0.60278],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8242\": [0, 0.55556, 0, 0, 0.34444],\n        \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n        \"8463\": [0, 0.69444, 0, 0, 0.66759],\n        \"8465\": [0, 0.69444, 0, 0, 0.83055],\n        \"8467\": [0, 0.69444, 0, 0, 0.47361],\n        \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n        \"8476\": [0, 0.69444, 0, 0, 0.83055],\n        \"8501\": [0, 0.69444, 0, 0, 0.70277],\n        \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8597\": [0.25, 0.75, 0, 0, 0.575],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n        \"8704\": [0, 0.69444, 0, 0, 0.63889],\n        \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n        \"8707\": [0, 0.69444, 0, 0, 0.63889],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n        \"8711\": [0, 0.68611, 0, 0, 0.95833],\n        \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8725\": [0.25, 0.75, 0, 0, 0.575],\n        \"8726\": [0.25, 0.75, 0, 0, 0.575],\n        \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n        \"8733\": [0, 0.44444, 0, 0, 0.89444],\n        \"8734\": [0, 0.44444, 0, 0, 1.14999],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n        \"8741\": [0.25, 0.75, 0, 0, 0.575],\n        \"8743\": [0, 0.55556, 0, 0, 0.76666],\n        \"8744\": [0, 0.55556, 0, 0, 0.76666],\n        \"8745\": [0, 0.55556, 0, 0, 0.76666],\n        \"8746\": [0, 0.55556, 0, 0, 0.76666],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n        \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n        \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n        \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8846\": [0, 0.55556, 0, 0, 0.76666],\n        \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8851\": [0, 0.55556, 0, 0, 0.76666],\n        \"8852\": [0, 0.55556, 0, 0, 0.76666],\n        \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8866\": [0, 0.69444, 0, 0, 0.70277],\n        \"8867\": [0, 0.69444, 0, 0, 0.70277],\n        \"8868\": [0, 0.69444, 0, 0, 0.89444],\n        \"8869\": [0, 0.69444, 0, 0, 0.89444],\n        \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n        \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9837\": [0, 0.75, 0, 0, 0.44722],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10815\": [0, 0.68611, 0, 0, 0.9],\n        \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"57376\": [0.19444, 0.69444, 0, 0, 0],\n    },\n    \"Main-BoldItalic\": {\n        \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n        \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n        \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n        \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n        \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n        \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n        \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n        \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n        \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n        \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n        \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n        \"46\": [0, 0.14722, 0, 0, 0.35555],\n        \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n        \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n        \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n        \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n        \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n        \"65\": [0, 0.68611, 0, 0, 0.86555],\n        \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n        \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n        \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n        \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n        \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n        \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n        \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n        \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n        \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n        \"76\": [0, 0.68611, 0, 0, 0.69777],\n        \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n        \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n        \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n        \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n        \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n        \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n        \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n        \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n        \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n        \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n        \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n        \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n        \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n        \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n        \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n        \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n        \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n        \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n        \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n        \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n        \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n        \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n        \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n        \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n        \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n        \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n        \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n        \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n        \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n        \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n        \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n        \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n        \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n        \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n        \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n        \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n        \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n        \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n        \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n        \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n        \"163\": [0, 0.69444, 0, 0, 0.86853],\n        \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n        \"176\": [0, 0.69444, 0, 0, 0.94888],\n        \"184\": [0.17014, 0, 0, 0, 0.53222],\n        \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n        \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n        \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n        \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n        \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n        \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n        \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n        \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n        \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n        \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n        \"715\": [0, 0.69444, 0, 0, 0.59111],\n        \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n        \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"730\": [0, 0.69444, 0, 0, 0.94888],\n        \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n        \"916\": [0, 0.68611, 0, 0, 0.94444],\n        \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n        \"923\": [0, 0.68611, 0, 0, 0.80666],\n        \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n        \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n        \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n        \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n        \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n        \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n        \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n        \"8221\": [0, 0.69444, 0.07939, 0, 0.62055],\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n        \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n        \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n        \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n        \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n        \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n        \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n        \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n        \"46\": [0, 0.10556, 0, 0, 0.30667],\n        \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n        \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n        \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n        \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n        \"65\": [0, 0.68333, 0, 0, 0.74333],\n        \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n        \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n        \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n        \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n        \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n        \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n        \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n        \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n        \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n        \"76\": [0, 0.68333, 0, 0, 0.62722],\n        \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n        \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n        \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n        \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n        \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n        \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n        \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n        \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n        \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n        \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n        \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n        \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n        \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n        \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n        \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n        \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n        \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n        \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n        \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n        \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n        \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n        \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n        \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n        \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n        \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n        \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n        \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n        \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n        \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n        \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n        \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n        \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n        \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n        \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n        \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n        \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n        \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n        \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n        \"163\": [0, 0.69444, 0, 0, 0.76909],\n        \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n        \"176\": [0, 0.69444, 0, 0, 0.83129],\n        \"184\": [0.17014, 0, 0, 0, 0.46],\n        \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n        \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n        \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n        \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n        \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n        \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n        \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n        \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n        \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n        \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n        \"715\": [0, 0.69444, 0, 0, 0.51111],\n        \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n        \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n        \"730\": [0, 0.69444, 0, 0, 0.83129],\n        \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n        \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n        \"916\": [0, 0.68333, 0, 0, 0.81777],\n        \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"923\": [0, 0.68333, 0, 0, 0.69222],\n        \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n        \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n        \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n        \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n        \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n        \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n        \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n        \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.25],\n        \"33\": [0, 0.69444, 0, 0, 0.27778],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.77778],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n        \"45\": [0, 0.43056, 0, 0, 0.33333],\n        \"46\": [0, 0.10556, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.64444, 0, 0, 0.5],\n        \"49\": [0, 0.64444, 0, 0, 0.5],\n        \"50\": [0, 0.64444, 0, 0, 0.5],\n        \"51\": [0, 0.64444, 0, 0, 0.5],\n        \"52\": [0, 0.64444, 0, 0, 0.5],\n        \"53\": [0, 0.64444, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0, 0.64444, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0, 0.64444, 0, 0, 0.5],\n        \"58\": [0, 0.43056, 0, 0, 0.27778],\n        \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n        \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.77778],\n        \"65\": [0, 0.68333, 0, 0, 0.75],\n        \"66\": [0, 0.68333, 0, 0, 0.70834],\n        \"67\": [0, 0.68333, 0, 0, 0.72222],\n        \"68\": [0, 0.68333, 0, 0, 0.76389],\n        \"69\": [0, 0.68333, 0, 0, 0.68056],\n        \"70\": [0, 0.68333, 0, 0, 0.65278],\n        \"71\": [0, 0.68333, 0, 0, 0.78472],\n        \"72\": [0, 0.68333, 0, 0, 0.75],\n        \"73\": [0, 0.68333, 0, 0, 0.36111],\n        \"74\": [0, 0.68333, 0, 0, 0.51389],\n        \"75\": [0, 0.68333, 0, 0, 0.77778],\n        \"76\": [0, 0.68333, 0, 0, 0.625],\n        \"77\": [0, 0.68333, 0, 0, 0.91667],\n        \"78\": [0, 0.68333, 0, 0, 0.75],\n        \"79\": [0, 0.68333, 0, 0, 0.77778],\n        \"80\": [0, 0.68333, 0, 0, 0.68056],\n        \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n        \"82\": [0, 0.68333, 0, 0, 0.73611],\n        \"83\": [0, 0.68333, 0, 0, 0.55556],\n        \"84\": [0, 0.68333, 0, 0, 0.72222],\n        \"85\": [0, 0.68333, 0, 0, 0.75],\n        \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n        \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n        \"88\": [0, 0.68333, 0, 0, 0.75],\n        \"89\": [0, 0.68333, 0.025, 0, 0.75],\n        \"90\": [0, 0.68333, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.27778],\n        \"92\": [0.25, 0.75, 0, 0, 0.5],\n        \"93\": [0.25, 0.75, 0, 0, 0.27778],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n        \"97\": [0, 0.43056, 0, 0, 0.5],\n        \"98\": [0, 0.69444, 0, 0, 0.55556],\n        \"99\": [0, 0.43056, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.55556],\n        \"101\": [0, 0.43056, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n        \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.55556],\n        \"105\": [0, 0.66786, 0, 0, 0.27778],\n        \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n        \"107\": [0, 0.69444, 0, 0, 0.52778],\n        \"108\": [0, 0.69444, 0, 0, 0.27778],\n        \"109\": [0, 0.43056, 0, 0, 0.83334],\n        \"110\": [0, 0.43056, 0, 0, 0.55556],\n        \"111\": [0, 0.43056, 0, 0, 0.5],\n        \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n        \"114\": [0, 0.43056, 0, 0, 0.39167],\n        \"115\": [0, 0.43056, 0, 0, 0.39445],\n        \"116\": [0, 0.61508, 0, 0, 0.38889],\n        \"117\": [0, 0.43056, 0, 0, 0.55556],\n        \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n        \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n        \"120\": [0, 0.43056, 0, 0, 0.52778],\n        \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n        \"122\": [0, 0.43056, 0, 0, 0.44445],\n        \"123\": [0.25, 0.75, 0, 0, 0.5],\n        \"124\": [0.25, 0.75, 0, 0, 0.27778],\n        \"125\": [0.25, 0.75, 0, 0, 0.5],\n        \"126\": [0.35, 0.31786, 0, 0, 0.5],\n        \"160\": [0, 0, 0, 0, 0.25],\n        \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"168\": [0, 0.66786, 0, 0, 0.5],\n        \"172\": [0, 0.43056, 0, 0, 0.66667],\n        \"176\": [0, 0.69444, 0, 0, 0.75],\n        \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"198\": [0, 0.68333, 0, 0, 0.90278],\n        \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n        \"223\": [0, 0.69444, 0, 0, 0.5],\n        \"230\": [0, 0.43056, 0, 0, 0.72222],\n        \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n        \"305\": [0, 0.43056, 0, 0, 0.27778],\n        \"338\": [0, 0.68333, 0, 0, 1.01389],\n        \"339\": [0, 0.43056, 0, 0, 0.77778],\n        \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.62847, 0, 0, 0.5],\n        \"713\": [0, 0.56778, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.66786, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.75],\n        \"732\": [0, 0.66786, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"915\": [0, 0.68333, 0, 0, 0.625],\n        \"916\": [0, 0.68333, 0, 0, 0.83334],\n        \"920\": [0, 0.68333, 0, 0, 0.77778],\n        \"923\": [0, 0.68333, 0, 0, 0.69445],\n        \"926\": [0, 0.68333, 0, 0, 0.66667],\n        \"928\": [0, 0.68333, 0, 0, 0.75],\n        \"931\": [0, 0.68333, 0, 0, 0.72222],\n        \"933\": [0, 0.68333, 0, 0, 0.77778],\n        \"934\": [0, 0.68333, 0, 0, 0.72222],\n        \"936\": [0, 0.68333, 0, 0, 0.77778],\n        \"937\": [0, 0.68333, 0, 0, 0.72222],\n        \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8230\": [0, 0.12, 0, 0, 1.172],\n        \"8242\": [0, 0.55556, 0, 0, 0.275],\n        \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8465\": [0, 0.69444, 0, 0, 0.72222],\n        \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n        \"8476\": [0, 0.69444, 0, 0, 0.72222],\n        \"8501\": [0, 0.69444, 0, 0, 0.61111],\n        \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8597\": [0.25, 0.75, 0, 0, 0.5],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8614\": [0.011, 0.511, 0, 0, 1.0],\n        \"8617\": [0.011, 0.511, 0, 0, 1.126],\n        \"8618\": [0.011, 0.511, 0, 0, 1.126],\n        \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8652\": [0.011, 0.671, 0, 0, 1.0],\n        \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n        \"8704\": [0, 0.69444, 0, 0, 0.55556],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n        \"8707\": [0, 0.69444, 0, 0, 0.55556],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n        \"8711\": [0, 0.68333, 0, 0, 0.83334],\n        \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8725\": [0.25, 0.75, 0, 0, 0.5],\n        \"8726\": [0.25, 0.75, 0, 0, 0.5],\n        \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n        \"8733\": [0, 0.43056, 0, 0, 0.77778],\n        \"8734\": [0, 0.43056, 0, 0, 1.0],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n        \"8741\": [0.25, 0.75, 0, 0, 0.5],\n        \"8743\": [0, 0.55556, 0, 0, 0.66667],\n        \"8744\": [0, 0.55556, 0, 0, 0.66667],\n        \"8745\": [0, 0.55556, 0, 0, 0.66667],\n        \"8746\": [0, 0.55556, 0, 0, 0.66667],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n        \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n        \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8846\": [0, 0.55556, 0, 0, 0.66667],\n        \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8851\": [0, 0.55556, 0, 0, 0.66667],\n        \"8852\": [0, 0.55556, 0, 0, 0.66667],\n        \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8866\": [0, 0.69444, 0, 0, 0.61111],\n        \"8867\": [0, 0.69444, 0, 0, 0.61111],\n        \"8868\": [0, 0.69444, 0, 0, 0.77778],\n        \"8869\": [0, 0.69444, 0, 0, 0.77778],\n        \"8872\": [0.249, 0.75, 0, 0, 0.867],\n        \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n        \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8904\": [0.005, 0.505, 0, 0, 0.9],\n        \"8942\": [0.03, 0.9, 0, 0, 0.278],\n        \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n        \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n        \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"9136\": [0.244, 0.744, 0, 0, 0.412],\n        \"9137\": [0.244, 0.744, 0, 0, 0.412],\n        \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9837\": [0, 0.75, 0, 0, 0.38889],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10222\": [0.244, 0.744, 0, 0, 0.412],\n        \"10223\": [0.244, 0.744, 0, 0, 0.412],\n        \"10229\": [0.011, 0.511, 0, 0, 1.609],\n        \"10230\": [0.011, 0.511, 0, 0, 1.638],\n        \"10231\": [0.011, 0.511, 0, 0, 1.859],\n        \"10232\": [0.024, 0.525, 0, 0, 1.609],\n        \"10233\": [0.024, 0.525, 0, 0, 1.638],\n        \"10234\": [0.024, 0.525, 0, 0, 1.858],\n        \"10236\": [0.011, 0.511, 0, 0, 1.638],\n        \"10815\": [0, 0.68333, 0, 0, 0.75],\n        \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"57376\": [0.19444, 0.69444, 0, 0, 0],\n    },\n    \"Math-BoldItalic\": {\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n        \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n        \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n        \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n        \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n        \"71\": [0, 0.68611, 0, 0, 0.88673],\n        \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n        \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n        \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n        \"76\": [0, 0.68611, 0, 0, 0.75555],\n        \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n        \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n        \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n        \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n        \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n        \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n        \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n        \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n        \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n        \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n        \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n        \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n        \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n        \"97\": [0, 0.44444, 0, 0, 0.63287],\n        \"98\": [0, 0.69444, 0, 0, 0.52083],\n        \"99\": [0, 0.44444, 0, 0, 0.51342],\n        \"100\": [0, 0.69444, 0, 0, 0.60972],\n        \"101\": [0, 0.44444, 0, 0, 0.55361],\n        \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n        \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n        \"104\": [0, 0.69444, 0, 0, 0.66759],\n        \"105\": [0, 0.69326, 0, 0, 0.4048],\n        \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n        \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n        \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n        \"109\": [0, 0.44444, 0, 0, 1.0324],\n        \"110\": [0, 0.44444, 0, 0, 0.71296],\n        \"111\": [0, 0.44444, 0, 0, 0.58472],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n        \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n        \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n        \"115\": [0, 0.44444, 0, 0, 0.53125],\n        \"116\": [0, 0.63492, 0, 0, 0.41528],\n        \"117\": [0, 0.44444, 0, 0, 0.68102],\n        \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n        \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n        \"120\": [0, 0.44444, 0, 0, 0.65903],\n        \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n        \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n        \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n        \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n        \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n        \"934\": [0, 0.68611, 0, 0, 0.76666],\n        \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n        \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n        \"945\": [0, 0.44444, 0, 0, 0.76064],\n        \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n        \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n        \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n        \"949\": [0, 0.44444, 0, 0, 0.52882],\n        \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n        \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n        \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n        \"953\": [0, 0.44444, 0, 0, 0.41204],\n        \"954\": [0, 0.44444, 0, 0, 0.66759],\n        \"955\": [0, 0.69444, 0, 0, 0.67083],\n        \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n        \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n        \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n        \"959\": [0, 0.44444, 0, 0, 0.58472],\n        \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n        \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n        \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n        \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n        \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n        \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n        \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n        \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n        \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n        \"977\": [0, 0.69444, 0, 0, 0.69155],\n        \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n        \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n        \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"1013\": [0, 0.44444, 0, 0, 0.48333],\n    },\n    \"Math-Italic\": {\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0.07, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0.13, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059],\n    },\n    \"SansSerif-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.36667],\n        \"34\": [0, 0.69444, 0, 0, 0.55834],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n        \"36\": [0.05556, 0.75, 0, 0, 0.55],\n        \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n        \"38\": [0, 0.69444, 0, 0, 0.83056],\n        \"39\": [0, 0.69444, 0, 0, 0.30556],\n        \"40\": [0.25, 0.75, 0, 0, 0.42778],\n        \"41\": [0.25, 0.75, 0, 0, 0.42778],\n        \"42\": [0, 0.75, 0, 0, 0.55],\n        \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n        \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n        \"45\": [0, 0.45833, 0, 0, 0.36667],\n        \"46\": [0, 0.13056, 0, 0, 0.30556],\n        \"47\": [0.25, 0.75, 0, 0, 0.55],\n        \"48\": [0, 0.69444, 0, 0, 0.55],\n        \"49\": [0, 0.69444, 0, 0, 0.55],\n        \"50\": [0, 0.69444, 0, 0, 0.55],\n        \"51\": [0, 0.69444, 0, 0, 0.55],\n        \"52\": [0, 0.69444, 0, 0, 0.55],\n        \"53\": [0, 0.69444, 0, 0, 0.55],\n        \"54\": [0, 0.69444, 0, 0, 0.55],\n        \"55\": [0, 0.69444, 0, 0, 0.55],\n        \"56\": [0, 0.69444, 0, 0, 0.55],\n        \"57\": [0, 0.69444, 0, 0, 0.55],\n        \"58\": [0, 0.45833, 0, 0, 0.30556],\n        \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n        \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n        \"63\": [0, 0.69444, 0, 0, 0.51945],\n        \"64\": [0, 0.69444, 0, 0, 0.73334],\n        \"65\": [0, 0.69444, 0, 0, 0.73334],\n        \"66\": [0, 0.69444, 0, 0, 0.73334],\n        \"67\": [0, 0.69444, 0, 0, 0.70278],\n        \"68\": [0, 0.69444, 0, 0, 0.79445],\n        \"69\": [0, 0.69444, 0, 0, 0.64167],\n        \"70\": [0, 0.69444, 0, 0, 0.61111],\n        \"71\": [0, 0.69444, 0, 0, 0.73334],\n        \"72\": [0, 0.69444, 0, 0, 0.79445],\n        \"73\": [0, 0.69444, 0, 0, 0.33056],\n        \"74\": [0, 0.69444, 0, 0, 0.51945],\n        \"75\": [0, 0.69444, 0, 0, 0.76389],\n        \"76\": [0, 0.69444, 0, 0, 0.58056],\n        \"77\": [0, 0.69444, 0, 0, 0.97778],\n        \"78\": [0, 0.69444, 0, 0, 0.79445],\n        \"79\": [0, 0.69444, 0, 0, 0.79445],\n        \"80\": [0, 0.69444, 0, 0, 0.70278],\n        \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n        \"82\": [0, 0.69444, 0, 0, 0.70278],\n        \"83\": [0, 0.69444, 0, 0, 0.61111],\n        \"84\": [0, 0.69444, 0, 0, 0.73334],\n        \"85\": [0, 0.69444, 0, 0, 0.76389],\n        \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n        \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n        \"88\": [0, 0.69444, 0, 0, 0.73334],\n        \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n        \"90\": [0, 0.69444, 0, 0, 0.67223],\n        \"91\": [0.25, 0.75, 0, 0, 0.34306],\n        \"93\": [0.25, 0.75, 0, 0, 0.34306],\n        \"94\": [0, 0.69444, 0, 0, 0.55],\n        \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n        \"97\": [0, 0.45833, 0, 0, 0.525],\n        \"98\": [0, 0.69444, 0, 0, 0.56111],\n        \"99\": [0, 0.45833, 0, 0, 0.48889],\n        \"100\": [0, 0.69444, 0, 0, 0.56111],\n        \"101\": [0, 0.45833, 0, 0, 0.51111],\n        \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n        \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n        \"104\": [0, 0.69444, 0, 0, 0.56111],\n        \"105\": [0, 0.69444, 0, 0, 0.25556],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n        \"107\": [0, 0.69444, 0, 0, 0.53056],\n        \"108\": [0, 0.69444, 0, 0, 0.25556],\n        \"109\": [0, 0.45833, 0, 0, 0.86667],\n        \"110\": [0, 0.45833, 0, 0, 0.56111],\n        \"111\": [0, 0.45833, 0, 0, 0.55],\n        \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n        \"115\": [0, 0.45833, 0, 0, 0.42167],\n        \"116\": [0, 0.58929, 0, 0, 0.40417],\n        \"117\": [0, 0.45833, 0, 0, 0.56111],\n        \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n        \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n        \"120\": [0, 0.45833, 0, 0, 0.5],\n        \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n        \"122\": [0, 0.45833, 0, 0, 0.47639],\n        \"126\": [0.35, 0.34444, 0, 0, 0.55],\n        \"168\": [0, 0.69444, 0, 0, 0.55],\n        \"176\": [0, 0.69444, 0, 0, 0.73334],\n        \"180\": [0, 0.69444, 0, 0, 0.55],\n        \"184\": [0.17014, 0, 0, 0, 0.48889],\n        \"305\": [0, 0.45833, 0, 0, 0.25556],\n        \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n        \"710\": [0, 0.69444, 0, 0, 0.55],\n        \"711\": [0, 0.63542, 0, 0, 0.55],\n        \"713\": [0, 0.63778, 0, 0, 0.55],\n        \"728\": [0, 0.69444, 0, 0, 0.55],\n        \"729\": [0, 0.69444, 0, 0, 0.30556],\n        \"730\": [0, 0.69444, 0, 0, 0.73334],\n        \"732\": [0, 0.69444, 0, 0, 0.55],\n        \"733\": [0, 0.69444, 0, 0, 0.55],\n        \"915\": [0, 0.69444, 0, 0, 0.58056],\n        \"916\": [0, 0.69444, 0, 0, 0.91667],\n        \"920\": [0, 0.69444, 0, 0, 0.85556],\n        \"923\": [0, 0.69444, 0, 0, 0.67223],\n        \"926\": [0, 0.69444, 0, 0, 0.73334],\n        \"928\": [0, 0.69444, 0, 0, 0.79445],\n        \"931\": [0, 0.69444, 0, 0, 0.79445],\n        \"933\": [0, 0.69444, 0, 0, 0.85556],\n        \"934\": [0, 0.69444, 0, 0, 0.79445],\n        \"936\": [0, 0.69444, 0, 0, 0.85556],\n        \"937\": [0, 0.69444, 0, 0, 0.79445],\n        \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n        \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n        \"8216\": [0, 0.69444, 0, 0, 0.30556],\n        \"8217\": [0, 0.69444, 0, 0, 0.30556],\n        \"8220\": [0, 0.69444, 0, 0, 0.55834],\n        \"8221\": [0, 0.69444, 0, 0, 0.55834],\n    },\n    \"SansSerif-Italic\": {\n        \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n        \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n        \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n        \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n        \"42\": [0, 0.75, 0.11775, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n        \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n        \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n        \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n        \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n        \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n        \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n        \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n        \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n        \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n        \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n        \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n        \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n        \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n        \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n        \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n        \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n        \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n        \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n        \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n        \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n        \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n        \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n        \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n        \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n        \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n        \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n        \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n        \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n        \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n        \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n        \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n        \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n        \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n        \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n        \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n        \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n        \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n        \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.73752],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n        \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n        \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n        \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n        \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.73752],\n        \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n        \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n        \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n        \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n        \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n        \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n        \"8221\": [0, 0.69444, 0.00316, 0, 0.5],\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0, 0.31945],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.75834],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.65556, 0, 0, 0.5],\n        \"49\": [0, 0.65556, 0, 0, 0.5],\n        \"50\": [0, 0.65556, 0, 0, 0.5],\n        \"51\": [0, 0.65556, 0, 0, 0.5],\n        \"52\": [0, 0.65556, 0, 0, 0.5],\n        \"53\": [0, 0.65556, 0, 0, 0.5],\n        \"54\": [0, 0.65556, 0, 0, 0.5],\n        \"55\": [0, 0.65556, 0, 0, 0.5],\n        \"56\": [0, 0.65556, 0, 0, 0.5],\n        \"57\": [0, 0.65556, 0, 0, 0.5],\n        \"58\": [0, 0.44444, 0, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0, 0, 0.66667],\n        \"67\": [0, 0.69444, 0, 0, 0.63889],\n        \"68\": [0, 0.69444, 0, 0, 0.72223],\n        \"69\": [0, 0.69444, 0, 0, 0.59722],\n        \"70\": [0, 0.69444, 0, 0, 0.56945],\n        \"71\": [0, 0.69444, 0, 0, 0.66667],\n        \"72\": [0, 0.69444, 0, 0, 0.70834],\n        \"73\": [0, 0.69444, 0, 0, 0.27778],\n        \"74\": [0, 0.69444, 0, 0, 0.47222],\n        \"75\": [0, 0.69444, 0, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0, 0, 0.875],\n        \"78\": [0, 0.69444, 0, 0, 0.70834],\n        \"79\": [0, 0.69444, 0, 0, 0.73611],\n        \"80\": [0, 0.69444, 0, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n        \"82\": [0, 0.69444, 0, 0, 0.64584],\n        \"83\": [0, 0.69444, 0, 0, 0.55556],\n        \"84\": [0, 0.69444, 0, 0, 0.68056],\n        \"85\": [0, 0.69444, 0, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n        \"88\": [0, 0.69444, 0, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n        \"90\": [0, 0.69444, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0, 0, 0.28889],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n        \"97\": [0, 0.44444, 0, 0, 0.48056],\n        \"98\": [0, 0.69444, 0, 0, 0.51667],\n        \"99\": [0, 0.44444, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.51667],\n        \"101\": [0, 0.44444, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.51667],\n        \"105\": [0, 0.67937, 0, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n        \"107\": [0, 0.69444, 0, 0, 0.48889],\n        \"108\": [0, 0.69444, 0, 0, 0.23889],\n        \"109\": [0, 0.44444, 0, 0, 0.79445],\n        \"110\": [0, 0.44444, 0, 0, 0.51667],\n        \"111\": [0, 0.44444, 0, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n        \"115\": [0, 0.44444, 0, 0, 0.38333],\n        \"116\": [0, 0.57143, 0, 0, 0.36111],\n        \"117\": [0, 0.44444, 0, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n        \"120\": [0, 0.44444, 0, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n        \"122\": [0, 0.44444, 0, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0, 0, 0.5],\n        \"168\": [0, 0.67937, 0, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.66667],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.63194, 0, 0, 0.5],\n        \"713\": [0, 0.60889, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.67937, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.66667],\n        \"732\": [0, 0.67659, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"915\": [0, 0.69444, 0, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0, 0, 0.66667],\n        \"928\": [0, 0.69444, 0, 0, 0.70834],\n        \"931\": [0, 0.69444, 0, 0, 0.72222],\n        \"933\": [0, 0.69444, 0, 0, 0.77778],\n        \"934\": [0, 0.69444, 0, 0, 0.72222],\n        \"936\": [0, 0.69444, 0, 0, 0.77778],\n        \"937\": [0, 0.69444, 0, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5],\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n        \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n        \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n        \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n        \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n        \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n        \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n        \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n        \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n        \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n        \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n        \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n        \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n        \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n        \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n        \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n        \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n        \"82\": [0, 0.7, 0.06259, 0, 0.85],\n        \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n        \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n        \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n        \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n        \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n        \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n        \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n        \"90\": [0, 0.7, 0.24037, 0, 0.8212],\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"710\": [0, 0.72222, 0, 0, 0.55556],\n        \"732\": [0, 0.72222, 0, 0, 0.55556],\n        \"770\": [0, 0.72222, 0, 0, 0.55556],\n        \"771\": [0, 0.72222, 0, 0, 0.55556],\n        \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n        \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n        \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n        \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n        \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n        \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"10758\": [0.25001, 0.75, 0, 0, 0.83334],\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"710\": [0, 0.75, 0, 0, 1.0],\n        \"732\": [0, 0.75, 0, 0, 1.0],\n        \"770\": [0, 0.75, 0, 0, 1.0],\n        \"771\": [0, 0.75, 0, 0, 1.0],\n        \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n        \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"10758\": [0.55001, 1.05, 0, 0, 1.11111],\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"123\": [0.95003, 1.45, 0, 0, 0.75],\n        \"125\": [0.95003, 1.45, 0, 0, 0.75],\n        \"710\": [0, 0.75, 0, 0, 1.44445],\n        \"732\": [0, 0.75, 0, 0, 1.44445],\n        \"770\": [0, 0.75, 0, 0, 1.44445],\n        \"771\": [0, 0.75, 0, 0, 1.44445],\n        \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n        \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n        \"10217\": [0.95003, 1.45, 0, 0, 0.75],\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"710\": [0, 0.825, 0, 0, 1.8889],\n        \"732\": [0, 0.825, 0, 0, 1.8889],\n        \"770\": [0, 0.825, 0, 0, 1.8889],\n        \"771\": [0, 0.825, 0, 0, 1.8889],\n        \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n        \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9129\": [0.90001, 0, 0, 0, 0.88889],\n        \"9130\": [0, 0.3, 0, 0, 0.88889],\n        \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9133\": [0.90001, 0, 0, 0, 0.88889],\n        \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n        \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57680\": [0, 0.12, 0, 0, 0.45],\n        \"57681\": [0, 0.12, 0, 0, 0.45],\n        \"57682\": [0, 0.12, 0, 0, 0.45],\n        \"57683\": [0, 0.12, 0, 0, 0.45],\n    },\n    \"Typewriter-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.525],\n        \"33\": [0, 0.61111, 0, 0, 0.525],\n        \"34\": [0, 0.61111, 0, 0, 0.525],\n        \"35\": [0, 0.61111, 0, 0, 0.525],\n        \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"38\": [0, 0.61111, 0, 0, 0.525],\n        \"39\": [0, 0.61111, 0, 0, 0.525],\n        \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"42\": [0, 0.52083, 0, 0, 0.525],\n        \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"44\": [0.13889, 0.125, 0, 0, 0.525],\n        \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"46\": [0, 0.125, 0, 0, 0.525],\n        \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"48\": [0, 0.61111, 0, 0, 0.525],\n        \"49\": [0, 0.61111, 0, 0, 0.525],\n        \"50\": [0, 0.61111, 0, 0, 0.525],\n        \"51\": [0, 0.61111, 0, 0, 0.525],\n        \"52\": [0, 0.61111, 0, 0, 0.525],\n        \"53\": [0, 0.61111, 0, 0, 0.525],\n        \"54\": [0, 0.61111, 0, 0, 0.525],\n        \"55\": [0, 0.61111, 0, 0, 0.525],\n        \"56\": [0, 0.61111, 0, 0, 0.525],\n        \"57\": [0, 0.61111, 0, 0, 0.525],\n        \"58\": [0, 0.43056, 0, 0, 0.525],\n        \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n        \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n        \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"63\": [0, 0.61111, 0, 0, 0.525],\n        \"64\": [0, 0.61111, 0, 0, 0.525],\n        \"65\": [0, 0.61111, 0, 0, 0.525],\n        \"66\": [0, 0.61111, 0, 0, 0.525],\n        \"67\": [0, 0.61111, 0, 0, 0.525],\n        \"68\": [0, 0.61111, 0, 0, 0.525],\n        \"69\": [0, 0.61111, 0, 0, 0.525],\n        \"70\": [0, 0.61111, 0, 0, 0.525],\n        \"71\": [0, 0.61111, 0, 0, 0.525],\n        \"72\": [0, 0.61111, 0, 0, 0.525],\n        \"73\": [0, 0.61111, 0, 0, 0.525],\n        \"74\": [0, 0.61111, 0, 0, 0.525],\n        \"75\": [0, 0.61111, 0, 0, 0.525],\n        \"76\": [0, 0.61111, 0, 0, 0.525],\n        \"77\": [0, 0.61111, 0, 0, 0.525],\n        \"78\": [0, 0.61111, 0, 0, 0.525],\n        \"79\": [0, 0.61111, 0, 0, 0.525],\n        \"80\": [0, 0.61111, 0, 0, 0.525],\n        \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n        \"82\": [0, 0.61111, 0, 0, 0.525],\n        \"83\": [0, 0.61111, 0, 0, 0.525],\n        \"84\": [0, 0.61111, 0, 0, 0.525],\n        \"85\": [0, 0.61111, 0, 0, 0.525],\n        \"86\": [0, 0.61111, 0, 0, 0.525],\n        \"87\": [0, 0.61111, 0, 0, 0.525],\n        \"88\": [0, 0.61111, 0, 0, 0.525],\n        \"89\": [0, 0.61111, 0, 0, 0.525],\n        \"90\": [0, 0.61111, 0, 0, 0.525],\n        \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"94\": [0, 0.61111, 0, 0, 0.525],\n        \"95\": [0.09514, 0, 0, 0, 0.525],\n        \"96\": [0, 0.61111, 0, 0, 0.525],\n        \"97\": [0, 0.43056, 0, 0, 0.525],\n        \"98\": [0, 0.61111, 0, 0, 0.525],\n        \"99\": [0, 0.43056, 0, 0, 0.525],\n        \"100\": [0, 0.61111, 0, 0, 0.525],\n        \"101\": [0, 0.43056, 0, 0, 0.525],\n        \"102\": [0, 0.61111, 0, 0, 0.525],\n        \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"104\": [0, 0.61111, 0, 0, 0.525],\n        \"105\": [0, 0.61111, 0, 0, 0.525],\n        \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n        \"107\": [0, 0.61111, 0, 0, 0.525],\n        \"108\": [0, 0.61111, 0, 0, 0.525],\n        \"109\": [0, 0.43056, 0, 0, 0.525],\n        \"110\": [0, 0.43056, 0, 0, 0.525],\n        \"111\": [0, 0.43056, 0, 0, 0.525],\n        \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"114\": [0, 0.43056, 0, 0, 0.525],\n        \"115\": [0, 0.43056, 0, 0, 0.525],\n        \"116\": [0, 0.55358, 0, 0, 0.525],\n        \"117\": [0, 0.43056, 0, 0, 0.525],\n        \"118\": [0, 0.43056, 0, 0, 0.525],\n        \"119\": [0, 0.43056, 0, 0, 0.525],\n        \"120\": [0, 0.43056, 0, 0, 0.525],\n        \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"122\": [0, 0.43056, 0, 0, 0.525],\n        \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"126\": [0, 0.61111, 0, 0, 0.525],\n        \"127\": [0, 0.61111, 0, 0, 0.525],\n        \"160\": [0, 0, 0, 0, 0.525],\n        \"176\": [0, 0.61111, 0, 0, 0.525],\n        \"184\": [0.19445, 0, 0, 0, 0.525],\n        \"305\": [0, 0.43056, 0, 0, 0.525],\n        \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"711\": [0, 0.56597, 0, 0, 0.525],\n        \"713\": [0, 0.56555, 0, 0, 0.525],\n        \"714\": [0, 0.61111, 0, 0, 0.525],\n        \"715\": [0, 0.61111, 0, 0, 0.525],\n        \"728\": [0, 0.61111, 0, 0, 0.525],\n        \"730\": [0, 0.61111, 0, 0, 0.525],\n        \"770\": [0, 0.61111, 0, 0, 0.525],\n        \"771\": [0, 0.61111, 0, 0, 0.525],\n        \"776\": [0, 0.61111, 0, 0, 0.525],\n        \"915\": [0, 0.61111, 0, 0, 0.525],\n        \"916\": [0, 0.61111, 0, 0, 0.525],\n        \"920\": [0, 0.61111, 0, 0, 0.525],\n        \"923\": [0, 0.61111, 0, 0, 0.525],\n        \"926\": [0, 0.61111, 0, 0, 0.525],\n        \"928\": [0, 0.61111, 0, 0, 0.525],\n        \"931\": [0, 0.61111, 0, 0, 0.525],\n        \"933\": [0, 0.61111, 0, 0, 0.525],\n        \"934\": [0, 0.61111, 0, 0, 0.525],\n        \"936\": [0, 0.61111, 0, 0, 0.525],\n        \"937\": [0, 0.61111, 0, 0, 0.525],\n        \"8216\": [0, 0.61111, 0, 0, 0.525],\n        \"8217\": [0, 0.61111, 0, 0, 0.525],\n        \"8242\": [0, 0.61111, 0, 0, 0.525],\n        \"9251\": [0.11111, 0.21944, 0, 0, 0.525],\n    },\n};\n","//[xMin, yMin, xMax, yMax]\r\nexport default {\r\n    \"AMS-Regular\": {\r\n        \"65\": [0.017, -0.001, 0.703, 0.701],\r\n        \"66\": [0.011, -0.001, 0.62, 0.683],\r\n        \"67\": [0.039, -0.019, 0.684, 0.702],\r\n        \"68\": [0.016, -0.001, 0.688, 0.683],\r\n        \"69\": [0.012, -0.001, 0.64, 0.683],\r\n        \"70\": [0.012, -0.001, 0.584, 0.683],\r\n        \"71\": [0.039, -0.019, 0.749, 0.702],\r\n        \"72\": [0.014, -0.001, 0.762, 0.683],\r\n        \"73\": [0.02, -0.001, 0.369, 0.683],\r\n        \"74\": [0.006, -0.077, 0.478, 0.683],\r\n        \"75\": [0.022, -0.001, 0.768, 0.683],\r\n        \"76\": [0.012, -0.001, 0.64, 0.683],\r\n        \"77\": [0.017, -0.001, 0.926, 0.683],\r\n        \"78\": [0.02, -0.02, 0.702, 0.683],\r\n        \"79\": [0.034, -0.019, 0.742, 0.701],\r\n        \"80\": [0.016, -0.001, 0.597, 0.683],\r\n        \"81\": [0.034, -0.181, 0.742, 0.701],\r\n        \"82\": [0.016, -0.001, 0.705, 0.683],\r\n        \"83\": [0.028, -0.012, 0.528, 0.702],\r\n        \"84\": [0.033, -0.001, 0.635, 0.683],\r\n        \"85\": [0.016, -0.019, 0.709, 0.683],\r\n        \"86\": [0, -0.02, 0.719, 0.683],\r\n        \"87\": [0.005, -0.019, 0.994, 0.683],\r\n        \"88\": [0.016, -0.001, 0.705, 0.683],\r\n        \"89\": [0.016, -0.001, 0.704, 0.683],\r\n        \"90\": [0.029, -0.001, 0.635, 0.683],\r\n        \"107\": [0.017, -0.001, 0.534, 0.683],\r\n        \"165\": [0.011, 0, 0.738, 0.683],\r\n        \"174\": [0.032, -0.175, 0.915, 0.709],\r\n        \"240\": [0.042, -0.021, 0.509, 0.749],\r\n        \"295\": [0.042, -0.013, 0.562, 0.695],\r\n        \"710\": [-0.014, 0.561, 2.346, 0.845],\r\n        \"732\": [0.002, 0.628, 2.329, 0.899],\r\n        \"770\": [-2.347, 0.561, 0.013, 0.845],\r\n        \"771\": [-2.331, 0.628, -0.004, 0.899],\r\n        \"989\": [0.055, -0.085, 0.719, 0.605],\r\n        \"1008\": [0.037, -0.006, 0.734, 0.434],\r\n        \"8245\": [0.012, 0.043, 0.244, 0.56],\r\n        \"8463\": [0.042, -0.013, 0.562, 0.695],\r\n        \"8487\": [0.044, -0.022, 0.675, 0.684],\r\n        \"8498\": [0.055, -0.001, 0.497, 0.695],\r\n        \"8502\": [-0.022, -0.021, 0.687, 0.763],\r\n        \"8503\": [-0.022, -0.043, 0.421, 0.764],\r\n        \"8504\": [0.054, -0.043, 0.64, 0.764],\r\n        \"8513\": [0.037, -0.023, 0.577, 0.705],\r\n        \"8592\": [0.064, 0.064, 0.422, 0.437],\r\n        \"8594\": [0.058, 0.064, 0.417, 0.437],\r\n        \"8602\": [0.056, 0.06, 0.942, 0.437],\r\n        \"8603\": [0.054, 0.06, 0.942, 0.437],\r\n        \"8606\": [0.056, 0.083, 0.944, 0.417],\r\n        \"8608\": [0.055, 0.083, 0.943, 0.417],\r\n        \"8610\": [0.056, 0.083, 1.031, 0.417],\r\n        \"8611\": [0.079, 0.083, 1.054, 0.417],\r\n        \"8619\": [0.056, -0.041, 0.964, 0.575],\r\n        \"8620\": [0.035, -0.041, 0.943, 0.575],\r\n        \"8621\": [0.057, 0.083, 1.331, 0.417],\r\n        \"8622\": [0.056, 0.06, 0.942, 0.437],\r\n        \"8624\": [0.056, 0, 0.444, 0.722],\r\n        \"8625\": [0.055, 0, 0.443, 0.722],\r\n        \"8630\": [0.017, -0.001, 0.95, 0.461],\r\n        \"8631\": [0.046, -0.001, 0.982, 0.46],\r\n        \"8634\": [0.056, -0.083, 0.722, 0.65],\r\n        \"8635\": [0.056, -0.083, 0.721, 0.65],\r\n        \"8638\": [0.188, -0.194, 0.375, 0.694],\r\n        \"8639\": [0.041, -0.194, 0.228, 0.694],\r\n        \"8642\": [0.188, -0.194, 0.375, 0.694],\r\n        \"8643\": [0.041, -0.194, 0.228, 0.694],\r\n        \"8644\": [0.055, 0, 0.944, 0.667],\r\n        \"8646\": [0.055, 0, 0.944, 0.667],\r\n        \"8647\": [0.055, -0.083, 0.944, 0.583],\r\n        \"8648\": [0.083, -0.193, 0.749, 0.694],\r\n        \"8649\": [0.055, -0.083, 0.944, 0.583],\r\n        \"8650\": [0.083, -0.194, 0.749, 0.694],\r\n        \"8651\": [0.055, -0.014, 0.944, 0.514],\r\n        \"8652\": [0.055, -0.014, 0.944, 0.514],\r\n        \"8653\": [0.055, -0.035, 0.942, 0.534],\r\n        \"8654\": [0.033, -0.037, 0.964, 0.534],\r\n        \"8655\": [0.055, -0.035, 0.942, 0.534],\r\n        \"8666\": [0.076, -0.111, 0.944, 0.611],\r\n        \"8667\": [0.055, -0.111, 0.923, 0.611],\r\n        \"8669\": [0.056, 0.083, 0.943, 0.417],\r\n        \"8672\": [0.064, 0.064, 1.251, 0.437],\r\n        \"8674\": [0.084, 0.064, 1.251, 0.437],\r\n        \"8705\": [0.056, -0.021, 0.444, 0.846],\r\n        \"8708\": [0.055, -0.166, 0.497, 0.86],\r\n        \"8709\": [0.055, -0.003, 0.72, 0.587],\r\n        \"8717\": [0.102, -0.001, 0.456, 0.44],\r\n        \"8722\": [0.084, 0.23, 0.417, 0.27],\r\n        \"8724\": [0.057, -0.093, 0.722, 0.766],\r\n        \"8726\": [0.091, -0.023, 0.685, 0.43],\r\n        \"8733\": [0.056, 0.028, 0.722, 0.472],\r\n        \"8736\": [0.055, 0, 0.666, 0.694],\r\n        \"8737\": [0.055, -0.02, 0.666, 0.714],\r\n        \"8738\": [0.055, -0.051, 0.666, 0.551],\r\n        \"8739\": [0.091, -0.023, 0.131, 0.43],\r\n        \"8740\": [-0.02, -0.252, 0.297, 0.75],\r\n        \"8741\": [0.055, -0.023, 0.331, 0.431],\r\n        \"8742\": [-0.02, -0.25, 0.518, 0.75],\r\n        \"8756\": [0.024, -0.082, 0.643, 0.471],\r\n        \"8757\": [0.023, -0.082, 0.643, 0.471],\r\n        \"8764\": [0.055, 0.132, 0.719, 0.365],\r\n        \"8765\": [0.056, 0.133, 0.722, 0.367],\r\n        \"8769\": [0.055, 0.032, 0.719, 0.467],\r\n        \"8770\": [0.055, 0.034, 0.72, 0.463],\r\n        \"8774\": [0.054, -0.155, 0.72, 0.652],\r\n        \"8776\": [0.055, 0.05, 0.719, 0.481],\r\n        \"8778\": [0.051, -0.039, 0.725, 0.579],\r\n        \"8782\": [0.056, 0.008, 0.722, 0.492],\r\n        \"8783\": [0.056, 0.133, 0.722, 0.492],\r\n        \"8785\": [0.056, -0.108, 0.722, 0.609],\r\n        \"8786\": [0.015, -0.101, 0.762, 0.601],\r\n        \"8787\": [0.014, -0.102, 0.762, 0.601],\r\n        \"8790\": [0.056, 0.133, 0.722, 0.367],\r\n        \"8791\": [0.056, 0.133, 0.722, 0.721],\r\n        \"8796\": [0.056, 0.133, 0.723, 0.859],\r\n        \"8806\": [0.083, -0.175, 0.694, 0.753],\r\n        \"8807\": [0.083, -0.175, 0.694, 0.753],\r\n        \"8808\": [0.082, -0.286, 0.693, 0.752],\r\n        \"8809\": [0.082, -0.286, 0.693, 0.752],\r\n        \"8812\": [0.074, -0.25, 0.425, 0.75],\r\n        \"8814\": [0.082, -0.209, 0.693, 0.708],\r\n        \"8815\": [0.082, -0.209, 0.693, 0.708],\r\n        \"8816\": [0.082, -0.303, 0.694, 0.801],\r\n        \"8817\": [0.082, -0.303, 0.694, 0.801],\r\n        \"8818\": [0.056, -0.228, 0.722, 0.732],\r\n        \"8819\": [0.056, -0.228, 0.722, 0.732],\r\n        \"8822\": [0.044, -0.253, 0.734, 0.681],\r\n        \"8823\": [0.083, -0.253, 0.694, 0.681],\r\n        \"8828\": [0.083, -0.153, 0.694, 0.58],\r\n        \"8829\": [0.083, -0.154, 0.694, 0.58],\r\n        \"8830\": [0.056, -0.228, 0.722, 0.732],\r\n        \"8831\": [0.056, -0.228, 0.722, 0.732],\r\n        \"8832\": [0.082, -0.208, 0.693, 0.705],\r\n        \"8833\": [0.082, -0.208, 0.693, 0.705],\r\n        \"8840\": [0.083, -0.303, 0.693, 0.801],\r\n        \"8841\": [0.082, -0.303, 0.691, 0.801],\r\n        \"8842\": [0.084, -0.241, 0.693, 0.635],\r\n        \"8843\": [0.082, -0.241, 0.691, 0.635],\r\n        \"8847\": [0.083, -0.041, 0.694, 0.539],\r\n        \"8848\": [0.064, -0.041, 0.714, 0.539],\r\n        \"8858\": [0.057, -0.082, 0.721, 0.582],\r\n        \"8859\": [0.057, -0.082, 0.721, 0.582],\r\n        \"8861\": [0.057, -0.082, 0.721, 0.582],\r\n        \"8862\": [0.055, 0, 0.722, 0.689],\r\n        \"8863\": [0.055, 0, 0.722, 0.689],\r\n        \"8864\": [0.055, 0, 0.722, 0.689],\r\n        \"8865\": [0.055, 0, 0.722, 0.689],\r\n        \"8872\": [0.055, 0, 0.555, 0.694],\r\n        \"8873\": [0.055, 0, 0.666, 0.694],\r\n        \"8874\": [0.055, 0, 0.833, 0.694],\r\n        \"8876\": [-0.055, -0.001, 0.554, 0.695],\r\n        \"8877\": [-0.055, -0.001, 0.554, 0.695],\r\n        \"8878\": [-0.055, -0.001, 0.665, 0.695],\r\n        \"8879\": [-0.055, -0.001, 0.665, 0.695],\r\n        \"8882\": [0.083, -0.041, 0.694, 0.539],\r\n        \"8883\": [0.083, -0.041, 0.694, 0.539],\r\n        \"8884\": [0.083, -0.138, 0.694, 0.636],\r\n        \"8885\": [0.083, -0.138, 0.694, 0.636],\r\n        \"8888\": [0.055, 0.092, 1.055, 0.408],\r\n        \"8890\": [0.057, -0.212, 0.5, 0.431],\r\n        \"8891\": [0.055, 0, 0.555, 0.716],\r\n        \"8892\": [0.055, 0, 0.555, 0.716],\r\n        \"8901\": [0.055, 0, 0.222, 0.189],\r\n        \"8903\": [0.055, -0.044, 0.72, 0.545],\r\n        \"8905\": [0.146, 0.008, 0.628, 0.492],\r\n        \"8906\": [0.146, 0.008, 0.628, 0.492],\r\n        \"8907\": [0.055, -0.022, 0.722, 0.694],\r\n        \"8908\": [0.055, -0.022, 0.722, 0.694],\r\n        \"8909\": [0.056, 0.036, 0.722, 0.464],\r\n        \"8910\": [0.083, -0.021, 0.676, 0.578],\r\n        \"8911\": [0.083, -0.022, 0.676, 0.578],\r\n        \"8912\": [0.084, -0.04, 0.694, 0.54],\r\n        \"8913\": [0.083, -0.04, 0.693, 0.54],\r\n        \"8914\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8915\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8916\": [0.056, -0.022, 0.611, 0.736],\r\n        \"8918\": [0.082, -0.041, 0.693, 0.541],\r\n        \"8919\": [0.082, -0.041, 0.693, 0.541],\r\n        \"8920\": [0.056, -0.067, 1.277, 0.568],\r\n        \"8921\": [0.055, -0.067, 1.277, 0.568],\r\n        \"8922\": [0.083, -0.386, 0.674, 0.886],\r\n        \"8923\": [0.083, -0.386, 0.674, 0.886],\r\n        \"8926\": [0.083, 0, 0.694, 0.734],\r\n        \"8927\": [0.083, 0, 0.694, 0.734],\r\n        \"8928\": [0.082, -0.303, 0.693, 0.801],\r\n        \"8929\": [0.082, -0.303, 0.694, 0.801],\r\n        \"8934\": [0.055, -0.359, 0.719, 0.73],\r\n        \"8935\": [0.055, -0.359, 0.719, 0.73],\r\n        \"8936\": [0.055, -0.359, 0.719, 0.73],\r\n        \"8937\": [0.055, -0.359, 0.719, 0.73],\r\n        \"8938\": [0.082, -0.208, 0.693, 0.706],\r\n        \"8939\": [0.082, -0.208, 0.693, 0.706],\r\n        \"8940\": [0.082, -0.303, 0.693, 0.802],\r\n        \"8941\": [0.082, -0.303, 0.693, 0.801],\r\n        \"8994\": [0.055, 0.122, 0.722, 0.378],\r\n        \"8995\": [0.055, 0.143, 0.722, 0.378],\r\n        \"9416\": [0.008, -0.175, 0.894, 0.709],\r\n        \"9484\": [0.055, 0.306, 0.444, 0.694],\r\n        \"9488\": [0.055, 0.306, 0.444, 0.694],\r\n        \"9492\": [0.055, -0.022, 0.444, 0.366],\r\n        \"9496\": [0.055, -0.022, 0.444, 0.366],\r\n        \"9585\": [0, -0.195, 0.86, 0.694],\r\n        \"9586\": [0, -0.195, 0.86, 0.694],\r\n        \"9632\": [0.055, 0, 0.722, 0.689],\r\n        \"9633\": [0.055, 0, 0.722, 0.689],\r\n        \"9650\": [0.084, -0.02, 0.637, 0.575],\r\n        \"9651\": [0.084, -0.02, 0.637, 0.575],\r\n        \"9654\": [0.083, -0.041, 0.694, 0.539],\r\n        \"9660\": [0.084, -0.019, 0.637, 0.576],\r\n        \"9661\": [0.084, -0.019, 0.637, 0.576],\r\n        \"9664\": [0.083, -0.041, 0.694, 0.539],\r\n        \"9674\": [0.056, -0.132, 0.611, 0.716],\r\n        \"9733\": [0.049, -0.111, 0.895, 0.694],\r\n        \"10003\": [0.084, -0.034, 0.749, 0.706],\r\n        \"10016\": [0.048, -0.022, 0.786, 0.716],\r\n        \"10731\": [0.056, -0.132, 0.611, 0.716],\r\n        \"10846\": [0.055, -0.097, 0.555, 0.813],\r\n        \"10877\": [0.083, -0.138, 0.694, 0.636],\r\n        \"10878\": [0.083, -0.138, 0.694, 0.636],\r\n        \"10885\": [0.055, -0.29, 0.722, 0.762],\r\n        \"10886\": [0.055, -0.29, 0.722, 0.762],\r\n        \"10887\": [0.082, -0.241, 0.693, 0.635],\r\n        \"10888\": [0.082, -0.241, 0.693, 0.635],\r\n        \"10889\": [0.057, -0.387, 0.718, 0.761],\r\n        \"10890\": [0.057, -0.387, 0.718, 0.761],\r\n        \"10891\": [0.083, -0.463, 0.694, 1.003],\r\n        \"10892\": [0.083, -0.463, 0.694, 1.003],\r\n        \"10901\": [0.083, -0.138, 0.694, 0.636],\r\n        \"10902\": [0.083, -0.138, 0.694, 0.636],\r\n        \"10933\": [0.082, -0.286, 0.693, 0.752],\r\n        \"10934\": [0.082, -0.286, 0.693, 0.752],\r\n        \"10935\": [0.057, -0.294, 0.717, 0.761],\r\n        \"10936\": [0.057, -0.294, 0.717, 0.761],\r\n        \"10937\": [0.057, -0.337, 0.718, 0.761],\r\n        \"10938\": [0.057, -0.337, 0.718, 0.761],\r\n        \"10949\": [0.084, -0.215, 0.694, 0.753],\r\n        \"10950\": [0.083, -0.215, 0.694, 0.753],\r\n        \"10955\": [0.082, -0.385, 0.693, 0.783],\r\n        \"10956\": [0.082, -0.385, 0.693, 0.783],\r\n        \"57350\": [-0.02, -0.023, 0.24, 0.43],\r\n        \"57351\": [-0.02, -0.024, 0.407, 0.431],\r\n        \"57352\": [0.055, -0.085, 0.719, 0.605],\r\n        \"57353\": [0.037, -0.006, 0.734, 0.434],\r\n        \"57356\": [0.082, -0.284, 0.693, 0.752],\r\n        \"57357\": [0.082, -0.284, 0.693, 0.752],\r\n        \"57358\": [0.082, -0.421, 0.694, 0.919],\r\n        \"57359\": [0.082, -0.303, 0.694, 0.801],\r\n        \"57360\": [0.082, -0.303, 0.694, 0.801],\r\n        \"57361\": [0.082, -0.421, 0.694, 0.919],\r\n        \"57366\": [0.082, -0.33, 0.694, 0.828],\r\n        \"57367\": [0.082, -0.332, 0.694, 0.752],\r\n        \"57368\": [0.082, -0.33, 0.694, 0.828],\r\n        \"57369\": [0.082, -0.333, 0.693, 0.752],\r\n        \"57370\": [0.084, -0.255, 0.693, 0.634],\r\n        \"57371\": [0.082, -0.254, 0.691, 0.634],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Caligraphic-Regular\": {\r\n        \"48\": [0.039, -0.022, 0.46, 0.452],\r\n        \"49\": [0.086, 0, 0.426, 0.453],\r\n        \"50\": [0.044, 0, 0.449, 0.453],\r\n        \"51\": [0.042, -0.216, 0.456, 0.452],\r\n        \"52\": [0.028, -0.194, 0.471, 0.464],\r\n        \"53\": [0.05, -0.216, 0.448, 0.453],\r\n        \"54\": [0.042, -0.022, 0.456, 0.665],\r\n        \"55\": [0.055, -0.216, 0.485, 0.463],\r\n        \"56\": [0.043, -0.021, 0.456, 0.666],\r\n        \"57\": [0.042, -0.216, 0.457, 0.453],\r\n        \"65\": [0.03, -0.05, 0.819, 0.728],\r\n        \"66\": [0.032, -0.022, 0.664, 0.705],\r\n        \"67\": [0.012, -0.025, 0.533, 0.705],\r\n        \"68\": [0.019, 0, 0.766, 0.683],\r\n        \"69\": [0.03, -0.022, 0.564, 0.705],\r\n        \"70\": [0.018, -0.032, 0.829, 0.683],\r\n        \"71\": [0.044, -0.119, 0.599, 0.704],\r\n        \"72\": [0.018, -0.048, 0.803, 0.683],\r\n        \"73\": [-0.03, 0, 0.642, 0.683],\r\n        \"74\": [0.047, -0.119, 0.839, 0.683],\r\n        \"75\": [0.032, -0.022, 0.732, 0.705],\r\n        \"76\": [0.032, -0.022, 0.656, 0.705],\r\n        \"77\": [0.028, -0.05, 1.137, 0.705],\r\n        \"78\": [-0.027, -0.05, 0.979, 0.789],\r\n        \"79\": [0.058, -0.022, 0.777, 0.705],\r\n        \"80\": [0.019, -0.057, 0.733, 0.683],\r\n        \"81\": [0.114, -0.131, 0.787, 0.705],\r\n        \"82\": [0.019, -0.022, 0.837, 0.682],\r\n        \"83\": [0.018, -0.022, 0.642, 0.705],\r\n        \"84\": [0.034, -0.068, 0.833, 0.717],\r\n        \"85\": [-0.017, -0.028, 0.687, 0.683],\r\n        \"86\": [0.025, -0.052, 0.658, 0.683],\r\n        \"87\": [0.025, -0.053, 1.034, 0.683],\r\n        \"88\": [0.052, 0, 0.807, 0.683],\r\n        \"89\": [0.031, -0.143, 0.714, 0.683],\r\n        \"90\": [0.037, 0, 0.767, 0.683],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Caligraphic-Bold\": {\r\n        \"48\": [0.046, -0.017, 0.528, 0.46],\r\n        \"49\": [0.08, 0, 0.494, 0.461],\r\n        \"50\": [0.051, 0, 0.517, 0.46],\r\n        \"51\": [0.048, -0.211, 0.525, 0.461],\r\n        \"52\": [0.032, -0.194, 0.542, 0.469],\r\n        \"53\": [0.057, -0.211, 0.517, 0.461],\r\n        \"54\": [0.048, -0.017, 0.526, 0.66],\r\n        \"55\": [0.064, -0.211, 0.558, 0.476],\r\n        \"56\": [0.048, -0.017, 0.526, 0.661],\r\n        \"57\": [0.048, -0.21, 0.526, 0.461],\r\n        \"65\": [0.039, -0.049, 0.989, 0.751],\r\n        \"66\": [0.04, -0.017, 0.739, 0.705],\r\n        \"67\": [0.02, -0.02, 0.599, 0.703],\r\n        \"68\": [0.02, 0, 0.885, 0.686],\r\n        \"69\": [0.037, -0.016, 0.627, 0.703],\r\n        \"70\": [0.017, -0.03, 0.93, 0.686],\r\n        \"71\": [0.05, -0.113, 0.671, 0.703],\r\n        \"72\": [0.02, -0.048, 0.946, 0.686],\r\n        \"73\": [-0.027, 0, 0.746, 0.686],\r\n        \"74\": [0.053, -0.114, 0.937, 0.686],\r\n        \"75\": [0.04, -0.017, 0.834, 0.703],\r\n        \"76\": [0.041, -0.017, 0.751, 0.703],\r\n        \"77\": [0.038, -0.049, 1.353, 0.703],\r\n        \"78\": [-0.024, -0.049, 1.105, 0.84],\r\n        \"79\": [0.063, -0.017, 0.882, 0.703],\r\n        \"80\": [0.02, -0.067, 0.846, 0.686],\r\n        \"81\": [0.12, -0.146, 0.905, 0.703],\r\n        \"82\": [0.02, -0.017, 0.981, 0.686],\r\n        \"83\": [0.025, -0.016, 0.721, 0.703],\r\n        \"84\": [0.038, -0.069, 0.947, 0.72],\r\n        \"85\": [-0.01, -0.024, 0.771, 0.686],\r\n        \"86\": [0.025, -0.077, 0.774, 0.686],\r\n        \"87\": [0.025, -0.077, 1.206, 0.686],\r\n        \"88\": [0.056, 0.001, 0.906, 0.686],\r\n        \"89\": [0.036, -0.164, 0.797, 0.686],\r\n        \"90\": [0.046, 0, 0.853, 0.686],\r\n        \"61437\": [0, 0, 0.5, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Fraktur-Regular\": {\r\n        \"33\": [0.091, -0.012, 0.204, 0.689],\r\n        \"34\": [0.008, 0.432, 0.196, 0.695],\r\n        \"38\": [0.049, -0.011, 0.733, 0.698],\r\n        \"39\": [0.069, 0.436, 0.134, 0.695],\r\n        \"40\": [0.114, -0.186, 0.293, 0.737],\r\n        \"41\": [0.089, -0.187, 0.276, 0.735],\r\n        \"42\": [0.034, 0.449, 0.233, 0.692],\r\n        \"43\": [0.047, -0.082, 0.709, 0.598],\r\n        \"44\": [0.099, -0.191, 0.213, 0.107],\r\n        \"45\": [0.046, 0.236, 0.706, 0.275],\r\n        \"46\": [0.087, -0.015, 0.2, 0.102],\r\n        \"47\": [0.034, -0.182, 0.466, 0.721],\r\n        \"48\": [0.042, -0.013, 0.456, 0.492],\r\n        \"49\": [0.047, -0.002, 0.46, 0.468],\r\n        \"50\": [0.06, 0.001, 0.484, 0.474],\r\n        \"51\": [0.039, -0.182, 0.429, 0.473],\r\n        \"52\": [0.01, -0.191, 0.481, 0.476],\r\n        \"53\": [0.047, -0.184, 0.44, 0.458],\r\n        \"54\": [0.045, -0.013, 0.471, 0.7],\r\n        \"55\": [0.037, -0.181, 0.498, 0.468],\r\n        \"56\": [0.04, -0.01, 0.461, 0.705],\r\n        \"57\": [0.028, -0.182, 0.466, 0.469],\r\n        \"58\": [0.05, -0.012, 0.168, 0.457],\r\n        \"59\": [0.047, -0.189, 0.179, 0.458],\r\n        \"61\": [0.054, 0.132, 0.725, 0.368],\r\n        \"63\": [0.046, -0.011, 0.357, 0.693],\r\n        \"65\": [0.022, -0.026, 0.707, 0.696],\r\n        \"66\": [0.048, -0.027, 0.82, 0.691],\r\n        \"67\": [0.059, -0.024, 0.607, 0.685],\r\n        \"68\": [0.027, -0.027, 0.745, 0.685],\r\n        \"69\": [0.086, -0.024, 0.634, 0.685],\r\n        \"70\": [0.011, -0.153, 0.612, 0.686],\r\n        \"71\": [0.066, -0.026, 0.71, 0.69],\r\n        \"72\": [0.001, -0.133, 0.644, 0.666],\r\n        \"73\": [0.03, -0.026, 0.532, 0.686],\r\n        \"74\": [-0.01, -0.139, 0.522, 0.686],\r\n        \"75\": [0.017, -0.027, 0.682, 0.68],\r\n        \"76\": [0.033, -0.026, 0.644, 0.686],\r\n        \"77\": [0.027, -0.027, 1.048, 0.692],\r\n        \"78\": [0.027, -0.025, 0.825, 0.686],\r\n        \"79\": [0.012, -0.027, 0.744, 0.729],\r\n        \"80\": [0.028, -0.218, 0.804, 0.692],\r\n        \"81\": [0.011, -0.069, 0.782, 0.729],\r\n        \"82\": [0.027, -0.026, 0.824, 0.686],\r\n        \"83\": [0.066, -0.027, 0.756, 0.692],\r\n        \"84\": [0.034, -0.027, 0.676, 0.701],\r\n        \"85\": [-0.025, -0.027, 0.665, 0.697],\r\n        \"86\": [0.027, -0.026, 0.825, 0.686],\r\n        \"87\": [0.032, -0.027, 1.054, 0.686],\r\n        \"88\": [0.028, -0.027, 0.709, 0.688],\r\n        \"89\": [0.027, -0.218, 0.74, 0.686],\r\n        \"90\": [0.011, -0.139, 0.532, 0.729],\r\n        \"91\": [0.117, -0.13, 0.278, 0.74],\r\n        \"93\": [-0.004, -0.131, 0.16, 0.738],\r\n        \"94\": [0, 0.452, 0.495, 0.734],\r\n        \"97\": [0.066, -0.035, 0.497, 0.47],\r\n        \"98\": [0.087, -0.031, 0.442, 0.685],\r\n        \"99\": [0.072, -0.029, 0.358, 0.466],\r\n        \"100\": [0.013, -0.033, 0.428, 0.609],\r\n        \"101\": [0.07, -0.03, 0.364, 0.467],\r\n        \"102\": [0.03, -0.221, 0.323, 0.681],\r\n        \"103\": [0.017, -0.209, 0.455, 0.47],\r\n        \"104\": [0.077, -0.205, 0.434, 0.688],\r\n        \"105\": [0.014, -0.02, 0.267, 0.673],\r\n        \"106\": [-0.009, -0.208, 0.196, 0.672],\r\n        \"107\": [0.024, -0.025, 0.362, 0.689],\r\n        \"108\": [0.098, -0.02, 0.276, 0.685],\r\n        \"109\": [0.008, -0.026, 0.753, 0.475],\r\n        \"110\": [0.02, -0.022, 0.514, 0.475],\r\n        \"111\": [0.067, -0.028, 0.412, 0.48],\r\n        \"112\": [0.012, -0.212, 0.43, 0.541],\r\n        \"113\": [0.06, -0.219, 0.419, 0.479],\r\n        \"114\": [0.017, -0.021, 0.387, 0.474],\r\n        \"115\": [-0.018, -0.029, 0.406, 0.477],\r\n        \"116\": [0.027, -0.02, 0.348, 0.64],\r\n        \"117\": [0.009, -0.023, 0.513, 0.474],\r\n        \"118\": [0.055, -0.028, 0.434, 0.53],\r\n        \"119\": [0.045, -0.028, 0.688, 0.532],\r\n        \"120\": [0.01, -0.188, 0.363, 0.472],\r\n        \"121\": [0.045, -0.218, 0.431, 0.528],\r\n        \"122\": [-0.007, -0.214, 0.314, 0.471],\r\n        \"8216\": [0.045, 0.41, 0.158, 0.708],\r\n        \"8217\": [0.049, 0.395, 0.163, 0.692],\r\n        \"58112\": [0.075, -0.032, 0.43, 0.683],\r\n        \"58113\": [0.035, -0.029, 0.432, 0.616],\r\n        \"58114\": [0.029, -0.215, 0.339, 0.68],\r\n        \"58115\": [0.028, -0.224, 0.318, 0.679],\r\n        \"58116\": [0.052, -0.214, 0.449, 0.471],\r\n        \"58117\": [0.026, -0.02, 0.315, 0.686],\r\n        \"58118\": [0.029, -0.021, 0.346, 0.577],\r\n        \"58119\": [0.01, -0.022, 0.514, 0.475],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Fraktur-Bold\": {\r\n        \"33\": [0.107, -0.012, 0.241, 0.689],\r\n        \"34\": [0.01, 0.432, 0.231, 0.695],\r\n        \"38\": [0.044, -0.016, 0.839, 0.696],\r\n        \"39\": [0.08, 0.436, 0.158, 0.695],\r\n        \"40\": [0.134, -0.186, 0.347, 0.737],\r\n        \"41\": [0.105, -0.187, 0.326, 0.735],\r\n        \"42\": [0.04, 0.449, 0.277, 0.692],\r\n        \"43\": [0.056, -0.082, 0.837, 0.598],\r\n        \"44\": [0.118, -0.191, 0.253, 0.107],\r\n        \"45\": [0.054, 0.236, 0.833, 0.275],\r\n        \"46\": [0.103, -0.015, 0.237, 0.102],\r\n        \"47\": [0.041, -0.182, 0.55, 0.721],\r\n        \"48\": [0.042, -0.012, 0.533, 0.501],\r\n        \"49\": [0.054, 0, 0.548, 0.489],\r\n        \"50\": [0.044, 0.002, 0.563, 0.491],\r\n        \"51\": [0.031, -0.193, 0.523, 0.487],\r\n        \"52\": [0.013, -0.196, 0.565, 0.495],\r\n        \"53\": [0.019, -0.19, 0.518, 0.481],\r\n        \"54\": [0.048, -0.012, 0.547, 0.704],\r\n        \"55\": [0.054, -0.197, 0.591, 0.479],\r\n        \"56\": [0.045, -0.005, 0.542, 0.714],\r\n        \"57\": [0.029, -0.195, 0.549, 0.487],\r\n        \"58\": [0.057, -0.012, 0.197, 0.457],\r\n        \"59\": [0.056, -0.19, 0.211, 0.458],\r\n        \"61\": [0.022, 0.168, 0.559, 0.343],\r\n        \"63\": [0.04, -0.014, 0.422, 0.697],\r\n        \"65\": [0.029, -0.031, 0.827, 0.686],\r\n        \"66\": [0.057, -0.031, 0.965, 0.684],\r\n        \"67\": [0.072, -0.032, 0.726, 0.676],\r\n        \"68\": [0.031, -0.029, 0.896, 0.683],\r\n        \"69\": [0.074, -0.029, 0.728, 0.686],\r\n        \"70\": [0.017, -0.146, 0.727, 0.684],\r\n        \"71\": [0.074, -0.029, 0.844, 0.687],\r\n        \"72\": [0.006, -0.126, 0.752, 0.683],\r\n        \"73\": [0.032, -0.025, 0.623, 0.681],\r\n        \"74\": [-0.007, -0.141, 0.616, 0.68],\r\n        \"75\": [0.02, -0.026, 0.806, 0.681],\r\n        \"76\": [0.03, -0.028, 0.764, 0.683],\r\n        \"77\": [0.027, -0.032, 1.232, 0.683],\r\n        \"78\": [0.026, -0.03, 0.973, 0.679],\r\n        \"79\": [0.012, -0.03, 0.881, 0.726],\r\n        \"80\": [0.033, -0.223, 0.942, 0.688],\r\n        \"81\": [0.012, -0.083, 0.918, 0.726],\r\n        \"82\": [0.031, -0.028, 0.978, 0.688],\r\n        \"83\": [0.082, -0.031, 0.905, 0.685],\r\n        \"84\": [0.031, -0.03, 0.802, 0.686],\r\n        \"85\": [0.018, -0.039, 0.871, 0.688],\r\n        \"86\": [0.025, -0.029, 0.966, 0.685],\r\n        \"87\": [0.026, -0.03, 1.24, 0.683],\r\n        \"88\": [0.032, -0.035, 0.835, 0.681],\r\n        \"89\": [0.034, -0.214, 0.878, 0.688],\r\n        \"90\": [-0.004, -0.148, 0.624, 0.677],\r\n        \"91\": [0.036, -0.13, 0.226, 0.74],\r\n        \"93\": [0.014, -0.132, 0.208, 0.738],\r\n        \"94\": [0.001, 0.452, 0.584, 0.734],\r\n        \"97\": [0.08, -0.031, 0.586, 0.472],\r\n        \"98\": [0.086, -0.032, 0.504, 0.69],\r\n        \"99\": [0.087, -0.026, 0.424, 0.473],\r\n        \"100\": [-0.001, -0.028, 0.511, 0.632],\r\n        \"101\": [0.081, -0.027, 0.428, 0.471],\r\n        \"102\": [0.035, -0.222, 0.372, 0.687],\r\n        \"103\": [0.017, -0.208, 0.541, 0.472],\r\n        \"104\": [0.089, -0.207, 0.507, 0.687],\r\n        \"105\": [0.003, -0.025, 0.327, 0.686],\r\n        \"106\": [-0.019, -0.203, 0.238, 0.682],\r\n        \"107\": [0.034, -0.025, 0.432, 0.682],\r\n        \"108\": [0.1, -0.023, 0.312, 0.681],\r\n        \"109\": [0.016, -0.031, 0.9, 0.476],\r\n        \"110\": [0.005, -0.028, 0.608, 0.473],\r\n        \"111\": [0.107, -0.034, 0.515, 0.482],\r\n        \"112\": [-0.001, -0.207, 0.519, 0.557],\r\n        \"113\": [0.087, -0.211, 0.515, 0.485],\r\n        \"114\": [0.013, -0.026, 0.453, 0.472],\r\n        \"115\": [-0.023, -0.034, 0.481, 0.478],\r\n        \"116\": [0.043, -0.027, 0.406, 0.648],\r\n        \"117\": [0.009, -0.031, 0.602, 0.472],\r\n        \"118\": [0.056, -0.027, 0.507, 0.546],\r\n        \"119\": [0.055, -0.032, 0.815, 0.549],\r\n        \"120\": [0.008, -0.188, 0.441, 0.471],\r\n        \"121\": [0.06, -0.221, 0.512, 0.557],\r\n        \"122\": [-0.007, -0.214, 0.378, 0.471],\r\n        \"8216\": [0.053, 0.411, 0.187, 0.708],\r\n        \"8217\": [0.058, 0.394, 0.193, 0.692],\r\n        \"58113\": [0.065, -0.027, 0.512, 0.63],\r\n        \"58114\": [0.037, -0.212, 0.408, 0.693],\r\n        \"58115\": [0.037, -0.219, 0.384, 0.681],\r\n        \"58116\": [0.067, -0.212, 0.531, 0.473],\r\n        \"58117\": [0.033, -0.027, 0.386, 0.684],\r\n        \"58120\": [0.032, -0.22, 0.875, 0.679],\r\n        \"58121\": [0.017, -0.137, 0.633, 0.717],\r\n        \"61437\": [0, 0, 0.5, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Main-Regular\": {\r\n        \"33\": [0.078, 0.001, 0.199, 0.716],\r\n        \"34\": [0.034, 0.379, 0.372, 0.694],\r\n        \"35\": [0.056, -0.194, 0.777, 0.694],\r\n        \"36\": [0.055, -0.056, 0.444, 0.75],\r\n        \"37\": [0.056, -0.056, 0.776, 0.75],\r\n        \"38\": [0.042, -0.022, 0.727, 0.716],\r\n        \"39\": [0.078, 0.379, 0.212, 0.694],\r\n        \"40\": [0.094, -0.25, 0.333, 0.75],\r\n        \"41\": [0.055, -0.25, 0.294, 0.75],\r\n        \"42\": [0.064, 0.32, 0.435, 0.75],\r\n        \"43\": [0.056, -0.082, 0.722, 0.583],\r\n        \"44\": [0.078, -0.194, 0.21, 0.121],\r\n        \"45\": [0.011, 0.179, 0.277, 0.252],\r\n        \"46\": [0.078, 0, 0.199, 0.12],\r\n        \"47\": [0.056, -0.25, 0.444, 0.75],\r\n        \"48\": [0.039, -0.022, 0.46, 0.666],\r\n        \"49\": [0.083, 0, 0.427, 0.666],\r\n        \"50\": [0.05, 0, 0.449, 0.666],\r\n        \"51\": [0.042, -0.022, 0.457, 0.665],\r\n        \"52\": [0.028, 0, 0.471, 0.677],\r\n        \"53\": [0.05, -0.022, 0.449, 0.666],\r\n        \"54\": [0.042, -0.022, 0.456, 0.666],\r\n        \"55\": [0.055, -0.022, 0.485, 0.676],\r\n        \"56\": [0.043, -0.022, 0.457, 0.666],\r\n        \"57\": [0.042, -0.022, 0.456, 0.666],\r\n        \"58\": [0.078, 0, 0.199, 0.43],\r\n        \"59\": [0.078, -0.194, 0.202, 0.43],\r\n        \"60\": [0.083, -0.04, 0.694, 0.54],\r\n        \"61\": [0.056, 0.133, 0.722, 0.367],\r\n        \"62\": [0.083, -0.04, 0.694, 0.54],\r\n        \"63\": [0.055, 0.001, 0.416, 0.705],\r\n        \"64\": [0.056, -0.011, 0.722, 0.705],\r\n        \"65\": [0.032, 0, 0.717, 0.716],\r\n        \"66\": [0.028, 0, 0.651, 0.683],\r\n        \"67\": [0.056, -0.021, 0.666, 0.705],\r\n        \"68\": [0.027, 0, 0.708, 0.683],\r\n        \"69\": [0.025, 0, 0.652, 0.68],\r\n        \"70\": [0.025, 0, 0.61, 0.68],\r\n        \"71\": [0.056, -0.022, 0.735, 0.705],\r\n        \"72\": [0.025, 0, 0.724, 0.683],\r\n        \"73\": [0.021, 0, 0.339, 0.683],\r\n        \"74\": [0.025, -0.022, 0.465, 0.683],\r\n        \"75\": [0.025, 0, 0.736, 0.683],\r\n        \"76\": [0.025, 0, 0.582, 0.683],\r\n        \"77\": [0.029, 0, 0.887, 0.683],\r\n        \"78\": [0.025, 0, 0.724, 0.683],\r\n        \"79\": [0.056, -0.022, 0.722, 0.705],\r\n        \"80\": [0.027, 0, 0.624, 0.683],\r\n        \"81\": [0.056, -0.193, 0.728, 0.705],\r\n        \"82\": [0.027, -0.022, 0.732, 0.683],\r\n        \"83\": [0.055, -0.022, 0.5, 0.705],\r\n        \"84\": [0.036, 0, 0.685, 0.677],\r\n        \"85\": [0.025, -0.022, 0.724, 0.683],\r\n        \"86\": [0.019, -0.022, 0.73, 0.683],\r\n        \"87\": [0.018, -0.022, 1.009, 0.683],\r\n        \"88\": [0.023, 0, 0.726, 0.683],\r\n        \"89\": [0.011, 0, 0.738, 0.683],\r\n        \"90\": [0.055, 0, 0.56, 0.683],\r\n        \"91\": [0.118, -0.25, 0.255, 0.75],\r\n        \"92\": [0.056, -0.25, 0.444, 0.75],\r\n        \"93\": [0.022, -0.25, 0.159, 0.75],\r\n        \"94\": [0.112, 0.531, 0.387, 0.694],\r\n        \"95\": [0, -0.062, 0.499, -0.025],\r\n        \"97\": [0.034, -0.011, 0.493, 0.448],\r\n        \"98\": [0.02, -0.011, 0.522, 0.694],\r\n        \"99\": [0.034, -0.011, 0.415, 0.448],\r\n        \"100\": [0.034, -0.011, 0.535, 0.694],\r\n        \"101\": [0.028, -0.011, 0.415, 0.448],\r\n        \"102\": [0.026, 0, 0.372, 0.705],\r\n        \"103\": [0.029, -0.206, 0.485, 0.453],\r\n        \"104\": [0.025, 0, 0.542, 0.694],\r\n        \"105\": [0.026, 0, 0.255, 0.669],\r\n        \"106\": [-0.055, -0.205, 0.218, 0.669],\r\n        \"107\": [0.02, 0, 0.511, 0.694],\r\n        \"108\": [0.026, 0, 0.263, 0.694],\r\n        \"109\": [0.025, 0, 0.819, 0.442],\r\n        \"110\": [0.025, 0, 0.542, 0.442],\r\n        \"111\": [0.028, -0.01, 0.471, 0.448],\r\n        \"112\": [0.02, -0.194, 0.522, 0.442],\r\n        \"113\": [0.033, -0.194, 0.535, 0.442],\r\n        \"114\": [0.02, 0, 0.364, 0.442],\r\n        \"115\": [0.033, -0.011, 0.359, 0.448],\r\n        \"116\": [0.018, -0.01, 0.333, 0.615],\r\n        \"117\": [0.025, -0.011, 0.542, 0.442],\r\n        \"118\": [0.019, -0.011, 0.508, 0.431],\r\n        \"119\": [0.018, -0.011, 0.703, 0.431],\r\n        \"120\": [0.011, 0, 0.516, 0.431],\r\n        \"121\": [0.019, -0.204, 0.508, 0.431],\r\n        \"122\": [0.028, 0, 0.401, 0.431],\r\n        \"123\": [0.065, -0.25, 0.434, 0.75],\r\n        \"124\": [0.119, -0.249, 0.159, 0.75],\r\n        \"125\": [0.065, -0.25, 0.434, 0.75],\r\n        \"126\": [0.083, 0.215, 0.416, 0.318],\r\n        \"167\": [0.069, -0.204, 0.374, 0.704],\r\n        \"168\": [0.095, 0.554, 0.404, 0.669],\r\n        \"172\": [0.056, 0.089, 0.611, 0.356],\r\n        \"176\": [0.147, 0.542, 0.352, 0.715],\r\n        \"177\": [0.056, 0, 0.722, 0.666],\r\n        \"182\": [0.055, -0.193, 0.582, 0.694],\r\n        \"184\": [0.124, -0.211, 0.374, -0.022],\r\n        \"198\": [0.032, 0, 0.874, 0.683],\r\n        \"215\": [0.147, 0.009, 0.63, 0.491],\r\n        \"216\": [0.056, -0.059, 0.721, 0.742],\r\n        \"223\": [0.02, -0.011, 0.471, 0.705],\r\n        \"230\": [0.037, -0.011, 0.693, 0.448],\r\n        \"247\": [0.056, -0.036, 0.721, 0.537],\r\n        \"248\": [0.028, -0.105, 0.471, 0.537],\r\n        \"305\": [0.026, 0, 0.255, 0.442],\r\n        \"338\": [0.07, -0.022, 0.985, 0.704],\r\n        \"339\": [0.029, -0.011, 0.749, 0.448],\r\n        \"567\": [-0.055, -0.205, 0.218, 0.442],\r\n        \"710\": [0.112, 0.531, 0.387, 0.694],\r\n        \"711\": [0.114, 0.513, 0.385, 0.644],\r\n        \"713\": [0.069, 0.544, 0.43, 0.59],\r\n        \"714\": [0.204, 0.505, 0.393, 0.699],\r\n        \"715\": [0.106, 0.505, 0.295, 0.699],\r\n        \"728\": [0.092, 0.515, 0.407, 0.694],\r\n        \"729\": [0.079, 0.549, 0.198, 0.669],\r\n        \"730\": [0.272, 0.542, 0.477, 0.715],\r\n        \"732\": [0.083, 0.565, 0.416, 0.668],\r\n        \"733\": [0.122, 0.51, 0.42, 0.701],\r\n        \"915\": [0.025, 0, 0.582, 0.68],\r\n        \"916\": [0.046, 0, 0.786, 0.716],\r\n        \"920\": [0.056, -0.022, 0.722, 0.705],\r\n        \"923\": [0.032, 0, 0.661, 0.716],\r\n        \"926\": [0.042, 0, 0.624, 0.677],\r\n        \"928\": [0.025, 0, 0.724, 0.68],\r\n        \"931\": [0.055, 0, 0.666, 0.683],\r\n        \"933\": [0.055, 0, 0.722, 0.705],\r\n        \"934\": [0.056, 0, 0.665, 0.683],\r\n        \"936\": [0.055, 0, 0.722, 0.683],\r\n        \"937\": [0.044, 0, 0.677, 0.704],\r\n        \"8211\": [0, 0.248, 0.499, 0.285],\r\n        \"8212\": [0, 0.248, 0.999, 0.285],\r\n        \"8216\": [0.064, 0.379, 0.198, 0.694],\r\n        \"8217\": [0.078, 0.379, 0.212, 0.694],\r\n        \"8220\": [0.128, 0.379, 0.466, 0.694],\r\n        \"8221\": [0.034, 0.379, 0.372, 0.694],\r\n        \"8224\": [0.055, -0.216, 0.389, 0.705],\r\n        \"8225\": [0.055, -0.205, 0.389, 0.705],\r\n        \"8230\": [0.078, 0, 1.093, 0.12],\r\n        \"8242\": [0.03, 0.043, 0.262, 0.56],\r\n        \"8407\": [-0.471, 0.516, -0.029, 0.714],\r\n        \"8463\": [0.042, -0.013, 0.562, 0.695],\r\n        \"8465\": [0.055, -0.01, 0.693, 0.705],\r\n        \"8467\": [0.007, -0.02, 0.397, 0.705],\r\n        \"8472\": [0.067, -0.216, 0.625, 0.453],\r\n        \"8476\": [0.04, -0.022, 0.715, 0.716],\r\n        \"8501\": [0.055, 0, 0.555, 0.694],\r\n        \"8592\": [0.055, -0.011, 0.944, 0.511],\r\n        \"8593\": [0.017, -0.193, 0.483, 0.694],\r\n        \"8594\": [0.056, -0.011, 0.944, 0.511],\r\n        \"8595\": [0.017, -0.194, 0.483, 0.694],\r\n        \"8596\": [0.055, -0.011, 0.944, 0.511],\r\n        \"8597\": [0.017, -0.272, 0.483, 0.772],\r\n        \"8598\": [0.029, -0.195, 0.944, 0.72],\r\n        \"8599\": [0.055, -0.195, 0.97, 0.72],\r\n        \"8600\": [0.055, -0.22, 0.97, 0.695],\r\n        \"8601\": [0.029, -0.22, 0.944, 0.695],\r\n        \"8614\": [0.055, -0.011, 0.944, 0.511],\r\n        \"8617\": [0.055, -0.011, 1.07, 0.511],\r\n        \"8618\": [0.055, -0.011, 1.07, 0.511],\r\n        \"8636\": [0.055, 0.23, 0.944, 0.511],\r\n        \"8637\": [0.055, -0.011, 0.944, 0.27],\r\n        \"8640\": [0.056, 0.23, 0.944, 0.511],\r\n        \"8641\": [0.056, -0.011, 0.944, 0.27],\r\n        \"8652\": [0.055, -0.011, 0.944, 0.671],\r\n        \"8656\": [0.056, -0.024, 0.944, 0.525],\r\n        \"8657\": [0.031, -0.194, 0.579, 0.694],\r\n        \"8658\": [0.056, -0.024, 0.944, 0.525],\r\n        \"8659\": [0.031, -0.194, 0.579, 0.694],\r\n        \"8660\": [0.034, -0.025, 0.966, 0.526],\r\n        \"8661\": [0.031, -0.272, 0.579, 0.772],\r\n        \"8704\": [0, -0.022, 0.556, 0.694],\r\n        \"8706\": [0.042, -0.022, 0.566, 0.715],\r\n        \"8707\": [0.056, 0, 0.5, 0.694],\r\n        \"8709\": [0.039, -0.078, 0.46, 0.772],\r\n        \"8711\": [0.046, -0.033, 0.786, 0.683],\r\n        \"8712\": [0.084, -0.04, 0.583, 0.54],\r\n        \"8715\": [0.083, -0.04, 0.582, 0.54],\r\n        \"8722\": [0.084, 0.23, 0.694, 0.27],\r\n        \"8723\": [0.056, -0.166, 0.722, 0.5],\r\n        \"8725\": [0.056, -0.25, 0.444, 0.75],\r\n        \"8726\": [0.056, -0.25, 0.444, 0.75],\r\n        \"8727\": [0.064, 0.035, 0.435, 0.465],\r\n        \"8728\": [0.055, 0.055, 0.444, 0.444],\r\n        \"8729\": [0.055, 0.055, 0.444, 0.444],\r\n        \"8730\": [0.072, -0.2, 0.853, 0.8],\r\n        \"8733\": [0.056, -0.011, 0.722, 0.442],\r\n        \"8734\": [0.055, -0.011, 0.944, 0.442],\r\n        \"8736\": [0.055, 0, 0.666, 0.694],\r\n        \"8739\": [0.119, -0.249, 0.159, 0.75],\r\n        \"8741\": [0.132, -0.25, 0.367, 0.75],\r\n        \"8743\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8744\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8745\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8746\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8747\": [0.055, -0.216, 0.472, 0.716],\r\n        \"8764\": [0.055, 0.133, 0.722, 0.367],\r\n        \"8768\": [0.055, -0.083, 0.222, 0.583],\r\n        \"8771\": [0.055, 0.036, 0.722, 0.464],\r\n        \"8773\": [0.055, 0.022, 0.722, 0.589],\r\n        \"8776\": [0.055, 0.055, 0.722, 0.483],\r\n        \"8781\": [0.055, 0.016, 0.722, 0.484],\r\n        \"8784\": [0.056, 0.133, 0.722, 0.67],\r\n        \"8801\": [0.056, 0.036, 0.722, 0.464],\r\n        \"8804\": [0.083, -0.138, 0.694, 0.636],\r\n        \"8805\": [0.083, -0.138, 0.694, 0.636],\r\n        \"8810\": [0.056, -0.067, 0.944, 0.568],\r\n        \"8811\": [0.055, -0.067, 0.944, 0.567],\r\n        \"8826\": [0.084, -0.041, 0.694, 0.539],\r\n        \"8827\": [0.083, -0.041, 0.694, 0.539],\r\n        \"8834\": [0.084, -0.04, 0.694, 0.54],\r\n        \"8835\": [0.083, -0.04, 0.693, 0.54],\r\n        \"8838\": [0.084, -0.138, 0.694, 0.636],\r\n        \"8839\": [0.083, -0.138, 0.693, 0.636],\r\n        \"8846\": [0.055, -0.022, 0.611, 0.598],\r\n        \"8849\": [0.084, -0.138, 0.714, 0.636],\r\n        \"8850\": [0.064, -0.138, 0.694, 0.636],\r\n        \"8851\": [0.061, 0, 0.605, 0.598],\r\n        \"8852\": [0.061, 0, 0.605, 0.598],\r\n        \"8853\": [0.056, -0.083, 0.722, 0.583],\r\n        \"8854\": [0.056, -0.083, 0.722, 0.583],\r\n        \"8855\": [0.056, -0.083, 0.722, 0.583],\r\n        \"8856\": [0.056, -0.083, 0.722, 0.583],\r\n        \"8857\": [0.056, -0.083, 0.722, 0.583],\r\n        \"8866\": [0.055, 0, 0.555, 0.694],\r\n        \"8867\": [0.055, 0, 0.555, 0.694],\r\n        \"8868\": [0.055, 0, 0.723, 0.668],\r\n        \"8869\": [0.055, 0, 0.723, 0.668],\r\n        \"8872\": [0.119, -0.249, 0.811, 0.75],\r\n        \"8900\": [0.012, 0.012, 0.488, 0.488],\r\n        \"8901\": [0.078, 0.19, 0.199, 0.31],\r\n        \"8902\": [0.003, 0.016, 0.497, 0.486],\r\n        \"8904\": [0.026, -0.005, 0.873, 0.505],\r\n        \"8942\": [0.078, -0.03, 0.199, 0.9],\r\n        \"8943\": [0.078, 0.19, 1.093, 0.31],\r\n        \"8945\": [0.133, 0.1, 1.148, 0.82],\r\n        \"8968\": [0.174, -0.25, 0.422, 0.75],\r\n        \"8969\": [0.021, -0.25, 0.269, 0.75],\r\n        \"8970\": [0.174, -0.25, 0.422, 0.75],\r\n        \"8971\": [0.021, -0.25, 0.269, 0.75],\r\n        \"8994\": [0.055, 0.122, 0.944, 0.388],\r\n        \"8995\": [0.055, 0.134, 0.944, 0.378],\r\n        \"9136\": [0.055, -0.244, 0.357, 0.744],\r\n        \"9137\": [0.056, -0.244, 0.357, 0.744],\r\n        \"9651\": [0.059, 0, 0.828, 0.716],\r\n        \"9657\": [0.026, -0.005, 0.473, 0.505],\r\n        \"9661\": [0.059, -0.215, 0.828, 0.5],\r\n        \"9667\": [0.026, -0.005, 0.473, 0.505],\r\n        \"9711\": [0.056, -0.215, 0.944, 0.715],\r\n        \"9824\": [0.055, -0.13, 0.723, 0.727],\r\n        \"9825\": [0.055, -0.033, 0.723, 0.716],\r\n        \"9826\": [0.055, -0.162, 0.723, 0.727],\r\n        \"9827\": [0.028, -0.13, 0.75, 0.726],\r\n        \"9837\": [0.055, -0.022, 0.332, 0.75],\r\n        \"9838\": [0.065, -0.223, 0.324, 0.734],\r\n        \"9839\": [0.055, -0.223, 0.333, 0.723],\r\n        \"10216\": [0.11, -0.25, 0.333, 0.75],\r\n        \"10217\": [0.055, -0.25, 0.278, 0.75],\r\n        \"10222\": [0.173, -0.244, 0.357, 0.744],\r\n        \"10223\": [0.056, -0.244, 0.24, 0.744],\r\n        \"10229\": [0.055, -0.011, 1.525, 0.511],\r\n        \"10230\": [0.084, -0.011, 1.553, 0.511],\r\n        \"10231\": [0.055, -0.011, 1.803, 0.511],\r\n        \"10232\": [0.056, -0.024, 1.553, 0.525],\r\n        \"10233\": [0.056, -0.024, 1.582, 0.525],\r\n        \"10234\": [0.056, -0.024, 1.802, 0.525],\r\n        \"10236\": [0.055, -0.011, 1.553, 0.511],\r\n        \"10815\": [0.028, 0, 0.721, 0.683],\r\n        \"10927\": [0.084, -0.138, 0.694, 0.636],\r\n        \"10928\": [0.083, -0.138, 0.694, 0.636],\r\n        \"57376\": [0.139, -0.215, 0.638, 0.716],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Main-Bold\": {\r\n        \"33\": [0.089, 0.001, 0.26, 0.705],\r\n        \"34\": [0.038, 0.329, 0.492, 0.694],\r\n        \"35\": [0.064, -0.193, 0.893, 0.694],\r\n        \"36\": [0.064, -0.056, 0.51, 0.75],\r\n        \"37\": [0.065, -0.056, 0.893, 0.75],\r\n        \"38\": [0.048, -0.011, 0.836, 0.705],\r\n        \"39\": [0.074, 0.329, 0.261, 0.694],\r\n        \"40\": [0.103, -0.249, 0.382, 0.75],\r\n        \"41\": [0.064, -0.249, 0.343, 0.75],\r\n        \"42\": [0.073, 0.306, 0.501, 0.75],\r\n        \"43\": [0.064, -0.131, 0.829, 0.633],\r\n        \"44\": [0.074, -0.194, 0.258, 0.171],\r\n        \"45\": [0.013, 0.166, 0.318, 0.278],\r\n        \"46\": [0.074, 0.001, 0.245, 0.171],\r\n        \"47\": [0.064, -0.25, 0.51, 0.75],\r\n        \"48\": [0.045, -0.01, 0.529, 0.654],\r\n        \"49\": [0.08, 0, 0.494, 0.655],\r\n        \"50\": [0.057, 0, 0.517, 0.654],\r\n        \"51\": [0.048, -0.011, 0.526, 0.655],\r\n        \"52\": [0.032, 0, 0.542, 0.656],\r\n        \"53\": [0.057, -0.011, 0.517, 0.655],\r\n        \"54\": [0.048, -0.011, 0.526, 0.655],\r\n        \"55\": [0.064, -0.011, 0.558, 0.676],\r\n        \"56\": [0.048, -0.011, 0.526, 0.654],\r\n        \"57\": [0.048, -0.011, 0.526, 0.654],\r\n        \"58\": [0.074, 0.001, 0.245, 0.444],\r\n        \"59\": [0.074, -0.194, 0.248, 0.444],\r\n        \"60\": [0.096, -0.085, 0.797, 0.587],\r\n        \"61\": [0.064, 0.109, 0.829, 0.393],\r\n        \"62\": [0.096, -0.085, 0.797, 0.587],\r\n        \"63\": [0.065, 0.001, 0.478, 0.7],\r\n        \"64\": [0.064, -0.006, 0.829, 0.699],\r\n        \"65\": [0.04, 0, 0.828, 0.698],\r\n        \"66\": [0.039, 0, 0.752, 0.686],\r\n        \"67\": [0.064, -0.011, 0.766, 0.697],\r\n        \"68\": [0.039, 0, 0.817, 0.686],\r\n        \"69\": [0.039, 0, 0.723, 0.68],\r\n        \"70\": [0.039, 0, 0.675, 0.68],\r\n        \"71\": [0.064, -0.01, 0.845, 0.697],\r\n        \"72\": [0.039, 0, 0.86, 0.686],\r\n        \"73\": [0.025, 0, 0.41, 0.686],\r\n        \"74\": [0.008, -0.011, 0.527, 0.686],\r\n        \"75\": [0.039, 0, 0.852, 0.686],\r\n        \"76\": [0.039, 0, 0.643, 0.686],\r\n        \"77\": [0.039, 0, 1.052, 0.686],\r\n        \"78\": [0.039, 0, 0.86, 0.686],\r\n        \"79\": [0.064, -0.01, 0.798, 0.696],\r\n        \"80\": [0.039, 0, 0.721, 0.686],\r\n        \"81\": [0.064, -0.193, 0.805, 0.696],\r\n        \"82\": [0.039, -0.011, 0.858, 0.686],\r\n        \"83\": [0.064, -0.011, 0.574, 0.697],\r\n        \"84\": [0.041, 0, 0.758, 0.675],\r\n        \"85\": [0.039, -0.011, 0.845, 0.686],\r\n        \"86\": [0.025, -0.007, 0.843, 0.686],\r\n        \"87\": [0.024, -0.007, 1.164, 0.686],\r\n        \"88\": [0.033, 0, 0.835, 0.686],\r\n        \"89\": [0.019, 0, 0.849, 0.686],\r\n        \"90\": [0.064, 0, 0.645, 0.686],\r\n        \"91\": [0.128, -0.25, 0.293, 0.75],\r\n        \"92\": [0.064, -0.25, 0.51, 0.75],\r\n        \"93\": [0.025, -0.25, 0.19, 0.75],\r\n        \"94\": [0.126, 0.52, 0.448, 0.694],\r\n        \"95\": [0, -0.061, 0.574, -0.01],\r\n        \"97\": [0.032, -0.006, 0.558, 0.453],\r\n        \"98\": [0.029, -0.006, 0.6, 0.694],\r\n        \"99\": [0.039, -0.006, 0.478, 0.453],\r\n        \"100\": [0.038, -0.006, 0.609, 0.694],\r\n        \"101\": [0.032, -0.006, 0.494, 0.452],\r\n        \"102\": [0.04, 0, 0.452, 0.7],\r\n        \"103\": [0.03, -0.201, 0.558, 0.455],\r\n        \"104\": [0.037, 0, 0.623, 0.694],\r\n        \"105\": [0.04, 0, 0.294, 0.695],\r\n        \"106\": [-0.071, -0.2, 0.274, 0.695],\r\n        \"107\": [0.029, 0, 0.587, 0.694],\r\n        \"108\": [0.04, 0, 0.301, 0.694],\r\n        \"109\": [0.037, 0, 0.942, 0.45],\r\n        \"110\": [0.037, 0, 0.623, 0.45],\r\n        \"111\": [0.032, -0.005, 0.542, 0.452],\r\n        \"112\": [0.029, -0.194, 0.6, 0.45],\r\n        \"113\": [0.038, -0.194, 0.609, 0.45],\r\n        \"114\": [0.029, 0, 0.442, 0.45],\r\n        \"115\": [0.038, -0.006, 0.414, 0.453],\r\n        \"116\": [0.021, -0.005, 0.382, 0.635],\r\n        \"117\": [0.037, -0.006, 0.623, 0.45],\r\n        \"118\": [0.026, -0.003, 0.58, 0.444],\r\n        \"119\": [0.025, -0.004, 0.805, 0.444],\r\n        \"120\": [0.021, 0, 0.586, 0.444],\r\n        \"121\": [0.023, -0.2, 0.58, 0.444],\r\n        \"122\": [0.032, 0, 0.462, 0.444],\r\n        \"123\": [0.07, -0.25, 0.504, 0.75],\r\n        \"124\": [0.129, -0.249, 0.19, 0.75],\r\n        \"125\": [0.07, -0.25, 0.504, 0.75],\r\n        \"126\": [0.096, 0.202, 0.478, 0.344],\r\n        \"168\": [0.096, 0.535, 0.478, 0.695],\r\n        \"172\": [0.064, 0.061, 0.702, 0.371],\r\n        \"176\": [0.16, 0.536, 0.414, 0.702],\r\n        \"177\": [0.064, -0.035, 0.829, 0.728],\r\n        \"184\": [0.127, -0.207, 0.447, -0.009],\r\n        \"198\": [0.041, 0, 1.009, 0.686],\r\n        \"215\": [0.168, -0.028, 0.726, 0.53],\r\n        \"216\": [0.064, -0.064, 0.829, 0.75],\r\n        \"223\": [0.029, -0.005, 0.564, 0.699],\r\n        \"230\": [0.032, -0.006, 0.798, 0.453],\r\n        \"247\": [0.064, -0.096, 0.828, 0.597],\r\n        \"248\": [0.032, -0.11, 0.542, 0.555],\r\n        \"305\": [0.024, -0.008, 0.367, 0.452],\r\n        \"338\": [0.083, -0.011, 1.136, 0.696],\r\n        \"339\": [0.032, -0.006, 0.861, 0.453],\r\n        \"567\": [-0.012, -0.201, 0.42, 0.451],\r\n        \"710\": [0.126, 0.52, 0.448, 0.694],\r\n        \"711\": [0.131, 0.515, 0.443, 0.659],\r\n        \"713\": [0.08, 0.54, 0.494, 0.607],\r\n        \"714\": [0.237, 0.503, 0.46, 0.706],\r\n        \"715\": [0.114, 0.503, 0.337, 0.706],\r\n        \"728\": [0.102, 0.5, 0.472, 0.694],\r\n        \"729\": [0.074, 0.525, 0.244, 0.695],\r\n        \"730\": [0.307, 0.536, 0.561, 0.702],\r\n        \"732\": [0.096, 0.552, 0.478, 0.694],\r\n        \"733\": [0.133, 0.511, 0.493, 0.714],\r\n        \"915\": [0.039, 0, 0.643, 0.68],\r\n        \"916\": [0.056, 0, 0.901, 0.698],\r\n        \"920\": [0.064, -0.01, 0.829, 0.696],\r\n        \"923\": [0.04, 0, 0.765, 0.698],\r\n        \"926\": [0.048, 0, 0.718, 0.675],\r\n        \"928\": [0.039, 0, 0.86, 0.68],\r\n        \"931\": [0.064, 0, 0.766, 0.686],\r\n        \"933\": [0.064, 0, 0.829, 0.697],\r\n        \"934\": [0.064, 0, 0.766, 0.686],\r\n        \"936\": [0.064, 0, 0.829, 0.686],\r\n        \"937\": [0.051, 0, 0.779, 0.696],\r\n        \"8211\": [0, 0.249, 0.574, 0.3],\r\n        \"8212\": [0, 0.249, 1.149, 0.3],\r\n        \"8216\": [0.058, 0.329, 0.245, 0.694],\r\n        \"8217\": [0.074, 0.329, 0.261, 0.694],\r\n        \"8220\": [0.11, 0.329, 0.564, 0.694],\r\n        \"8221\": [0.038, 0.329, 0.492, 0.694],\r\n        \"8224\": [0.064, -0.211, 0.446, 0.702],\r\n        \"8225\": [0.064, -0.202, 0.446, 0.702],\r\n        \"8230\": [0.074, 0.001, 1.221, 0.171],\r\n        \"8242\": [0.035, 0.033, 0.331, 0.563],\r\n        \"8407\": [-0.542, 0.513, -0.033, 0.723],\r\n        \"8463\": [0.045, -0.008, 0.642, 0.694],\r\n        \"8465\": [0.064, -0.008, 0.798, 0.702],\r\n        \"8467\": [-0.001, -0.019, 0.446, 0.702],\r\n        \"8472\": [0.072, -0.21, 0.726, 0.461],\r\n        \"8476\": [0.042, -0.016, 0.824, 0.711],\r\n        \"8501\": [0.064, 0, 0.638, 0.694],\r\n        \"8592\": [0.064, -0.017, 1.084, 0.518],\r\n        \"8593\": [0.014, -0.193, 0.561, 0.694],\r\n        \"8594\": [0.065, -0.017, 1.085, 0.518],\r\n        \"8595\": [0.014, -0.194, 0.561, 0.694],\r\n        \"8596\": [0.064, -0.017, 1.085, 0.518],\r\n        \"8597\": [0.014, -0.267, 0.561, 0.767],\r\n        \"8598\": [0.064, -0.194, 1.084, 0.724],\r\n        \"8599\": [0.064, -0.193, 1.085, 0.724],\r\n        \"8600\": [0.065, -0.224, 1.085, 0.694],\r\n        \"8601\": [0.064, -0.224, 1.085, 0.694],\r\n        \"8614\": [0.065, -0.017, 1.085, 0.518],\r\n        \"8617\": [0.064, -0.017, 1.218, 0.518],\r\n        \"8618\": [0.065, -0.017, 1.217, 0.518],\r\n        \"8636\": [0.064, 0.22, 1.084, 0.518],\r\n        \"8637\": [0.064, -0.017, 1.084, 0.281],\r\n        \"8640\": [0.065, 0.22, 1.085, 0.518],\r\n        \"8641\": [0.064, -0.017, 1.085, 0.281],\r\n        \"8652\": [0.064, -0.017, 1.085, 0.718],\r\n        \"8656\": [0.064, -0.046, 1.085, 0.547],\r\n        \"8657\": [0.03, -0.193, 0.672, 0.694],\r\n        \"8658\": [0.064, -0.046, 1.084, 0.547],\r\n        \"8659\": [0.03, -0.194, 0.672, 0.694],\r\n        \"8660\": [0.047, -0.046, 1.102, 0.547],\r\n        \"8661\": [0.03, -0.267, 0.672, 0.767],\r\n        \"8704\": [0.001, -0.016, 0.639, 0.694],\r\n        \"8706\": [0.06, -0.017, 0.657, 0.71],\r\n        \"8707\": [0.064, 0.001, 0.574, 0.694],\r\n        \"8709\": [0.046, -0.073, 0.528, 0.767],\r\n        \"8711\": [0.056, -0.024, 0.901, 0.686],\r\n        \"8712\": [0.097, -0.086, 0.67, 0.587],\r\n        \"8715\": [0.096, -0.086, 0.67, 0.587],\r\n        \"8722\": [0.096, 0.221, 0.797, 0.281],\r\n        \"8723\": [0.064, -0.227, 0.829, 0.537],\r\n        \"8725\": [0.064, -0.25, 0.51, 0.75],\r\n        \"8726\": [0.064, -0.25, 0.51, 0.75],\r\n        \"8727\": [0.073, 0.028, 0.501, 0.472],\r\n        \"8728\": [0.064, 0.028, 0.51, 0.474],\r\n        \"8729\": [0.064, 0.028, 0.51, 0.474],\r\n        \"8730\": [0.078, -0.18, 0.988, 0.82],\r\n        \"8733\": [0.065, -0.008, 0.83, 0.451],\r\n        \"8734\": [0.065, -0.008, 1.084, 0.452],\r\n        \"8736\": [0.055, 0, 0.676, 0.714],\r\n        \"8739\": [0.129, -0.249, 0.19, 0.75],\r\n        \"8741\": [0.145, -0.248, 0.43, 0.75],\r\n        \"8743\": [0.064, -0.017, 0.702, 0.604],\r\n        \"8744\": [0.064, -0.016, 0.702, 0.604],\r\n        \"8745\": [0.064, -0.016, 0.702, 0.603],\r\n        \"8746\": [0.064, -0.016, 0.702, 0.604],\r\n        \"8747\": [0.064, -0.211, 0.632, 0.711],\r\n        \"8764\": [0.064, 0.109, 0.828, 0.391],\r\n        \"8768\": [0.064, -0.082, 0.254, 0.583],\r\n        \"8771\": [0.064, -0.003, 0.829, 0.502],\r\n        \"8773\": [0.064, -0.027, 0.829, 0.638],\r\n        \"8776\": [0.064, 0.032, 0.829, 0.524],\r\n        \"8781\": [0.064, -0.032, 0.829, 0.533],\r\n        \"8784\": [0.064, 0.109, 0.829, 0.721],\r\n        \"8801\": [0.064, -0.003, 0.829, 0.505],\r\n        \"8804\": [0.096, -0.199, 0.797, 0.697],\r\n        \"8805\": [0.096, -0.199, 0.797, 0.697],\r\n        \"8810\": [0.064, -0.116, 1.085, 0.617],\r\n        \"8811\": [0.064, -0.116, 1.085, 0.618],\r\n        \"8826\": [0.096, -0.086, 0.797, 0.585],\r\n        \"8827\": [0.096, -0.086, 0.797, 0.586],\r\n        \"8834\": [0.096, -0.085, 0.797, 0.587],\r\n        \"8835\": [0.096, -0.086, 0.796, 0.587],\r\n        \"8838\": [0.096, -0.199, 0.797, 0.697],\r\n        \"8839\": [0.096, -0.199, 0.796, 0.697],\r\n        \"8846\": [0.064, -0.016, 0.702, 0.604],\r\n        \"8849\": [0.096, -0.199, 0.828, 0.697],\r\n        \"8850\": [0.066, -0.199, 0.797, 0.697],\r\n        \"8851\": [0.07, 0.001, 0.696, 0.604],\r\n        \"8852\": [0.07, 0.001, 0.696, 0.604],\r\n        \"8853\": [0.064, -0.132, 0.828, 0.632],\r\n        \"8854\": [0.064, -0.132, 0.828, 0.632],\r\n        \"8855\": [0.064, -0.132, 0.828, 0.632],\r\n        \"8856\": [0.064, -0.132, 0.828, 0.632],\r\n        \"8857\": [0.064, -0.132, 0.828, 0.632],\r\n        \"8866\": [0.065, 0.001, 0.637, 0.693],\r\n        \"8867\": [0.064, 0.001, 0.638, 0.693],\r\n        \"8868\": [0.064, 0.001, 0.829, 0.694],\r\n        \"8869\": [0.065, 0.001, 0.829, 0.693],\r\n        \"8872\": [0.129, -0.249, 0.918, 0.75],\r\n        \"8900\": [0.015, -0.021, 0.56, 0.523],\r\n        \"8901\": [0.074, 0.166, 0.245, 0.336],\r\n        \"8902\": [0.024, 0, 0.55, 0.502],\r\n        \"8904\": [0.033, -0.039, 0.967, 0.54],\r\n        \"8942\": [0.074, -0.029, 0.245, 0.951],\r\n        \"8943\": [0.074, 0.166, 1.221, 0.336],\r\n        \"8945\": [0.129, 0.101, 1.194, 0.871],\r\n        \"8968\": [0.194, -0.248, 0.493, 0.75],\r\n        \"8969\": [0.017, -0.248, 0.317, 0.75],\r\n        \"8970\": [0.194, -0.248, 0.493, 0.749],\r\n        \"8971\": [0.017, -0.248, 0.317, 0.749],\r\n        \"8994\": [0.065, 0.108, 1.084, 0.405],\r\n        \"8995\": [0.064, 0.126, 1.085, 0.392],\r\n        \"9651\": [0.069, 0.001, 0.953, 0.711],\r\n        \"9657\": [0.033, -0.039, 0.542, 0.54],\r\n        \"9661\": [0.068, -0.21, 0.953, 0.5],\r\n        \"9667\": [0.033, -0.038, 0.542, 0.539],\r\n        \"9711\": [0.065, -0.211, 1.084, 0.711],\r\n        \"9824\": [0.064, -0.129, 0.829, 0.719],\r\n        \"9825\": [0.065, -0.024, 0.828, 0.711],\r\n        \"9826\": [0.064, -0.154, 0.828, 0.719],\r\n        \"9827\": [0.032, -0.129, 0.861, 0.719],\r\n        \"9837\": [0.064, -0.017, 0.381, 0.75],\r\n        \"9838\": [0.057, -0.223, 0.389, 0.741],\r\n        \"9839\": [0.063, -0.224, 0.382, 0.724],\r\n        \"10216\": [0.127, -0.249, 0.382, 0.75],\r\n        \"10217\": [0.064, -0.249, 0.319, 0.75],\r\n        \"10229\": [0.064, -0.017, 1.741, 0.518],\r\n        \"10230\": [0.096, -0.017, 1.773, 0.518],\r\n        \"10231\": [0.064, -0.017, 2.061, 0.518],\r\n        \"10232\": [0.064, -0.046, 1.804, 0.547],\r\n        \"10233\": [0.064, -0.046, 1.804, 0.547],\r\n        \"10234\": [0.064, -0.046, 2.06, 0.547],\r\n        \"10236\": [0.065, -0.017, 1.773, 0.518],\r\n        \"10815\": [0.039, 0, 0.86, 0.686],\r\n        \"10927\": [0.096, -0.199, 0.797, 0.696],\r\n        \"10928\": [0.096, -0.199, 0.797, 0.697],\r\n        \"57376\": [0.16, -0.21, 0.733, 0.711],\r\n        \"61437\": [0, 0, 0.5, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Main-Italic\": {\r\n        \"33\": [0.107, 0, 0.38, 0.716],\r\n        \"34\": [0.176, 0.379, 0.538, 0.694],\r\n        \"35\": [0.115, -0.194, 0.828, 0.694],\r\n        \"37\": [0.145, -0.056, 0.847, 0.75],\r\n        \"38\": [0.127, -0.022, 0.802, 0.716],\r\n        \"39\": [0.213, 0.379, 0.377, 0.694],\r\n        \"40\": [0.144, -0.25, 0.517, 0.75],\r\n        \"41\": [0.017, -0.25, 0.39, 0.75],\r\n        \"42\": [0.195, 0.32, 0.584, 0.75],\r\n        \"43\": [0.139, -0.057, 0.753, 0.557],\r\n        \"44\": [0.069, -0.194, 0.232, 0.121],\r\n        \"45\": [0.084, 0.18, 0.341, 0.251],\r\n        \"46\": [0.107, 0, 0.231, 0.121],\r\n        \"47\": [0.02, -0.25, 0.617, 0.75],\r\n        \"48\": [0.11, -0.021, 0.562, 0.665],\r\n        \"49\": [0.11, 0, 0.468, 0.666],\r\n        \"50\": [0.076, -0.022, 0.551, 0.666],\r\n        \"51\": [0.096, -0.022, 0.562, 0.666],\r\n        \"52\": [0.046, -0.194, 0.478, 0.666],\r\n        \"53\": [0.106, -0.022, 0.567, 0.666],\r\n        \"54\": [0.12, -0.022, 0.565, 0.665],\r\n        \"55\": [0.136, -0.022, 0.634, 0.666],\r\n        \"56\": [0.099, -0.021, 0.553, 0.666],\r\n        \"57\": [0.107, -0.022, 0.553, 0.666],\r\n        \"58\": [0.107, 0, 0.308, 0.431],\r\n        \"59\": [0.07, -0.194, 0.308, 0.431],\r\n        \"61\": [0.116, 0.133, 0.776, 0.367],\r\n        \"63\": [0.195, 0, 0.551, 0.716],\r\n        \"64\": [0.152, -0.011, 0.789, 0.705],\r\n        \"65\": [0.058, 0, 0.696, 0.716],\r\n        \"66\": [0.057, 0, 0.732, 0.683],\r\n        \"67\": [0.15, -0.021, 0.812, 0.705],\r\n        \"68\": [0.056, 0, 0.775, 0.683],\r\n        \"69\": [0.054, 0, 0.743, 0.68],\r\n        \"70\": [0.054, 0.001, 0.731, 0.68],\r\n        \"71\": [0.15, -0.022, 0.812, 0.705],\r\n        \"72\": [0.054, 0, 0.86, 0.683],\r\n        \"73\": [0.049, 0, 0.508, 0.683],\r\n        \"74\": [0.078, -0.021, 0.622, 0.683],\r\n        \"75\": [0.054, 0, 0.859, 0.683],\r\n        \"76\": [0.054, 0, 0.628, 0.683],\r\n        \"77\": [0.058, 0, 1.01, 0.683],\r\n        \"78\": [0.054, 0, 0.86, 0.683],\r\n        \"79\": [0.149, -0.022, 0.788, 0.704],\r\n        \"80\": [0.055, 0, 0.729, 0.683],\r\n        \"81\": [0.149, -0.194, 0.788, 0.704],\r\n        \"82\": [0.055, -0.022, 0.723, 0.683],\r\n        \"83\": [0.074, -0.022, 0.633, 0.705],\r\n        \"84\": [0.171, 0, 0.806, 0.677],\r\n        \"85\": [0.194, -0.022, 0.86, 0.683],\r\n        \"86\": [0.205, -0.022, 0.868, 0.683],\r\n        \"87\": [0.205, -0.022, 1.124, 0.683],\r\n        \"88\": [0.05, 0, 0.825, 0.683],\r\n        \"89\": [0.198, 0, 0.875, 0.683],\r\n        \"90\": [0.08, 0, 0.704, 0.683],\r\n        \"91\": [0.073, -0.25, 0.446, 0.75],\r\n        \"93\": [-0.014, -0.25, 0.359, 0.75],\r\n        \"94\": [0.26, 0.527, 0.528, 0.694],\r\n        \"95\": [0.091, -0.062, 0.554, -0.025],\r\n        \"97\": [0.101, -0.011, 0.543, 0.442],\r\n        \"98\": [0.108, -0.011, 0.467, 0.694],\r\n        \"99\": [0.103, -0.01, 0.469, 0.441],\r\n        \"100\": [0.101, -0.011, 0.567, 0.694],\r\n        \"101\": [0.107, -0.01, 0.47, 0.442],\r\n        \"102\": [-0.023, -0.204, 0.45, 0.705],\r\n        \"103\": [0.046, -0.205, 0.494, 0.442],\r\n        \"104\": [0.069, -0.011, 0.544, 0.694],\r\n        \"105\": [0.075, -0.01, 0.34, 0.656],\r\n        \"106\": [-0.032, -0.204, 0.364, 0.656],\r\n        \"107\": [0.069, -0.011, 0.498, 0.694],\r\n        \"108\": [0.087, -0.011, 0.312, 0.694],\r\n        \"109\": [0.075, -0.011, 0.851, 0.442],\r\n        \"110\": [0.075, -0.011, 0.595, 0.442],\r\n        \"111\": [0.103, -0.011, 0.517, 0.442],\r\n        \"112\": [0.006, -0.194, 0.518, 0.442],\r\n        \"113\": [0.101, -0.194, 0.504, 0.442],\r\n        \"114\": [0.075, -0.011, 0.484, 0.442],\r\n        \"115\": [0.076, -0.011, 0.418, 0.442],\r\n        \"116\": [0.087, -0.011, 0.373, 0.626],\r\n        \"117\": [0.075, -0.011, 0.57, 0.441],\r\n        \"118\": [0.075, -0.01, 0.492, 0.443],\r\n        \"119\": [0.075, -0.011, 0.696, 0.443],\r\n        \"120\": [0.058, -0.011, 0.513, 0.442],\r\n        \"121\": [0.075, -0.205, 0.522, 0.441],\r\n        \"122\": [0.054, -0.011, 0.466, 0.442],\r\n        \"126\": [0.247, 0.208, 0.571, 0.318],\r\n        \"163\": [0.088, -0.011, 0.699, 0.714],\r\n        \"168\": [0.26, 0.554, 0.556, 0.669],\r\n        \"176\": [0.312, 0.542, 0.514, 0.716],\r\n        \"184\": [0.092, -0.199, 0.344, 0],\r\n        \"198\": [0.058, 0, 0.949, 0.683],\r\n        \"216\": [0.132, -0.064, 0.806, 0.747],\r\n        \"223\": [-0.018, -0.204, 0.578, 0.705],\r\n        \"230\": [0.085, -0.011, 0.726, 0.442],\r\n        \"248\": [0.061, -0.111, 0.557, 0.542],\r\n        \"305\": [0.075, -0.01, 0.34, 0.441],\r\n        \"338\": [0.162, -0.021, 1.051, 0.705],\r\n        \"339\": [0.1, -0.02, 0.726, 0.451],\r\n        \"567\": [-0.032, -0.204, 0.327, 0.442],\r\n        \"710\": [0.26, 0.527, 0.528, 0.694],\r\n        \"711\": [0.275, 0.502, 0.54, 0.638],\r\n        \"713\": [0.229, 0.544, 0.565, 0.589],\r\n        \"714\": [0.338, 0.5, 0.55, 0.697],\r\n        \"715\": [0.289, 0.5, 0.437, 0.697],\r\n        \"728\": [0.274, 0.515, 0.573, 0.694],\r\n        \"729\": [0.244, 0.548, 0.368, 0.669],\r\n        \"730\": [0.472, 0.542, 0.674, 0.716],\r\n        \"732\": [0.247, 0.558, 0.571, 0.668],\r\n        \"733\": [0.263, 0.503, 0.576, 0.697],\r\n        \"915\": [0.054, 0, 0.705, 0.68],\r\n        \"916\": [0.07, 0, 0.75, 0.716],\r\n        \"920\": [0.149, -0.022, 0.788, 0.704],\r\n        \"923\": [0.058, 0, 0.646, 0.716],\r\n        \"926\": [0.074, 0, 0.754, 0.677],\r\n        \"928\": [0.054, 0, 0.859, 0.68],\r\n        \"931\": [0.08, 0, 0.782, 0.683],\r\n        \"933\": [0.213, 0, 0.832, 0.705],\r\n        \"934\": [0.159, 0, 0.728, 0.683],\r\n        \"936\": [0.207, 0, 0.824, 0.683],\r\n        \"937\": [0.1, 0, 0.759, 0.705],\r\n        \"8211\": [0.091, 0.248, 0.554, 0.285],\r\n        \"8212\": [0.117, 0.248, 1.038, 0.285],\r\n        \"8216\": [0.197, 0.379, 0.362, 0.694],\r\n        \"8217\": [0.213, 0.379, 0.377, 0.694],\r\n        \"8220\": [0.243, 0.379, 0.606, 0.694],\r\n        \"8221\": [0.176, 0.379, 0.538, 0.694],\r\n        \"8463\": [0.042, -0.013, 0.562, 0.695],\r\n        \"61437\": [0, 0, 0.7, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Main-BoldItalic\": {\r\n        \"33\": [0.131, 0, 0.435, 0.711],\r\n        \"34\": [0.188, 0.338, 0.64, 0.694],\r\n        \"35\": [0.125, -0.193, 0.944, 0.694],\r\n        \"37\": [0.172, -0.055, 0.945, 0.75],\r\n        \"38\": [0.141, -0.017, 0.896, 0.711],\r\n        \"39\": [0.219, 0.338, 0.42, 0.694],\r\n        \"40\": [0.162, -0.249, 0.567, 0.75],\r\n        \"41\": [0.032, -0.249, 0.437, 0.75],\r\n        \"42\": [0.207, 0.306, 0.648, 0.75],\r\n        \"43\": [0.153, -0.102, 0.858, 0.602],\r\n        \"44\": [0.086, -0.194, 0.284, 0.162],\r\n        \"45\": [0.09, 0.167, 0.388, 0.276],\r\n        \"46\": [0.115, 0, 0.281, 0.162],\r\n        \"47\": [0.035, -0.249, 0.68, 0.75],\r\n        \"48\": [0.108, -0.017, 0.644, 0.66],\r\n        \"49\": [0.124, 0, 0.525, 0.661],\r\n        \"50\": [0.083, -0.017, 0.616, 0.66],\r\n        \"51\": [0.108, -0.016, 0.627, 0.66],\r\n        \"52\": [0.056, -0.194, 0.545, 0.661],\r\n        \"53\": [0.118, -0.016, 0.627, 0.661],\r\n        \"54\": [0.132, -0.016, 0.626, 0.66],\r\n        \"55\": [0.137, -0.017, 0.713, 0.661],\r\n        \"56\": [0.11, -0.017, 0.618, 0.66],\r\n        \"57\": [0.126, -0.016, 0.62, 0.66],\r\n        \"58\": [0.115, 0, 0.351, 0.444],\r\n        \"59\": [0.086, -0.194, 0.351, 0.444],\r\n        \"61\": [0.125, 0.109, 0.886, 0.393],\r\n        \"63\": [0.216, 0, 0.613, 0.711],\r\n        \"64\": [0.164, -0.008, 0.896, 0.701],\r\n        \"65\": [0.072, 0, 0.809, 0.711],\r\n        \"66\": [0.064, 0, 0.831, 0.686],\r\n        \"67\": [0.164, -0.017, 0.909, 0.703],\r\n        \"68\": [0.064, 0, 0.884, 0.686],\r\n        \"69\": [0.064, 0, 0.804, 0.68],\r\n        \"70\": [0.064, 0, 0.789, 0.68],\r\n        \"71\": [0.163, -0.016, 0.908, 0.703],\r\n        \"72\": [0.064, 0, 1.003, 0.686],\r\n        \"73\": [0.052, 0, 0.593, 0.686],\r\n        \"74\": [0.057, -0.016, 0.691, 0.686],\r\n        \"75\": [0.064, 0, 0.972, 0.686],\r\n        \"76\": [0.064, 0, 0.691, 0.686],\r\n        \"77\": [0.064, 0, 1.18, 0.686],\r\n        \"78\": [0.064, 0, 1.003, 0.686],\r\n        \"79\": [0.16, -0.017, 0.865, 0.702],\r\n        \"80\": [0.064, 0, 0.823, 0.686],\r\n        \"81\": [0.16, -0.193, 0.865, 0.702],\r\n        \"82\": [0.064, -0.016, 0.85, 0.686],\r\n        \"83\": [0.089, -0.017, 0.703, 0.703],\r\n        \"84\": [0.175, 0, 0.872, 0.675],\r\n        \"85\": [0.218, -0.017, 0.988, 0.686],\r\n        \"86\": [0.214, -0.017, 0.979, 0.686],\r\n        \"87\": [0.213, -0.017, 1.274, 0.686],\r\n        \"88\": [0.065, 0, 0.928, 0.686],\r\n        \"89\": [0.208, 0, 0.985, 0.686],\r\n        \"90\": [0.094, 0, 0.786, 0.686],\r\n        \"91\": [0.088, -0.25, 0.485, 0.75],\r\n        \"93\": [-0.004, -0.25, 0.393, 0.75],\r\n        \"94\": [0.274, 0.514, 0.596, 0.694],\r\n        \"95\": [0.098, -0.061, 0.63, -0.01],\r\n        \"97\": [0.098, -0.008, 0.632, 0.452],\r\n        \"98\": [0.105, -0.008, 0.544, 0.694],\r\n        \"99\": [0.101, -0.008, 0.534, 0.451],\r\n        \"100\": [0.098, -0.008, 0.643, 0.694],\r\n        \"101\": [0.102, -0.008, 0.538, 0.452],\r\n        \"102\": [-0.017, -0.201, 0.536, 0.701],\r\n        \"103\": [0.053, -0.202, 0.568, 0.452],\r\n        \"104\": [0.071, -0.008, 0.632, 0.694],\r\n        \"105\": [0.07, -0.007, 0.397, 0.694],\r\n        \"106\": [-0.027, -0.201, 0.418, 0.694],\r\n        \"107\": [0.071, -0.008, 0.573, 0.694],\r\n        \"108\": [0.084, -0.008, 0.349, 0.694],\r\n        \"109\": [0.07, -0.008, 0.985, 0.452],\r\n        \"110\": [0.07, -0.008, 0.691, 0.452],\r\n        \"111\": [0.101, -0.008, 0.601, 0.451],\r\n        \"112\": [0.017, -0.194, 0.604, 0.452],\r\n        \"113\": [0.099, -0.194, 0.581, 0.452],\r\n        \"114\": [0.07, -0.008, 0.557, 0.452],\r\n        \"115\": [0.085, -0.008, 0.486, 0.452],\r\n        \"116\": [0.087, -0.008, 0.426, 0.643],\r\n        \"117\": [0.07, -0.008, 0.662, 0.452],\r\n        \"118\": [0.07, -0.008, 0.553, 0.453],\r\n        \"119\": [0.07, -0.008, 0.789, 0.453],\r\n        \"120\": [0.07, -0.008, 0.602, 0.452],\r\n        \"121\": [0.07, -0.202, 0.601, 0.452],\r\n        \"122\": [0.056, -0.008, 0.541, 0.452],\r\n        \"126\": [0.267, 0.215, 0.639, 0.344],\r\n        \"163\": [0.102, -0.008, 0.785, 0.713],\r\n        \"168\": [0.27, 0.544, 0.63, 0.695],\r\n        \"176\": [0.352, 0.544, 0.59, 0.71],\r\n        \"184\": [0.103, -0.194, 0.42, 0.019],\r\n        \"198\": [0.073, 0, 1.072, 0.686],\r\n        \"216\": [0.162, -0.071, 0.895, 0.758],\r\n        \"223\": [-0.011, -0.202, 0.691, 0.702],\r\n        \"230\": [0.082, -0.008, 0.833, 0.452],\r\n        \"248\": [0.072, -0.119, 0.631, 0.564],\r\n        \"305\": [0.07, -0.007, 0.397, 0.452],\r\n        \"338\": [0.181, -0.017, 1.19, 0.702],\r\n        \"339\": [0.098, -0.019, 0.833, 0.463],\r\n        \"567\": [-0.027, -0.202, 0.383, 0.452],\r\n        \"710\": [0.274, 0.514, 0.596, 0.694],\r\n        \"711\": [0.286, 0.497, 0.604, 0.647],\r\n        \"713\": [0.245, 0.546, 0.635, 0.611],\r\n        \"714\": [0.374, 0.501, 0.608, 0.701],\r\n        \"715\": [0.3, 0.501, 0.49, 0.701],\r\n        \"728\": [0.288, 0.508, 0.637, 0.694],\r\n        \"729\": [0.249, 0.534, 0.414, 0.695],\r\n        \"730\": [0.512, 0.544, 0.75, 0.71],\r\n        \"732\": [0.267, 0.565, 0.639, 0.694],\r\n        \"733\": [0.28, 0.506, 0.641, 0.704],\r\n        \"915\": [0.064, 0, 0.76, 0.68],\r\n        \"916\": [0.086, 0, 0.864, 0.711],\r\n        \"920\": [0.162, -0.017, 0.895, 0.703],\r\n        \"923\": [0.072, 0, 0.751, 0.711],\r\n        \"926\": [0.088, 0, 0.843, 0.675],\r\n        \"928\": [0.064, 0, 1.002, 0.68],\r\n        \"931\": [0.095, 0, 0.876, 0.686],\r\n        \"933\": [0.227, 0, 0.938, 0.703],\r\n        \"934\": [0.172, 0, 0.825, 0.686],\r\n        \"936\": [0.217, 0, 0.926, 0.686],\r\n        \"937\": [0.116, 0, 0.858, 0.703],\r\n        \"8211\": [0.098, 0.249, 0.63, 0.3],\r\n        \"8212\": [0.129, 0.249, 1.19, 0.3],\r\n        \"8216\": [0.194, 0.339, 0.395, 0.694],\r\n        \"8217\": [0.219, 0.338, 0.42, 0.694],\r\n        \"8220\": [0.239, 0.339, 0.691, 0.694],\r\n        \"8221\": [0.188, 0.338, 0.64, 0.694],\r\n        \"61437\": [0, 0, 0.9, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Math-Italic\": {\r\n        \"65\": [0.035, 0, 0.726, 0.716],\r\n        \"66\": [0.035, 0, 0.756, 0.683],\r\n        \"67\": [0.05, -0.022, 0.76, 0.705],\r\n        \"68\": [0.033, 0, 0.803, 0.683],\r\n        \"69\": [0.031, 0, 0.764, 0.68],\r\n        \"70\": [0.031, 0, 0.749, 0.68],\r\n        \"71\": [0.05, -0.022, 0.76, 0.705],\r\n        \"72\": [0.031, 0, 0.888, 0.683],\r\n        \"73\": [0.026, 0, 0.504, 0.683],\r\n        \"74\": [0.057, -0.022, 0.633, 0.683],\r\n        \"75\": [0.031, 0, 0.889, 0.683],\r\n        \"76\": [0.032, 0, 0.647, 0.683],\r\n        \"77\": [0.035, 0, 1.051, 0.683],\r\n        \"78\": [0.031, 0, 0.888, 0.683],\r\n        \"79\": [0.05, -0.022, 0.74, 0.704],\r\n        \"80\": [0.033, 0, 0.751, 0.683],\r\n        \"81\": [0.05, -0.194, 0.74, 0.704],\r\n        \"82\": [0.033, -0.021, 0.755, 0.683],\r\n        \"83\": [0.052, -0.022, 0.645, 0.705],\r\n        \"84\": [0.021, 0, 0.704, 0.677],\r\n        \"85\": [0.06, -0.022, 0.767, 0.683],\r\n        \"86\": [0.052, -0.022, 0.769, 0.683],\r\n        \"87\": [0.051, -0.022, 1.048, 0.683],\r\n        \"88\": [0.026, 0, 0.852, 0.683],\r\n        \"89\": [0.03, 0.001, 0.763, 0.683],\r\n        \"90\": [0.058, 0, 0.723, 0.683],\r\n        \"97\": [0.033, -0.01, 0.506, 0.441],\r\n        \"98\": [0.04, -0.011, 0.422, 0.694],\r\n        \"99\": [0.034, -0.011, 0.429, 0.442],\r\n        \"100\": [0.033, -0.01, 0.523, 0.694],\r\n        \"101\": [0.039, -0.011, 0.429, 0.442],\r\n        \"102\": [0.055, -0.205, 0.55, 0.705],\r\n        \"103\": [0.01, -0.205, 0.48, 0.442],\r\n        \"104\": [0.048, -0.011, 0.555, 0.694],\r\n        \"105\": [0.021, -0.011, 0.302, 0.661],\r\n        \"106\": [-0.012, -0.204, 0.403, 0.661],\r\n        \"107\": [0.048, -0.011, 0.503, 0.694],\r\n        \"108\": [0.038, -0.011, 0.266, 0.694],\r\n        \"109\": [0.021, -0.011, 0.857, 0.442],\r\n        \"110\": [0.021, -0.011, 0.58, 0.442],\r\n        \"111\": [0.034, -0.011, 0.476, 0.441],\r\n        \"112\": [-0.039, -0.194, 0.497, 0.442],\r\n        \"113\": [0.033, -0.194, 0.46, 0.442],\r\n        \"114\": [0.021, -0.011, 0.43, 0.442],\r\n        \"115\": [0.053, -0.01, 0.419, 0.442],\r\n        \"116\": [0.019, -0.011, 0.33, 0.626],\r\n        \"117\": [0.021, -0.011, 0.551, 0.442],\r\n        \"118\": [0.021, -0.011, 0.467, 0.443],\r\n        \"119\": [0.021, -0.011, 0.69, 0.443],\r\n        \"120\": [0.035, -0.011, 0.522, 0.442],\r\n        \"121\": [0.021, -0.205, 0.496, 0.442],\r\n        \"122\": [0.035, -0.011, 0.468, 0.442],\r\n        \"915\": [0.031, 0.001, 0.721, 0.68],\r\n        \"916\": [0.048, 0, 0.788, 0.716],\r\n        \"920\": [0.05, -0.022, 0.74, 0.704],\r\n        \"923\": [0.035, 0, 0.67, 0.716],\r\n        \"926\": [0.053, 0, 0.777, 0.677],\r\n        \"928\": [0.031, 0, 0.887, 0.68],\r\n        \"931\": [0.058, 0, 0.806, 0.683],\r\n        \"933\": [0.028, 0, 0.7, 0.705],\r\n        \"934\": [0.024, 0, 0.642, 0.683],\r\n        \"936\": [0.021, 0, 0.692, 0.683],\r\n        \"937\": [0.08, 0, 0.786, 0.704],\r\n        \"945\": [0.034, -0.011, 0.603, 0.442],\r\n        \"946\": [0.023, -0.194, 0.573, 0.705],\r\n        \"947\": [0.011, -0.216, 0.543, 0.441],\r\n        \"948\": [0.036, -0.01, 0.451, 0.717],\r\n        \"949\": [0.027, -0.022, 0.428, 0.452],\r\n        \"950\": [0.044, -0.204, 0.471, 0.704],\r\n        \"951\": [0.021, -0.216, 0.503, 0.442],\r\n        \"952\": [0.035, -0.01, 0.462, 0.705],\r\n        \"953\": [0.048, -0.01, 0.332, 0.442],\r\n        \"954\": [0.049, -0.011, 0.554, 0.442],\r\n        \"955\": [0.047, -0.012, 0.556, 0.694],\r\n        \"956\": [0.023, -0.216, 0.58, 0.442],\r\n        \"957\": [0.045, -0.002, 0.53, 0.442],\r\n        \"958\": [0.021, -0.205, 0.443, 0.704],\r\n        \"959\": [0.034, -0.011, 0.476, 0.441],\r\n        \"960\": [0.019, -0.011, 0.573, 0.431],\r\n        \"961\": [0.023, -0.216, 0.51, 0.442],\r\n        \"962\": [0.031, -0.107, 0.405, 0.442],\r\n        \"963\": [0.031, -0.011, 0.572, 0.431],\r\n        \"964\": [0.018, -0.013, 0.517, 0.431],\r\n        \"965\": [0.021, -0.01, 0.523, 0.443],\r\n        \"966\": [0.05, -0.218, 0.618, 0.442],\r\n        \"967\": [0.025, -0.204, 0.6, 0.442],\r\n        \"968\": [0.021, -0.205, 0.634, 0.694],\r\n        \"969\": [0.015, -0.011, 0.604, 0.443],\r\n        \"977\": [0.021, -0.011, 0.563, 0.705],\r\n        \"981\": [0.043, -0.205, 0.579, 0.694],\r\n        \"982\": [0.019, -0.01, 0.823, 0.431],\r\n        \"1009\": [0.067, -0.194, 0.51, 0.442],\r\n        \"1013\": [0.04, -0.011, 0.382, 0.431],\r\n        \"61437\": [0, 0, 0.7, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Math-BoldItalic\": {\r\n        \"65\": [0.045, 0, 0.839, 0.711],\r\n        \"66\": [0.043, 0, 0.853, 0.686],\r\n        \"67\": [0.055, -0.017, 0.855, 0.703],\r\n        \"68\": [0.043, 0, 0.914, 0.686],\r\n        \"69\": [0.043, 0, 0.825, 0.68],\r\n        \"70\": [0.043, 0, 0.809, 0.68],\r\n        \"71\": [0.056, -0.016, 0.854, 0.703],\r\n        \"72\": [0.043, 0, 1.027, 0.686],\r\n        \"73\": [0.03, 0, 0.573, 0.686],\r\n        \"74\": [0.042, -0.017, 0.694, 0.686],\r\n        \"75\": [0.043, 0, 1.003, 0.686],\r\n        \"76\": [0.043, 0, 0.711, 0.686],\r\n        \"77\": [0.043, 0, 1.219, 0.686],\r\n        \"78\": [0.043, 0, 1.027, 0.686],\r\n        \"79\": [0.053, -0.017, 0.815, 0.703],\r\n        \"80\": [0.043, 0, 0.847, 0.686],\r\n        \"81\": [0.053, -0.194, 0.815, 0.703],\r\n        \"82\": [0.043, -0.017, 0.881, 0.686],\r\n        \"83\": [0.063, -0.017, 0.714, 0.703],\r\n        \"84\": [0.022, 0, 0.772, 0.675],\r\n        \"85\": [0.063, -0.016, 0.877, 0.686],\r\n        \"86\": [0.062, -0.016, 0.886, 0.686],\r\n        \"87\": [0.061, -0.017, 1.207, 0.686],\r\n        \"88\": [0.038, 0, 0.953, 0.686],\r\n        \"89\": [0.04, 0, 0.876, 0.686],\r\n        \"90\": [0.068, 0, 0.805, 0.686],\r\n        \"97\": [0.038, -0.008, 0.607, 0.452],\r\n        \"98\": [0.045, -0.008, 0.513, 0.694],\r\n        \"99\": [0.04, -0.008, 0.509, 0.451],\r\n        \"100\": [0.038, -0.008, 0.612, 0.694],\r\n        \"101\": [0.042, -0.008, 0.509, 0.452],\r\n        \"102\": [0.064, -0.201, 0.624, 0.701],\r\n        \"103\": [0, -0.202, 0.54, 0.452],\r\n        \"104\": [0.045, -0.008, 0.642, 0.694],\r\n        \"105\": [0.024, -0.008, 0.367, 0.694],\r\n        \"106\": [-0.012, -0.202, 0.456, 0.694],\r\n        \"107\": [0.045, -0.008, 0.578, 0.694],\r\n        \"108\": [0.027, -0.008, 0.296, 0.694],\r\n        \"109\": [0.024, -0.008, 1.006, 0.452],\r\n        \"110\": [0.024, -0.008, 0.687, 0.452],\r\n        \"111\": [0.039, -0.008, 0.576, 0.452],\r\n        \"112\": [-0.023, -0.194, 0.593, 0.452],\r\n        \"113\": [0.038, -0.194, 0.55, 0.452],\r\n        \"114\": [0.024, -0.008, 0.5, 0.452],\r\n        \"115\": [0.057, -0.008, 0.476, 0.451],\r\n        \"116\": [0.021, -0.007, 0.387, 0.643],\r\n        \"117\": [0.024, -0.008, 0.655, 0.452],\r\n        \"118\": [0.024, -0.008, 0.54, 0.453],\r\n        \"119\": [0.024, -0.008, 0.796, 0.453],\r\n        \"120\": [0.043, -0.008, 0.599, 0.452],\r\n        \"121\": [0.024, -0.202, 0.587, 0.452],\r\n        \"122\": [0.034, -0.008, 0.539, 0.452],\r\n        \"915\": [0.043, 0, 0.777, 0.68],\r\n        \"916\": [0.059, 0, 0.904, 0.711],\r\n        \"920\": [0.054, -0.017, 0.844, 0.702],\r\n        \"923\": [0.044, 0, 0.776, 0.711],\r\n        \"926\": [0.062, 0, 0.867, 0.675],\r\n        \"928\": [0.043, 0, 1.026, 0.68],\r\n        \"931\": [0.069, 0, 0.902, 0.686],\r\n        \"933\": [0.032, 0, 0.802, 0.703],\r\n        \"934\": [0.029, 0, 0.737, 0.686],\r\n        \"936\": [0.022, 0, 0.79, 0.686],\r\n        \"937\": [0.093, 0, 0.886, 0.703],\r\n        \"945\": [0.039, -0.008, 0.712, 0.452],\r\n        \"946\": [0.028, -0.194, 0.637, 0.701],\r\n        \"947\": [0.005, -0.211, 0.617, 0.451],\r\n        \"948\": [0.039, -0.008, 0.513, 0.725],\r\n        \"949\": [0.036, -0.017, 0.481, 0.461],\r\n        \"950\": [0.048, -0.202, 0.521, 0.711],\r\n        \"951\": [0.024, -0.211, 0.6, 0.452],\r\n        \"952\": [0.04, -0.008, 0.554, 0.702],\r\n        \"953\": [0.038, -0.008, 0.386, 0.452],\r\n        \"954\": [0.045, -0.008, 0.642, 0.452],\r\n        \"955\": [0.04, -0.013, 0.652, 0.694],\r\n        \"956\": [0.034, -0.211, 0.682, 0.452],\r\n        \"957\": [0.038, -0.002, 0.608, 0.452],\r\n        \"958\": [0.023, -0.201, 0.49, 0.711],\r\n        \"959\": [0.039, -0.008, 0.576, 0.452],\r\n        \"960\": [0.023, -0.008, 0.674, 0.444],\r\n        \"961\": [0.034, -0.211, 0.603, 0.451],\r\n        \"962\": [0.033, -0.105, 0.457, 0.451],\r\n        \"963\": [0.035, -0.008, 0.677, 0.444],\r\n        \"964\": [0.023, -0.013, 0.61, 0.444],\r\n        \"965\": [0.024, -0.008, 0.604, 0.453],\r\n        \"966\": [0.053, -0.216, 0.703, 0.452],\r\n        \"967\": [0.032, -0.201, 0.685, 0.452],\r\n        \"968\": [0.024, -0.202, 0.732, 0.694],\r\n        \"969\": [0.024, -0.008, 0.691, 0.453],\r\n        \"977\": [0.024, -0.008, 0.656, 0.701],\r\n        \"981\": [0.051, -0.202, 0.693, 0.694],\r\n        \"982\": [0.023, -0.008, 0.961, 0.444],\r\n        \"1009\": [0.075, -0.194, 0.603, 0.451],\r\n        \"1013\": [0.044, -0.007, 0.45, 0.444],\r\n        \"61437\": [0, 0, 0.9, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"SansSerif-Regular\": {\r\n        \"33\": [0.11, 0, 0.208, 0.694],\r\n        \"34\": [0.032, 0.471, 0.325, 0.694],\r\n        \"35\": [0.056, -0.194, 0.777, 0.694],\r\n        \"36\": [0.044, -0.056, 0.444, 0.75],\r\n        \"37\": [0.056, -0.056, 0.776, 0.75],\r\n        \"38\": [0.042, -0.022, 0.702, 0.716],\r\n        \"39\": [0.089, 0.471, 0.188, 0.694],\r\n        \"40\": [0.074, -0.25, 0.333, 0.75],\r\n        \"41\": [0.055, -0.25, 0.314, 0.75],\r\n        \"42\": [0.063, 0.306, 0.436, 0.75],\r\n        \"43\": [0.056, -0.082, 0.722, 0.583],\r\n        \"44\": [0.089, -0.125, 0.188, 0.098],\r\n        \"45\": [0.011, 0.186, 0.277, 0.259],\r\n        \"46\": [0.09, 0, 0.188, 0.098],\r\n        \"47\": [0.056, -0.25, 0.444, 0.75],\r\n        \"48\": [0.039, -0.022, 0.46, 0.678],\r\n        \"49\": [0.083, 0, 0.43, 0.678],\r\n        \"50\": [0.042, 0, 0.449, 0.677],\r\n        \"51\": [0.042, -0.022, 0.457, 0.678],\r\n        \"52\": [0.028, 0, 0.471, 0.656],\r\n        \"53\": [0.033, -0.021, 0.449, 0.656],\r\n        \"54\": [0.042, -0.022, 0.457, 0.677],\r\n        \"55\": [0.042, -0.011, 0.457, 0.656],\r\n        \"56\": [0.043, -0.022, 0.456, 0.678],\r\n        \"57\": [0.042, -0.022, 0.457, 0.677],\r\n        \"58\": [0.09, 0, 0.188, 0.444],\r\n        \"59\": [0.089, -0.125, 0.188, 0.444],\r\n        \"61\": [0.056, 0.13, 0.722, 0.37],\r\n        \"63\": [0.055, 0, 0.416, 0.704],\r\n        \"64\": [0.056, -0.011, 0.612, 0.704],\r\n        \"65\": [0.028, 0, 0.638, 0.694],\r\n        \"66\": [0.09, 0, 0.61, 0.694],\r\n        \"67\": [0.059, -0.011, 0.587, 0.705],\r\n        \"68\": [0.088, 0, 0.666, 0.694],\r\n        \"69\": [0.086, 0, 0.554, 0.691],\r\n        \"70\": [0.086, 0, 0.526, 0.691],\r\n        \"71\": [0.059, -0.011, 0.599, 0.704],\r\n        \"72\": [0.086, 0, 0.621, 0.694],\r\n        \"73\": [0.087, 0, 0.191, 0.694],\r\n        \"74\": [0.043, -0.022, 0.388, 0.694],\r\n        \"75\": [0.088, 0, 0.651, 0.694],\r\n        \"76\": [0.087, 0, 0.499, 0.694],\r\n        \"77\": [0.092, 0, 0.782, 0.694],\r\n        \"78\": [0.088, 0, 0.619, 0.694],\r\n        \"79\": [0.055, -0.022, 0.68, 0.715],\r\n        \"80\": [0.088, 0, 0.583, 0.694],\r\n        \"81\": [0.055, -0.125, 0.68, 0.715],\r\n        \"82\": [0.088, 0, 0.617, 0.694],\r\n        \"83\": [0.044, -0.022, 0.5, 0.716],\r\n        \"84\": [0.036, 0, 0.644, 0.688],\r\n        \"85\": [0.087, -0.022, 0.6, 0.694],\r\n        \"86\": [0.014, 0, 0.652, 0.694],\r\n        \"87\": [0.014, 0, 0.929, 0.694],\r\n        \"88\": [0.014, 0, 0.652, 0.694],\r\n        \"89\": [0.004, 0, 0.663, 0.694],\r\n        \"90\": [0.055, 0, 0.56, 0.694],\r\n        \"91\": [0.094, -0.25, 0.266, 0.75],\r\n        \"93\": [0.022, -0.25, 0.194, 0.75],\r\n        \"94\": [0.079, 0.527, 0.42, 0.694],\r\n        \"95\": [0, -0.114, 0.499, -0.038],\r\n        \"97\": [0.038, -0.01, 0.407, 0.46],\r\n        \"98\": [0.075, -0.011, 0.482, 0.694],\r\n        \"99\": [0.034, -0.01, 0.414, 0.46],\r\n        \"100\": [0.033, -0.01, 0.441, 0.694],\r\n        \"101\": [0.028, -0.01, 0.415, 0.461],\r\n        \"102\": [0.027, 0, 0.347, 0.705],\r\n        \"103\": [0.028, -0.206, 0.485, 0.455],\r\n        \"104\": [0.073, 0, 0.443, 0.694],\r\n        \"105\": [0.067, 0, 0.171, 0.68],\r\n        \"106\": [-0.059, -0.205, 0.192, 0.68],\r\n        \"107\": [0.076, 0, 0.471, 0.694],\r\n        \"108\": [0.074, 0, 0.164, 0.694],\r\n        \"109\": [0.073, 0, 0.72, 0.455],\r\n        \"110\": [0.073, 0, 0.443, 0.455],\r\n        \"111\": [0.028, -0.01, 0.471, 0.46],\r\n        \"112\": [0.075, -0.194, 0.483, 0.455],\r\n        \"113\": [0.033, -0.194, 0.441, 0.455],\r\n        \"114\": [0.074, 0, 0.327, 0.455],\r\n        \"115\": [0.028, -0.01, 0.36, 0.46],\r\n        \"116\": [0.018, -0.01, 0.333, 0.571],\r\n        \"117\": [0.073, -0.01, 0.443, 0.444],\r\n        \"118\": [0.014, 0, 0.446, 0.444],\r\n        \"119\": [0.014, 0, 0.668, 0.444],\r\n        \"120\": [0, 0, 0.46, 0.444],\r\n        \"121\": [0.014, -0.204, 0.446, 0.444],\r\n        \"122\": [0.028, 0, 0.402, 0.444],\r\n        \"126\": [0.083, 0.193, 0.416, 0.327],\r\n        \"168\": [0.103, 0.582, 0.396, 0.68],\r\n        \"176\": [0.081, 0.527, 0.301, 0.694],\r\n        \"184\": [0.138, -0.192, 0.287, -0.024],\r\n        \"305\": [0.074, 0, 0.164, 0.444],\r\n        \"567\": [-0.059, -0.205, 0.192, 0.444],\r\n        \"710\": [0.079, 0.527, 0.42, 0.694],\r\n        \"711\": [0.079, 0.487, 0.42, 0.654],\r\n        \"713\": [0.069, 0.552, 0.43, 0.631],\r\n        \"714\": [0.199, 0.527, 0.416, 0.694],\r\n        \"715\": [0.083, 0.527, 0.3, 0.694],\r\n        \"728\": [0.073, 0.508, 0.426, 0.694],\r\n        \"729\": [0.087, 0.576, 0.191, 0.68],\r\n        \"730\": [0.223, 0.527, 0.443, 0.694],\r\n        \"732\": [0.083, 0.543, 0.416, 0.677],\r\n        \"733\": [0.101, 0.527, 0.416, 0.694],\r\n        \"915\": [0.087, 0, 0.499, 0.691],\r\n        \"916\": [0.042, 0, 0.79, 0.694],\r\n        \"920\": [0.056, -0.021, 0.722, 0.716],\r\n        \"923\": [0.028, 0, 0.582, 0.694],\r\n        \"926\": [0.042, 0, 0.624, 0.688],\r\n        \"928\": [0.086, 0, 0.621, 0.691],\r\n        \"931\": [0.055, 0, 0.666, 0.694],\r\n        \"933\": [0.055, 0, 0.722, 0.716],\r\n        \"934\": [0.055, 0, 0.666, 0.694],\r\n        \"936\": [0.055, 0, 0.722, 0.694],\r\n        \"937\": [0.044, 0, 0.677, 0.716],\r\n        \"8211\": [0, 0.236, 0.499, 0.312],\r\n        \"8212\": [0, 0.236, 0.999, 0.312],\r\n        \"8216\": [0.09, 0.471, 0.189, 0.694],\r\n        \"8217\": [0.089, 0.471, 0.188, 0.694],\r\n        \"8220\": [0.174, 0.471, 0.467, 0.694],\r\n        \"8221\": [0.032, 0.471, 0.325, 0.694],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"SansSerif-Bold\": {\r\n        \"33\": [0.11, 0, 0.256, 0.694],\r\n        \"34\": [0.037, 0.442, 0.42, 0.694],\r\n        \"35\": [0.061, -0.193, 0.855, 0.694],\r\n        \"36\": [0.049, -0.056, 0.488, 0.75],\r\n        \"37\": [0.061, -0.056, 0.966, 0.75],\r\n        \"38\": [0.047, -0.022, 0.769, 0.716],\r\n        \"39\": [0.08, 0.442, 0.226, 0.694],\r\n        \"40\": [0.079, -0.249, 0.366, 0.75],\r\n        \"41\": [0.061, -0.25, 0.348, 0.75],\r\n        \"42\": [0.067, 0.293, 0.482, 0.75],\r\n        \"43\": [0.061, -0.116, 0.794, 0.617],\r\n        \"44\": [0.08, -0.106, 0.226, 0.146],\r\n        \"45\": [0.012, 0.186, 0.305, 0.273],\r\n        \"46\": [0.08, 0, 0.226, 0.146],\r\n        \"47\": [0.061, -0.249, 0.488, 0.75],\r\n        \"48\": [0.043, -0.022, 0.506, 0.715],\r\n        \"49\": [0.076, 0.001, 0.473, 0.716],\r\n        \"50\": [0.046, 0, 0.494, 0.716],\r\n        \"51\": [0.046, -0.022, 0.503, 0.716],\r\n        \"52\": [0.031, 0, 0.518, 0.694],\r\n        \"53\": [0.037, -0.022, 0.494, 0.694],\r\n        \"54\": [0.046, -0.022, 0.503, 0.716],\r\n        \"55\": [0.046, -0.011, 0.503, 0.695],\r\n        \"56\": [0.046, -0.022, 0.503, 0.715],\r\n        \"57\": [0.046, -0.022, 0.503, 0.716],\r\n        \"58\": [0.08, 0, 0.226, 0.458],\r\n        \"59\": [0.08, -0.106, 0.226, 0.458],\r\n        \"61\": [0.061, 0.094, 0.794, 0.407],\r\n        \"63\": [0.061, 0, 0.457, 0.705],\r\n        \"64\": [0.061, -0.011, 0.671, 0.704],\r\n        \"65\": [0.042, 0, 0.69, 0.694],\r\n        \"66\": [0.092, 0.001, 0.671, 0.694],\r\n        \"67\": [0.061, -0.011, 0.647, 0.704],\r\n        \"68\": [0.092, 0.001, 0.732, 0.694],\r\n        \"69\": [0.092, 0, 0.595, 0.691],\r\n        \"70\": [0.092, 0, 0.564, 0.691],\r\n        \"71\": [0.061, -0.011, 0.659, 0.705],\r\n        \"72\": [0.092, 0, 0.702, 0.694],\r\n        \"73\": [0.085, 0, 0.246, 0.694],\r\n        \"74\": [0.046, -0.022, 0.427, 0.694],\r\n        \"75\": [0.092, 0, 0.701, 0.694],\r\n        \"76\": [0.092, 0, 0.534, 0.694],\r\n        \"77\": [0.092, 0, 0.886, 0.694],\r\n        \"78\": [0.092, 0, 0.702, 0.694],\r\n        \"79\": [0.062, -0.022, 0.731, 0.716],\r\n        \"80\": [0.092, 0, 0.641, 0.694],\r\n        \"81\": [0.062, -0.106, 0.732, 0.716],\r\n        \"82\": [0.092, 0, 0.654, 0.694],\r\n        \"83\": [0.049, -0.022, 0.549, 0.716],\r\n        \"84\": [0.04, 0, 0.692, 0.688],\r\n        \"85\": [0.092, -0.022, 0.672, 0.694],\r\n        \"86\": [0.027, 0.001, 0.705, 0.694],\r\n        \"87\": [0.024, 0, 1.014, 0.694],\r\n        \"88\": [0.037, 0, 0.694, 0.694],\r\n        \"89\": [0.024, 0, 0.708, 0.694],\r\n        \"90\": [0.061, 0, 0.616, 0.694],\r\n        \"91\": [0.079, -0.25, 0.318, 0.75],\r\n        \"93\": [0.024, -0.25, 0.263, 0.75],\r\n        \"94\": [0.108, 0.537, 0.441, 0.694],\r\n        \"95\": [0, -0.11, 0.549, -0.023],\r\n        \"97\": [0.031, -0.011, 0.472, 0.475],\r\n        \"98\": [0.054, -0.01, 0.523, 0.694],\r\n        \"99\": [0.037, -0.011, 0.457, 0.475],\r\n        \"100\": [0.037, -0.011, 0.507, 0.694],\r\n        \"101\": [0.03, -0.01, 0.48, 0.474],\r\n        \"102\": [0.029, 0, 0.381, 0.705],\r\n        \"103\": [0.017, -0.206, 0.534, 0.469],\r\n        \"104\": [0.053, 0, 0.508, 0.694],\r\n        \"105\": [0.046, 0, 0.208, 0.695],\r\n        \"106\": [-0.071, -0.205, 0.232, 0.695],\r\n        \"107\": [0.063, 0, 0.496, 0.694],\r\n        \"108\": [0.054, 0, 0.201, 0.694],\r\n        \"109\": [0.053, 0, 0.815, 0.469],\r\n        \"110\": [0.053, 0, 0.508, 0.468],\r\n        \"111\": [0.032, -0.011, 0.518, 0.474],\r\n        \"112\": [0.054, -0.194, 0.523, 0.469],\r\n        \"113\": [0.037, -0.194, 0.507, 0.469],\r\n        \"114\": [0.054, 0, 0.356, 0.469],\r\n        \"115\": [0.03, -0.01, 0.396, 0.474],\r\n        \"116\": [0.02, -0.01, 0.373, 0.589],\r\n        \"117\": [0.052, -0.011, 0.508, 0.458],\r\n        \"118\": [0.026, 0, 0.473, 0.458],\r\n        \"119\": [0.024, 0, 0.719, 0.458],\r\n        \"120\": [0.024, 0, 0.475, 0.458],\r\n        \"121\": [0.029, -0.205, 0.473, 0.458],\r\n        \"122\": [0.031, 0, 0.442, 0.458],\r\n        \"126\": [0.092, 0.198, 0.457, 0.344],\r\n        \"168\": [0.091, 0.595, 0.459, 0.695],\r\n        \"176\": [0.185, 0.538, 0.431, 0.694],\r\n        \"180\": [0.216, 0.537, 0.457, 0.694],\r\n        \"184\": [0.139, -0.192, 0.318, -0.024],\r\n        \"305\": [0.054, 0, 0.201, 0.458],\r\n        \"567\": [-0.071, -0.205, 0.232, 0.458],\r\n        \"710\": [0.108, 0.537, 0.441, 0.694],\r\n        \"711\": [0.108, 0.5, 0.441, 0.657],\r\n        \"713\": [0.076, 0.56, 0.473, 0.66],\r\n        \"728\": [0.08, 0.552, 0.47, 0.694],\r\n        \"729\": [0.072, 0.596, 0.234, 0.695],\r\n        \"730\": [0.243, 0.538, 0.489, 0.694],\r\n        \"732\": [0.092, 0.548, 0.457, 0.694],\r\n        \"733\": [0.11, 0.537, 0.456, 0.694],\r\n        \"915\": [0.092, 0, 0.534, 0.691],\r\n        \"916\": [0.06, 0, 0.856, 0.694],\r\n        \"920\": [0.062, -0.022, 0.793, 0.716],\r\n        \"923\": [0.041, 0, 0.63, 0.694],\r\n        \"926\": [0.046, 0, 0.686, 0.688],\r\n        \"928\": [0.092, 0, 0.702, 0.691],\r\n        \"931\": [0.061, 0, 0.732, 0.694],\r\n        \"933\": [0.062, 0, 0.793, 0.715],\r\n        \"934\": [0.062, 0, 0.732, 0.694],\r\n        \"936\": [0.061, 0, 0.794, 0.694],\r\n        \"937\": [0.049, 0, 0.744, 0.716],\r\n        \"8211\": [0, 0.24, 0.549, 0.327],\r\n        \"8212\": [0, 0.24, 1.099, 0.327],\r\n        \"8216\": [0.081, 0.443, 0.226, 0.694],\r\n        \"8217\": [0.08, 0.442, 0.226, 0.694],\r\n        \"8220\": [0.138, 0.443, 0.52, 0.694],\r\n        \"8221\": [0.037, 0.442, 0.42, 0.694],\r\n        \"61437\": [0, 0, 0.5, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"SansSerif-Italic\": {\r\n        \"33\": [0.11, 0, 0.355, 0.694],\r\n        \"34\": [0.133, 0.471, 0.472, 0.694],\r\n        \"35\": [0.087, -0.194, 0.851, 0.694],\r\n        \"36\": [0.056, -0.056, 0.565, 0.75],\r\n        \"37\": [0.165, -0.056, 0.815, 0.75],\r\n        \"38\": [0.071, -0.022, 0.747, 0.716],\r\n        \"39\": [0.19, 0.471, 0.335, 0.694],\r\n        \"40\": [0.104, -0.25, 0.491, 0.75],\r\n        \"41\": [0.002, -0.25, 0.39, 0.75],\r\n        \"42\": [0.156, 0.306, 0.568, 0.75],\r\n        \"43\": [0.108, -0.083, 0.775, 0.583],\r\n        \"44\": [0.063, -0.125, 0.209, 0.098],\r\n        \"45\": [0.051, 0.186, 0.332, 0.259],\r\n        \"46\": [0.09, 0, 0.209, 0.098],\r\n        \"47\": [0.006, -0.25, 0.599, 0.75],\r\n        \"48\": [0.088, -0.022, 0.549, 0.678],\r\n        \"49\": [0.088, 0, 0.451, 0.678],\r\n        \"50\": [0.05, 0, 0.551, 0.678],\r\n        \"51\": [0.056, -0.022, 0.544, 0.678],\r\n        \"52\": [0.062, 0, 0.521, 0.656],\r\n        \"53\": [0.05, -0.022, 0.555, 0.656],\r\n        \"54\": [0.094, -0.022, 0.548, 0.678],\r\n        \"55\": [0.143, -0.011, 0.596, 0.656],\r\n        \"56\": [0.077, -0.022, 0.554, 0.678],\r\n        \"57\": [0.077, -0.022, 0.545, 0.677],\r\n        \"58\": [0.09, 0, 0.282, 0.444],\r\n        \"59\": [0.063, -0.125, 0.282, 0.444],\r\n        \"61\": [0.088, 0.13, 0.796, 0.37],\r\n        \"63\": [0.173, 0, 0.536, 0.704],\r\n        \"64\": [0.12, -0.01, 0.707, 0.705],\r\n        \"65\": [0.028, 0, 0.638, 0.694],\r\n        \"66\": [0.09, 0, 0.696, 0.694],\r\n        \"67\": [0.124, -0.01, 0.718, 0.705],\r\n        \"68\": [0.088, 0, 0.747, 0.694],\r\n        \"69\": [0.086, 0, 0.688, 0.691],\r\n        \"70\": [0.086, 0, 0.673, 0.691],\r\n        \"71\": [0.125, -0.011, 0.73, 0.705],\r\n        \"72\": [0.086, 0, 0.768, 0.694],\r\n        \"73\": [0.087, 0, 0.338, 0.694],\r\n        \"74\": [0.046, -0.022, 0.535, 0.694],\r\n        \"75\": [0.088, 0, 0.784, 0.694],\r\n        \"76\": [0.087, 0, 0.516, 0.694],\r\n        \"77\": [0.092, 0, 0.929, 0.694],\r\n        \"78\": [0.088, 0, 0.766, 0.694],\r\n        \"79\": [0.118, -0.022, 0.763, 0.716],\r\n        \"80\": [0.088, 0, 0.69, 0.694],\r\n        \"81\": [0.118, -0.125, 0.763, 0.716],\r\n        \"82\": [0.088, 0, 0.698, 0.694],\r\n        \"83\": [0.054, -0.022, 0.609, 0.716],\r\n        \"84\": [0.165, 0, 0.79, 0.688],\r\n        \"85\": [0.131, -0.022, 0.747, 0.694],\r\n        \"86\": [0.161, 0, 0.799, 0.694],\r\n        \"87\": [0.161, 0, 1.076, 0.694],\r\n        \"88\": [0.014, 0, 0.758, 0.694],\r\n        \"89\": [0.151, 0, 0.809, 0.694],\r\n        \"90\": [0.055, 0, 0.702, 0.694],\r\n        \"91\": [0.041, -0.25, 0.425, 0.75],\r\n        \"93\": [-0.031, -0.25, 0.353, 0.75],\r\n        \"94\": [0.19, 0.527, 0.533, 0.694],\r\n        \"95\": [0.05, -0.114, 0.565, -0.038],\r\n        \"97\": [0.061, -0.01, 0.473, 0.461],\r\n        \"98\": [0.075, -0.011, 0.539, 0.694],\r\n        \"99\": [0.075, -0.011, 0.499, 0.46],\r\n        \"100\": [0.073, -0.01, 0.588, 0.694],\r\n        \"101\": [0.071, -0.011, 0.472, 0.46],\r\n        \"102\": [0.094, 0, 0.494, 0.705],\r\n        \"103\": [0.012, -0.206, 0.568, 0.455],\r\n        \"104\": [0.073, 0, 0.513, 0.694],\r\n        \"105\": [0.074, 0, 0.315, 0.68],\r\n        \"106\": [-0.096, -0.204, 0.336, 0.68],\r\n        \"107\": [0.076, 0, 0.542, 0.694],\r\n        \"108\": [0.074, 0, 0.311, 0.694],\r\n        \"109\": [0.073, 0, 0.79, 0.455],\r\n        \"110\": [0.073, 0, 0.513, 0.454],\r\n        \"111\": [0.069, -0.011, 0.523, 0.461],\r\n        \"112\": [0.034, -0.194, 0.538, 0.455],\r\n        \"113\": [0.072, -0.194, 0.538, 0.455],\r\n        \"114\": [0.074, 0, 0.424, 0.455],\r\n        \"115\": [0.035, -0.011, 0.436, 0.461],\r\n        \"116\": [0.097, -0.011, 0.41, 0.571],\r\n        \"117\": [0.09, -0.01, 0.537, 0.444],\r\n        \"118\": [0.108, 0, 0.54, 0.444],\r\n        \"119\": [0.108, 0, 0.762, 0.444],\r\n        \"120\": [0.001, 0, 0.537, 0.444],\r\n        \"121\": [0.001, -0.205, 0.54, 0.444],\r\n        \"122\": [0.028, 0, 0.494, 0.444],\r\n        \"126\": [0.199, 0.193, 0.56, 0.327],\r\n        \"168\": [0.227, 0.582, 0.54, 0.68],\r\n        \"176\": [0.273, 0.527, 0.498, 0.693],\r\n        \"184\": [0.097, -0.192, 0.282, -0.024],\r\n        \"305\": [0.074, 0, 0.258, 0.444],\r\n        \"567\": [-0.096, -0.204, 0.286, 0.444],\r\n        \"710\": [0.19, 0.527, 0.533, 0.694],\r\n        \"711\": [0.217, 0.487, 0.56, 0.654],\r\n        \"713\": [0.186, 0.552, 0.564, 0.631],\r\n        \"714\": [0.31, 0.527, 0.563, 0.694],\r\n        \"715\": [0.23, 0.527, 0.413, 0.694],\r\n        \"728\": [0.216, 0.508, 0.573, 0.694],\r\n        \"729\": [0.209, 0.576, 0.335, 0.68],\r\n        \"730\": [0.386, 0.527, 0.611, 0.693],\r\n        \"732\": [0.199, 0.543, 0.56, 0.677],\r\n        \"733\": [0.213, 0.527, 0.563, 0.694],\r\n        \"915\": [0.087, 0, 0.646, 0.691],\r\n        \"916\": [0.042, 0, 0.79, 0.694],\r\n        \"920\": [0.119, -0.022, 0.804, 0.715],\r\n        \"923\": [0.028, 0, 0.582, 0.694],\r\n        \"926\": [0.042, 0, 0.765, 0.688],\r\n        \"928\": [0.086, 0, 0.768, 0.691],\r\n        \"931\": [0.055, 0, 0.813, 0.694],\r\n        \"933\": [0.173, 0, 0.843, 0.716],\r\n        \"934\": [0.124, 0, 0.743, 0.694],\r\n        \"936\": [0.171, 0, 0.854, 0.694],\r\n        \"937\": [0.044, 0, 0.769, 0.716],\r\n        \"8211\": [0.05, 0.236, 0.565, 0.312],\r\n        \"8212\": [0.05, 0.236, 1.065, 0.312],\r\n        \"8216\": [0.19, 0.471, 0.335, 0.694],\r\n        \"8217\": [0.19, 0.471, 0.335, 0.694],\r\n        \"8220\": [0.274, 0.471, 0.613, 0.694],\r\n        \"8221\": [0.133, 0.471, 0.472, 0.694],\r\n        \"61437\": [0, 0, 0.7, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Script-Regular\": {\r\n        \"65\": [0.035, -0.008, 1.016, 0.717],\r\n        \"66\": [0.031, -0.028, 0.928, 0.708],\r\n        \"67\": [0.026, -0.026, 0.819, 0.728],\r\n        \"68\": [0.068, -0.031, 0.855, 0.708],\r\n        \"69\": [0.046, -0.008, 0.718, 0.707],\r\n        \"70\": [0.039, -0.036, 0.99, 0.735],\r\n        \"71\": [0.012, -0.037, 0.738, 0.717],\r\n        \"72\": [0.029, -0.036, 1.241, 0.717],\r\n        \"73\": [0.059, -0.017, 0.946, 0.717],\r\n        \"74\": [0.092, -0.314, 1.133, 0.717],\r\n        \"75\": [0.029, -0.037, 1.204, 0.717],\r\n        \"76\": [0.014, -0.017, 1.035, 0.717],\r\n        \"77\": [0.03, -0.05, 1.215, 0.721],\r\n        \"78\": [0.029, -0.036, 1.208, 0.726],\r\n        \"79\": [0.096, -0.008, 0.805, 0.707],\r\n        \"80\": [0.09, -0.037, 1.031, 0.716],\r\n        \"81\": [0.054, -0.017, 0.885, 0.717],\r\n        \"82\": [-0.002, -0.017, 0.887, 0.717],\r\n        \"83\": [0.029, -0.036, 1.016, 0.708],\r\n        \"84\": [0.092, -0.037, 0.996, 0.735],\r\n        \"85\": [0.055, -0.017, 0.96, 0.717],\r\n        \"86\": [0.056, -0.017, 0.85, 0.717],\r\n        \"87\": [0.046, -0.017, 1.026, 0.717],\r\n        \"88\": [0.103, -0.017, 1.131, 0.717],\r\n        \"89\": [0.057, -0.017, 0.959, 0.716],\r\n        \"90\": [0.083, -0.016, 1.032, 0.717],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Size1-Regular\": {\r\n        \"40\": [0.152, -0.349, 0.422, 0.85],\r\n        \"41\": [0.035, -0.349, 0.305, 0.85],\r\n        \"47\": [0.055, -0.349, 0.522, 0.85],\r\n        \"91\": [0.202, -0.349, 0.394, 0.85],\r\n        \"92\": [0.055, -0.349, 0.522, 0.85],\r\n        \"93\": [0.022, -0.349, 0.214, 0.85],\r\n        \"123\": [0.105, -0.349, 0.477, 0.85],\r\n        \"125\": [0.105, -0.349, 0.477, 0.85],\r\n        \"710\": [-0.008, 0.551, 0.564, 0.744],\r\n        \"732\": [0.001, 0.597, 0.554, 0.722],\r\n        \"770\": [-0.564, 0.551, 0.008, 0.744],\r\n        \"771\": [-0.555, 0.597, -0.002, 0.722],\r\n        \"8214\": [0.257, 0, 0.521, 0.602],\r\n        \"8593\": [0.112, 0, 0.555, 0.6],\r\n        \"8595\": [0.112, 0, 0.555, 0.6],\r\n        \"8657\": [0.057, 0, 0.721, 0.599],\r\n        \"8659\": [0.057, 0.001, 0.721, 0.6],\r\n        \"8719\": [0.055, -0.25, 0.888, 0.75],\r\n        \"8720\": [0.055, -0.25, 0.888, 0.75],\r\n        \"8721\": [0.056, -0.25, 0.999, 0.75],\r\n        \"8730\": [0.111, -0.35, 1.02, 0.85],\r\n        \"8739\": [0.145, -0.015, 0.188, 0.627],\r\n        \"8741\": [0.145, -0.015, 0.41, 0.627],\r\n        \"8747\": [0.055, -0.306, 0.61, 0.805],\r\n        \"8748\": [0.055, -0.306, 0.957, 0.805],\r\n        \"8749\": [0.055, -0.306, 1.304, 0.805],\r\n        \"8750\": [0.055, -0.306, 0.61, 0.805],\r\n        \"8896\": [0.055, -0.249, 0.777, 0.75],\r\n        \"8897\": [0.055, -0.249, 0.777, 0.75],\r\n        \"8898\": [0.055, -0.249, 0.777, 0.75],\r\n        \"8899\": [0.055, -0.249, 0.777, 0.75],\r\n        \"8968\": [0.202, -0.349, 0.449, 0.85],\r\n        \"8969\": [0.022, -0.349, 0.269, 0.85],\r\n        \"8970\": [0.202, -0.349, 0.449, 0.85],\r\n        \"8971\": [0.022, -0.349, 0.269, 0.85],\r\n        \"9168\": [0.312, 0, 0.355, 0.602],\r\n        \"10216\": [0.097, -0.35, 0.394, 0.85],\r\n        \"10217\": [0.077, -0.35, 0.374, 0.85],\r\n        \"10752\": [0.056, -0.25, 1.054, 0.75],\r\n        \"10753\": [0.056, -0.25, 1.054, 0.75],\r\n        \"10754\": [0.056, -0.25, 1.054, 0.75],\r\n        \"10756\": [0.055, -0.249, 0.777, 0.75],\r\n        \"10758\": [0.055, -0.249, 0.777, 0.75],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Size2-Regular\": {\r\n        \"40\": [0.18, -0.649, 0.561, 1.15],\r\n        \"41\": [0.035, -0.649, 0.416, 1.15],\r\n        \"47\": [0.056, -0.649, 0.754, 1.15],\r\n        \"91\": [0.224, -0.649, 0.455, 1.15],\r\n        \"92\": [0.055, -0.649, 0.754, 1.15],\r\n        \"93\": [0.016, -0.649, 0.247, 1.15],\r\n        \"123\": [0.119, -0.649, 0.547, 1.15],\r\n        \"125\": [0.119, -0.649, 0.547, 1.15],\r\n        \"710\": [-0.005, 0.565, 1.004, 0.772],\r\n        \"732\": [0, 0.611, 0.999, 0.75],\r\n        \"770\": [-1.005, 0.565, 0.004, 0.772],\r\n        \"771\": [-1, 0.611, -0.001, 0.75],\r\n        \"8719\": [0.056, -0.45, 1.221, 0.95],\r\n        \"8720\": [0.056, -0.45, 1.221, 0.95],\r\n        \"8721\": [0.055, -0.45, 1.388, 0.95],\r\n        \"8730\": [0.111, -0.65, 1.02, 1.15],\r\n        \"8747\": [0.055, -0.862, 0.944, 1.36],\r\n        \"8748\": [0.055, -0.862, 1.472, 1.36],\r\n        \"8749\": [0.055, -0.862, 1.98, 1.36],\r\n        \"8750\": [0.055, -0.862, 0.944, 1.36],\r\n        \"8896\": [0.055, -0.45, 1.055, 0.95],\r\n        \"8897\": [0.055, -0.45, 1.055, 0.95],\r\n        \"8898\": [0.055, -0.45, 1.055, 0.949],\r\n        \"8899\": [0.055, -0.449, 1.055, 0.95],\r\n        \"8968\": [0.224, -0.649, 0.511, 1.15],\r\n        \"8969\": [0.016, -0.649, 0.303, 1.15],\r\n        \"8970\": [0.224, -0.649, 0.511, 1.15],\r\n        \"8971\": [0.016, -0.649, 0.303, 1.15],\r\n        \"10216\": [0.112, -0.649, 0.523, 1.15],\r\n        \"10217\": [0.086, -0.649, 0.498, 1.15],\r\n        \"10752\": [0.056, -0.449, 1.454, 0.949],\r\n        \"10753\": [0.056, -0.449, 1.454, 0.949],\r\n        \"10754\": [0.056, -0.449, 1.454, 0.949],\r\n        \"10756\": [0.055, -0.449, 1.055, 0.95],\r\n        \"10758\": [0.055, -0.45, 1.055, 0.95],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Size3-Regular\": {\r\n        \"40\": [0.209, -0.949, 0.701, 1.45],\r\n        \"41\": [0.034, -0.949, 0.526, 1.45],\r\n        \"47\": [0.055, -0.949, 0.988, 1.45],\r\n        \"91\": [0.247, -0.949, 0.516, 1.45],\r\n        \"92\": [0.056, -0.949, 0.988, 1.45],\r\n        \"93\": [0.011, -0.949, 0.28, 1.45],\r\n        \"123\": [0.13, -0.949, 0.618, 1.45],\r\n        \"125\": [0.131, -0.949, 0.618, 1.45],\r\n        \"710\": [-0.004, 0.564, 1.447, 0.772],\r\n        \"732\": [0.001, 0.61, 1.442, 0.749],\r\n        \"770\": [-1.448, 0.564, 0.003, 0.772],\r\n        \"771\": [-1.443, 0.61, -0.002, 0.749],\r\n        \"8730\": [0.111, -0.95, 1.02, 1.45],\r\n        \"8968\": [0.246, -0.949, 0.571, 1.45],\r\n        \"8969\": [0.011, -0.949, 0.336, 1.45],\r\n        \"8970\": [0.246, -0.949, 0.571, 1.45],\r\n        \"8971\": [0.011, -0.949, 0.336, 1.45],\r\n        \"10216\": [0.126, -0.95, 0.654, 1.45],\r\n        \"10217\": [0.094, -0.949, 0.623, 1.45],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Size4-Regular\": {\r\n        \"40\": [0.237, -1.249, 0.758, 1.75],\r\n        \"41\": [0.033, -1.249, 0.554, 1.75],\r\n        \"47\": [0.056, -1.249, 1.221, 1.75],\r\n        \"91\": [0.269, -1.249, 0.577, 1.75],\r\n        \"92\": [0.056, -1.249, 1.221, 1.75],\r\n        \"93\": [0.005, -1.249, 0.313, 1.75],\r\n        \"123\": [0.144, -1.249, 0.661, 1.75],\r\n        \"125\": [0.144, -1.249, 0.661, 1.75],\r\n        \"710\": [-0.014, 0.561, 1.902, 0.845],\r\n        \"732\": [0.002, 0.583, 1.885, 0.823],\r\n        \"770\": [-1.903, 0.561, 0.013, 0.845],\r\n        \"771\": [-1.887, 0.583, -0.004, 0.823],\r\n        \"8730\": [0.111, -1.25, 1.02, 1.75],\r\n        \"8968\": [0.269, -1.249, 0.633, 1.75],\r\n        \"8969\": [0.005, -1.249, 0.369, 1.75],\r\n        \"8970\": [0.269, -1.249, 0.633, 1.75],\r\n        \"8971\": [0.005, -1.249, 0.369, 1.75],\r\n        \"9115\": [0.291, -0.655, 0.843, 1.154],\r\n        \"9116\": [0.291, -0.01, 0.417, 0.61],\r\n        \"9117\": [0.291, -0.644, 0.843, 1.165],\r\n        \"9118\": [0.031, -0.655, 0.583, 1.154],\r\n        \"9119\": [0.457, -0.01, 0.583, 0.61],\r\n        \"9120\": [0.031, -0.644, 0.583, 1.165],\r\n        \"9121\": [0.319, -0.645, 0.666, 1.154],\r\n        \"9122\": [0.319, 0, 0.403, 0.602],\r\n        \"9123\": [0.319, -0.644, 0.666, 1.155],\r\n        \"9124\": [0, -0.645, 0.347, 1.154],\r\n        \"9125\": [0.263, 0, 0.347, 0.602],\r\n        \"9126\": [0, -0.644, 0.347, 1.155],\r\n        \"9127\": [0.384, -0.01, 0.718, 0.899],\r\n        \"9128\": [0.17, -0.66, 0.504, 1.16],\r\n        \"9129\": [0.384, -0.899, 0.718, 0.01],\r\n        \"9130\": [0.384, -0.01, 0.504, 0.31],\r\n        \"9131\": [0.17, -0.01, 0.504, 0.899],\r\n        \"9132\": [0.384, -0.66, 0.718, 1.16],\r\n        \"9133\": [0.17, -0.899, 0.504, 0.01],\r\n        \"9143\": [0.111, -0.885, 0.742, 0.935],\r\n        \"10216\": [0.14, -1.248, 0.703, 1.75],\r\n        \"10217\": [0.103, -1.248, 0.665, 1.75],\r\n        \"57344\": [0.702, -0.014, 0.742, 0.625],\r\n        \"57345\": [0.702, -0.014, 1.076, 0.605],\r\n        \"57680\": [-0.024, -0.213, 0.46, 0.12],\r\n        \"57681\": [-0.01, -0.213, 0.474, 0.12],\r\n        \"57682\": [-0.024, 0, 0.46, 0.333],\r\n        \"57683\": [-0.01, 0, 0.474, 0.333],\r\n        \"57684\": [-0.01, 0, 0.41, 0.12],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    },\r\n    \"Typewriter-Regular\": {\r\n        \"33\": [0.206, 0, 0.32, 0.622],\r\n        \"34\": [0.122, 0.333, 0.402, 0.623],\r\n        \"35\": [0.036, 0, 0.489, 0.611],\r\n        \"36\": [0.058, -0.082, 0.466, 0.694],\r\n        \"37\": [0.035, -0.083, 0.489, 0.694],\r\n        \"38\": [0.028, -0.011, 0.49, 0.622],\r\n        \"39\": [0.175, 0.287, 0.349, 0.611],\r\n        \"40\": [0.166, -0.082, 0.437, 0.694],\r\n        \"41\": [0.087, -0.082, 0.358, 0.694],\r\n        \"42\": [0.068, 0.09, 0.456, 0.52],\r\n        \"43\": [0.038, 0.081, 0.487, 0.531],\r\n        \"44\": [0.174, -0.139, 0.353, 0.14],\r\n        \"45\": [0.057, 0.271, 0.468, 0.341],\r\n        \"46\": [0.193, 0.001, 0.332, 0.14],\r\n        \"47\": [0.058, -0.083, 0.466, 0.694],\r\n        \"48\": [0.042, -0.01, 0.482, 0.621],\r\n        \"49\": [0.099, 0.001, 0.45, 0.622],\r\n        \"50\": [0.052, 0.001, 0.472, 0.622],\r\n        \"51\": [0.044, -0.011, 0.479, 0.622],\r\n        \"52\": [0.029, 0.001, 0.495, 0.624],\r\n        \"53\": [0.052, -0.01, 0.472, 0.611],\r\n        \"54\": [0.045, -0.011, 0.479, 0.622],\r\n        \"55\": [0.044, -0.01, 0.48, 0.627],\r\n        \"56\": [0.045, -0.01, 0.479, 0.621],\r\n        \"57\": [0.046, -0.011, 0.479, 0.622],\r\n        \"58\": [0.193, 0.001, 0.332, 0.431],\r\n        \"59\": [0.175, -0.139, 0.337, 0.431],\r\n        \"60\": [0.057, 0.055, 0.468, 0.557],\r\n        \"61\": [0.038, 0.195, 0.487, 0.417],\r\n        \"62\": [0.057, 0.055, 0.468, 0.557],\r\n        \"63\": [0.062, 0, 0.462, 0.617],\r\n        \"64\": [0.044, -0.006, 0.481, 0.617],\r\n        \"65\": [0.028, 0.001, 0.496, 0.623],\r\n        \"66\": [0.017, 0.001, 0.482, 0.611],\r\n        \"67\": [0.04, -0.011, 0.484, 0.622],\r\n        \"68\": [0.016, 0.001, 0.485, 0.611],\r\n        \"69\": [0.019, 0.001, 0.502, 0.611],\r\n        \"70\": [0.022, 0.001, 0.49, 0.611],\r\n        \"71\": [0.038, -0.011, 0.496, 0.622],\r\n        \"72\": [0.016, 0.001, 0.508, 0.611],\r\n        \"73\": [0.072, 0.001, 0.452, 0.611],\r\n        \"74\": [0.057, -0.011, 0.479, 0.611],\r\n        \"75\": [0.018, 0.001, 0.495, 0.611],\r\n        \"76\": [0.025, 0, 0.488, 0.611],\r\n        \"77\": [0.012, 0.001, 0.512, 0.611],\r\n        \"78\": [0.02, 0, 0.504, 0.611],\r\n        \"79\": [0.056, -0.01, 0.468, 0.621],\r\n        \"80\": [0.019, 0.001, 0.48, 0.611],\r\n        \"81\": [0.056, -0.138, 0.468, 0.621],\r\n        \"82\": [0.016, -0.011, 0.522, 0.611],\r\n        \"83\": [0.052, -0.011, 0.472, 0.622],\r\n        \"84\": [0.026, 0.001, 0.498, 0.611],\r\n        \"85\": [-0.003, -0.011, 0.528, 0.611],\r\n        \"86\": [0.019, -0.007, 0.505, 0.611],\r\n        \"87\": [0.012, -0.007, 0.512, 0.611],\r\n        \"88\": [0.028, 0.001, 0.495, 0.611],\r\n        \"89\": [0.02, 0.001, 0.505, 0.611],\r\n        \"90\": [0.048, 0.001, 0.481, 0.611],\r\n        \"91\": [0.214, -0.082, 0.483, 0.694],\r\n        \"92\": [0.058, -0.083, 0.466, 0.694],\r\n        \"93\": [0.041, -0.082, 0.31, 0.694],\r\n        \"94\": [0.096, 0.46, 0.428, 0.611],\r\n        \"95\": [0.057, -0.095, 0.468, -0.025],\r\n        \"96\": [0.176, 0.357, 0.35, 0.681],\r\n        \"97\": [0.048, -0.006, 0.524, 0.439],\r\n        \"98\": [0.004, -0.006, 0.492, 0.611],\r\n        \"99\": [0.066, -0.006, 0.466, 0.44],\r\n        \"100\": [0.031, -0.006, 0.52, 0.611],\r\n        \"101\": [0.048, -0.006, 0.464, 0.44],\r\n        \"102\": [0.035, 0.001, 0.437, 0.617],\r\n        \"103\": [0.029, -0.229, 0.509, 0.442],\r\n        \"104\": [0.004, 0.001, 0.52, 0.611],\r\n        \"105\": [0.072, 0.001, 0.462, 0.612],\r\n        \"106\": [0.048, -0.228, 0.376, 0.612],\r\n        \"107\": [0.013, 0.001, 0.507, 0.611],\r\n        \"108\": [0.051, 0.001, 0.474, 0.611],\r\n        \"109\": [-0.012, 0.001, 0.536, 0.436],\r\n        \"110\": [0.004, 0.001, 0.52, 0.436],\r\n        \"111\": [0.052, -0.006, 0.472, 0.44],\r\n        \"112\": [0.004, -0.221, 0.492, 0.437],\r\n        \"113\": [0.034, -0.221, 0.545, 0.437],\r\n        \"114\": [0.024, 0.001, 0.487, 0.437],\r\n        \"115\": [0.072, -0.006, 0.458, 0.44],\r\n        \"116\": [0.025, -0.006, 0.448, 0.554],\r\n        \"117\": [0.004, -0.005, 0.52, 0.431],\r\n        \"118\": [0.024, -0.004, 0.5, 0.431],\r\n        \"119\": [0.016, -0.004, 0.508, 0.431],\r\n        \"120\": [0.029, 0.001, 0.495, 0.431],\r\n        \"121\": [0.026, -0.228, 0.5, 0.431],\r\n        \"122\": [0.034, 0.001, 0.475, 0.431],\r\n        \"123\": [0.05, -0.083, 0.475, 0.694],\r\n        \"124\": [0.228, -0.082, 0.297, 0.694],\r\n        \"125\": [0.049, -0.083, 0.475, 0.694],\r\n        \"126\": [0.087, 0.116, 0.437, 0.261],\r\n        \"127\": [0.104, 0.519, 0.421, 0.612],\r\n        \"168\": [0.104, 0.519, 0.421, 0.612],\r\n        \"176\": [0.181, 0.499, 0.343, 0.619],\r\n        \"184\": [0.155, -0.212, 0.434, 0.05],\r\n        \"305\": [0.072, 0.001, 0.462, 0.431],\r\n        \"567\": [0.048, -0.228, 0.376, 0.431],\r\n        \"710\": [0.096, 0.46, 0.428, 0.611],\r\n        \"711\": [0.098, 0.449, 0.426, 0.577],\r\n        \"713\": [0.073, 0.5, 0.451, 0.577],\r\n        \"714\": [0.194, 0.485, 0.408, 0.611],\r\n        \"715\": [0.116, 0.485, 0.33, 0.611],\r\n        \"728\": [0.079, 0.504, 0.446, 0.611],\r\n        \"729\": [0.057, -0.095, 0.468, -0.025],\r\n        \"730\": [0.181, 0.499, 0.343, 0.619],\r\n        \"732\": [0.087, 0.466, 0.437, 0.611],\r\n        \"733\": [0.049, -0.083, 0.475, 0.694],\r\n        \"915\": [0.025, 0, 0.488, 0.611],\r\n        \"916\": [0.035, 0, 0.489, 0.623],\r\n        \"920\": [0.056, -0.01, 0.468, 0.621],\r\n        \"923\": [0.03, 0.001, 0.495, 0.623],\r\n        \"926\": [0.033, 0.001, 0.491, 0.611],\r\n        \"928\": [0.016, 0.001, 0.508, 0.611],\r\n        \"931\": [0.04, 0.001, 0.484, 0.611],\r\n        \"933\": [0.038, 0.001, 0.486, 0.622],\r\n        \"934\": [0.041, 0.001, 0.483, 0.611],\r\n        \"936\": [0.037, 0.001, 0.487, 0.611],\r\n        \"937\": [0.032, 0.001, 0.492, 0.622],\r\n        \"8216\": [0.176, 0.357, 0.35, 0.681],\r\n        \"8217\": [0.175, 0.287, 0.349, 0.611],\r\n        \"8242\": [0.211, 0.334, 0.313, 0.623],\r\n        \"9251\": [0.044, -0.139, 0.48, 0.248],\r\n        \"61437\": [0, 0, 0.3, 0.1],\r\n        \"61438\": [0, 0, 0.3, 0.1],\r\n        \"61439\": [0, 0, 0.1, 0.1]\r\n    }\r\n}","\nimport { flatten } from 'ramda';\n\nimport fontMetrics from './font-metrics-data.js';\n\nexport interface Metrics {\n    width: number,\n    height: number, \n    depth: number, \n    italicCorrection: number,\n    skew: number\n};\n\nconst getMetricEntriesOfFont = (fontFamily: string, emphasis: string): { [key: string]: number[] } => fontMetrics[`${fontFamily}-${emphasis}`];\nexport const getMetrics = (fontFamily: string, emphasis: string, unicode: number): number[] => getMetricEntriesOfFont(fontFamily, emphasis)[unicode];\nexport const objectifyMetrics = (metric: number[]) : Metrics => {\n    return {\n        depth: metric[0],\n        height: metric[1],\n        italicCorrection: metric[2],\n        skew: metric[3],\n        width: metric[4]\n    }\n};\nexport const getMetricsObject = (fontFamily: string, emphasis: string, unicode: number): Metrics => objectifyMetrics(getMetrics(fontFamily, emphasis, unicode));\n\nconst katexFontFamily : { [key: string]: string } = {\n    AMS: \"AMS\", \n    Caligraphic: \"Caligraphic\",\n    Fraktur: \"Fraktur\",\n    Main: \"Main\",\n    Math: \"Math\",\n    SansSerif: \"SansSerif\",\n    Script: \"Script\",\n    Size1: \"Size1\",\n    Size2: \"Size2\",\n    Size3: \"Size3\",\n    Size4: \"Size4\",\n    Typewriter: \"Typewriter\"\n};\n\nexport const fontData: { \n    name: string, emphasis: string[], styleWeightCombinations: [string, string][]\n}[] = \n[\n    { \n        name: \"AMS\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Caligraphic\", \n        emphasis: [\"Regular\", \"Bold\"], \n        styleWeightCombinations: [[\"normal\", \"normal\"], [\"normal\", \"bold\"]]\n    },\n    { \n        name: \"Fraktur\", \n        emphasis: [\"Regular\", \"Bold\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"], [\"normal\", \"bold\"]]\n    },\n    { \n        name: \"Main\", \n        emphasis: [\"Regular\", \"Bold\", \"Italic\", \"BoldItalic\"],\n        styleWeightCombinations: [\n            [\"normal\", \"normal\"], [\"normal\", \"bold\"], [\"italic\", \"normal\"], [\"italic\", \"bold\"]\n        ]\n    },\n    { \n        name: \"Math\", \n        emphasis: [\"Italic\", \"BoldItalic\"],\n        styleWeightCombinations: [[\"italic\", \"normal\"], [\"italic\", \"bold\"]]\n    },\n    { \n        name: \"SansSerif\", \n        emphasis: [\"Regular\", \"Bold\", \"Italic\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"], [\"normal\", \"bold\"], [\"italic\", \"normal\"]]\n    },\n    { \n        name: \"Script\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Size1\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Size2\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Size3\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Size4\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    },\n    { \n        name: \"Typewriter\", \n        emphasis: [\"Regular\"],\n        styleWeightCombinations: [[\"normal\", \"normal\"]]\n    }\n];\nconst styleWeightCombinationToNumber = (style: string, weight: string): number => (weight === \"normal\" ? 0 : 2) + (style === \"normal\" ? 0 : 1);\nexport const styleWeightCombinationToEmphasis = (style: string, weight: string): string => [\"Regular\", \"Italic\", \"Bold\", \"BoldItalic\"][styleWeightCombinationToNumber(style, weight)];\nexport const emphasisToStyleWeightCombination = (emphasis: string): string[] => {\n    const index: number = [\"Regular\", \"Italic\", \"Bold\", \"BoldItalic\"].indexOf(emphasis);\n    return [\n        [\"normal\", \"normal\"],\n        [\"italic\", \"normal\"],\n        [\"normal\", \"bold\"],\n        [\"italic\", \"bold\"]\n    ][index];\n};\n\nexport const getFontDataByName = (name: string) => fontData.find(entry => entry.name === name);\nexport const getDefaultEmphasis = (fontFamily: string): string => getFontDataByName(fontFamily).emphasis[0];\nexport const fontIdentifiers: string[] = flatten(fontData.map(entry => entry.emphasis.map(emph => `${entry.name}-${emph}`)));\n\nconst fontFamilyLookUpOrder = [\n    \"Math\", \"Main\", \n    \"Size1\", \"Size2\", \"Size3\", \"Size4\",\n    \"SansSerif\", \"Caligraphic\", \"AMS\", \"Fraktur\", \"Typewriter\", \"Script\"\n];\n\nexport const hasFontFamilyUnicode = (fontFamily: string, emphasis: string, unicode: number) : boolean => getMetrics(fontFamily, emphasis, unicode) !== undefined;\n\nexport const lookUpFamilyNameByUnicode = (unicode: number): { fontFamily: string, emphasis: string } => {\n    for (const fontFam of fontFamilyLookUpOrder){\n        const fontEntry = getFontDataByName(fontFam);\n        for (const emph of fontEntry.emphasis){\n            if (hasFontFamilyUnicode(fontFam, emph, unicode)){\n                return { fontFamily: fontFam, emphasis: emph };\n            }\n        }\n    }\n};\n\n\n\nexport const aliasMap : { alias: string[], fontFamily: string, unicode: number }[] = [\n\t//big operators\n\t{ alias: [\"integral\"], fontFamily: \"Size2\", unicode: 8747 },\n\t{ alias: [\"sum\"], fontFamily: \"Size2\", unicode: 8721 },\n\t{ alias: [\"product\"], fontFamily: \"Size2\", unicode: 8719 },\n    { alias: [\"big-union\"], fontFamily: \"Size2\", unicode: 8899 },\n    \n\t//binary operators\n\t{ alias: [\"+\"], fontFamily: \"Main\", unicode: 43 },\n    { alias: [\"-\"], fontFamily: \"Main\", unicode: 8722 },\n    { alias: [\"+-\"], fontFamily: \"Main\", unicode: 177 },\n    { alias: [\"*\"], fontFamily: \"Main\", unicode: 8901 },\n    { alias: [\"/\"], fontFamily: \"Main\", unicode: 47 },\n\t{ alias: [\"division\"], fontFamily: \"Main\", unicode: 247 },\n\t{ alias: [\"cross\"], fontFamily: \"Main\", unicode: 215 },\n\t{ alias: [\"ring\"], fontFamily: \"Main\", unicode: 8728 },\n    { alias: [\"asterisk\"], fontFamily: \"Main\", unicode: 42 },\n\n\t//relation\n    { alias: [\"equal\", \"=\"], fontFamily: \"Main\", unicode: 61 },\n    { alias: [\"smaller\", \"<\"], fontFamily: \"Main\", unicode: 60 },\n    { alias: [\"greater\", \">\"], fontFamily: \"Main\", unicode: 62 },\n\t{ alias: [\"<=\"], fontFamily: \"Main\", unicode: 8804 },\n\t{ alias: [\">=\"], fontFamily: \"Main\", unicode: 8805 },\n\t{ alias: [\"<<\"], fontFamily: \"Main\", unicode: 8810 },\n\t{ alias: [\">>\"], fontFamily: \"Main\", unicode: 8811 },\n\t{ alias: [\"approx\"], fontFamily: \"Main\", unicode: 8776 },\n\t{ alias: [\"equiv\"], fontFamily: \"Main\", unicode: 8801 },\n\n\t{ alias: [\"in\"], fontFamily: \"Main\", unicode: 8712 },\n\t{ alias: [\"owns\"], fontFamily: \"Main\", unicode: 8715 },\n\t{ alias: [\"subset\"], fontFamily: \"Main\", unicode: 8834 },\n\t{ alias: [\"subset-equal\"], fontFamily: \"Main\", unicode: 8838 },\n\n\t//accents\n    { alias: [\"dot-accent\"], fontFamily: \"Main\", unicode: 729 },\n\t{ alias: [\"vector\"], fontFamily: \"Main\", unicode: 8407 },\n    { alias: [\"bar\"], fontFamily: \"Main\", unicode: 713 },\n\t{ alias: [\"double-dot-accent\"], fontFamily: \"Main\", unicode: 168 },\n    { alias: [\"ring-accent\"], fontFamily: \"Main\", unicode: 730 },\n    { alias: [\"hat-accent\"], fontFamily: \"Main\", unicode: 94 },\n\n\t//open & close\n\t{ alias: [\"left-angle\"], fontFamily: \"Main\", unicode: 10216 },\n\t{ alias: [\"right-angle\"], fontFamily: \"Main\", unicode: 10217 },\n\t{ alias: [\"left-ceil\"], fontFamily: \"Main\", unicode: 8968 },\n\t{ alias: [\"right-ceil\"], fontFamily: \"Main\", unicode: 8969 },\n\t{ alias: [\"left-floor\"], fontFamily: \"Main\", unicode: 8970 },\n\t{ alias: [\"right-floor\"], fontFamily: \"Main\", unicode: 8971 },\n    { alias: [\"{\", \"left-brace\"], fontFamily: \"Main\", unicode: 123 },\n    { alias: [\"}\", \"right-brace\"], fontFamily: \"Main\", unicode: 125 },\n\n\t//misc\n\t{ alias: [\"implies\"], fontFamily: \"Main\", unicode: 10233},\n\t{ alias: [\"maps-to\"], fontFamily: \"Main\", unicode: 8614 },\n\t{ alias: [\"to\", \"->\"], fontFamily: \"Main\", unicode: 8594 },\n\t{ alias: [\"'\"], fontFamily: \"Main\", unicode: 8242 },\n    { alias: [\"infinity\"], fontFamily: \"Main\", unicode: 8734 },\n    { alias: [\"...\"], fontFamily: \"Main\", unicode: 8943 },\n\n    //alphabet\n    { alias: [\"a\"], fontFamily: \"Math\", unicode: 97 },\n    { alias: [\"b\"], fontFamily: \"Math\", unicode: 98 }, \n    { alias: [\"c\"], fontFamily: \"Math\", unicode: 99 }, \n    { alias: [\"d\"], fontFamily: \"Math\", unicode: 100 }, \n    { alias: [\"e\"], fontFamily: \"Math\", unicode: 101 }, \n    { alias: [\"f\"], fontFamily: \"Math\", unicode: 102 }, \n    { alias: [\"g\"], fontFamily: \"Math\", unicode: 103 }, \n    { alias: [\"h\"], fontFamily: \"Math\", unicode: 104 }, \n    { alias: [\"i\"], fontFamily: \"Math\", unicode: 105 }, \n    { alias: [\"j\"], fontFamily: \"Math\", unicode: 106 }, \n    { alias: [\"k\"], fontFamily: \"Math\", unicode: 107 }, \n    { alias: [\"l\"], fontFamily: \"Math\", unicode: 108 }, \n    { alias: [\"m\"], fontFamily: \"Math\", unicode: 109 }, \n    { alias: [\"n\"], fontFamily: \"Math\", unicode: 110 }, \n    { alias: [\"o\"], fontFamily: \"Math\", unicode: 111 }, \n    { alias: [\"p\"], fontFamily: \"Math\", unicode: 112 }, \n    { alias: [\"q\"], fontFamily: \"Math\", unicode: 113 }, \n    { alias: [\"r\"], fontFamily: \"Math\", unicode: 114 }, \n    { alias: [\"s\"], fontFamily: \"Math\", unicode: 115 }, \n    { alias: [\"t\"], fontFamily: \"Math\", unicode: 116 }, \n    { alias: [\"u\"], fontFamily: \"Math\", unicode: 117 }, \n    { alias: [\"v\"], fontFamily: \"Math\", unicode: 118 }, \n    { alias: [\"w\"], fontFamily: \"Math\", unicode: 119 }, \n    { alias: [\"x\"], fontFamily: \"Math\", unicode: 120 }, \n    { alias: [\"y\"], fontFamily: \"Math\", unicode: 121 }, \n    { alias: [\"z\"], fontFamily: \"Math\", unicode: 122 }, \n\n\t//greek letters\n    { alias: [\"Alpha\"], fontFamily: \"Main\", unicode: 65 },\n    { alias: [\"Beta\"], fontFamily: \"Main\", unicode: 66 },\n    { alias: [\"Gamma\"], fontFamily: \"Main\", unicode: 915 },\n    { alias: [\"Delta\"], fontFamily: \"Main\", unicode: 916 },\n    { alias: [\"Epsilon\"], fontFamily: \"Main\", unicode: 69 },\n    { alias: [\"Zeta\"], fontFamily: \"Main\", unicode: 90 },\n    { alias: [\"Eta\"], fontFamily: \"Main\", unicode: 72 },\n    { alias: [\"Theta\"], fontFamily: \"Main\", unicode: 920 },\n    { alias: [\"Iota\"], fontFamily: \"Main\", unicode: 73 },\n    { alias: [\"Kappa\"], fontFamily: \"Main\", unicode: 75 },\n    { alias: [\"Lambda\"], fontFamily: \"Main\", unicode: 923 },\n    { alias: [\"Mu\"], fontFamily: \"Main\", unicode: 77 },\n    { alias: [\"Nu\"], fontFamily: \"Main\", unicode: 78 },\n    { alias: [\"Xi\"], fontFamily: \"Main\", unicode: 926 },\n    { alias: [\"Omicron\"], fontFamily: \"Main\", unicode: 79 },\n    { alias: [\"Pi\"], fontFamily: \"Main\", unicode: 928 },\n    { alias: [\"Rho\"], fontFamily: \"Main\", unicode: 80 },\n    { alias: [\"Sigma\"], fontFamily: \"Main\", unicode: 931 },\n    { alias: [\"Tau\"], fontFamily: \"Main\", unicode: 84 },\n    { alias: [\"Upsilon\"], fontFamily: \"Main\", unicode: 933 },\n    { alias: [\"Phi\"], fontFamily: \"Main\", unicode: 934 },\n    { alias: [\"Chi\"], fontFamily: \"Main\", unicode: 88 },\n    { alias: [\"Psi\"], fontFamily: \"Main\", unicode: 936 },\n    { alias: [\"Omega\"], fontFamily: \"Main\", unicode: 937 },\n    { alias: [\"varGamma\"], fontFamily: \"Main\", unicode: 915 },\n    { alias: [\"varDelta\"], fontFamily: \"Main\", unicode: 916 },\n    { alias: [\"varTheta\"], fontFamily: \"Main\", unicode: 920 },\n    { alias: [\"varLambda\"], fontFamily: \"Main\", unicode: 923 },\n    { alias: [\"varXi\"], fontFamily: \"Main\", unicode: 926 },\n    { alias: [\"varPi\"], fontFamily: \"Main\", unicode: 928 },\n    { alias: [\"varSigma\"], fontFamily: \"Main\", unicode: 931 },\n    { alias: [\"varUpsilon\"], fontFamily: \"Main\", unicode: 933 },\n    { alias: [\"varPhi\"], fontFamily: \"Main\", unicode: 934 },\n    { alias: [\"varPsi\"], fontFamily: \"Main\", unicode: 936 },\n    { alias: [\"varOmega\"], fontFamily: \"Main\", unicode: 937 },\n    { alias: [\"alpha\"], fontFamily: \"Math\", unicode: 945 },\n    { alias: [\"beta\"], fontFamily: \"Math\", unicode: 946 },\n    { alias: [\"gamma\"], fontFamily: \"Math\", unicode: 947 },\n    { alias: [\"delta\"], fontFamily: \"Math\", unicode: 948 },\n    { alias: [\"epsilon\"], fontFamily: \"Math\", unicode: 1013 },\n    { alias: [\"zeta\"], fontFamily: \"Math\", unicode: 950 },\n    { alias: [\"eta\"], fontFamily: \"Math\", unicode: 951 },\n    { alias: [\"theta\"], fontFamily: \"Math\", unicode: 952 },\n    { alias: [\"iota\"], fontFamily: \"Math\", unicode: 953 },\n    { alias: [\"kappa\"], fontFamily: \"Math\", unicode: 954 },\n    { alias: [\"lambda\"], fontFamily: \"Math\", unicode: 955 },\n    { alias: [\"mu\"], fontFamily: \"Math\", unicode: 956 },\n    { alias: [\"nu\"], fontFamily: \"Math\", unicode: 957 },\n    { alias: [\"xi\"], fontFamily: \"Math\", unicode: 958 },\n    { alias: [\"omicron\"], fontFamily: \"Math\", unicode: 959 },\n    { alias: [\"pi\"], fontFamily: \"Math\", unicode: 960 },\n    { alias: [\"rho\"], fontFamily: \"Math\", unicode: 961 },\n    { alias: [\"sigma\"], fontFamily: \"Math\", unicode: 963 },\n    { alias: [\"tau\"], fontFamily: \"Math\", unicode: 964 },\n    { alias: [\"upsilon\"], fontFamily: \"Math\", unicode: 965 },\n    { alias: [\"phi\"], fontFamily: \"Math\", unicode: 981 },\n    { alias: [\"chi\"], fontFamily: \"Math\", unicode: 967 },\n    { alias: [\"psi\"], fontFamily: \"Math\", unicode: 968 },\n    { alias: [\"omega\"], fontFamily: \"Math\", unicode: 969 },\n    { alias: [\"varepsilon\"], fontFamily: \"Math\", unicode: 949 },\n    { alias: [\"varkappa\"], fontFamily: \"AMS\", unicode: 1008 },\n    { alias: [\"vartheta\"], fontFamily: \"Math\", unicode: 977 },\n    { alias: [\"thetasym\"], fontFamily: \"Math\", unicode: 977 },\n    { alias: [\"varpi\"], fontFamily: \"Math\", unicode: 982 },\n    { alias: [\"varrho\"], fontFamily: \"Math\", unicode: 1009 },\n    { alias: [\"varsigma\"], fontFamily: \"Math\", unicode: 962 },\n    { alias: [\"varphi\"], fontFamily: \"Math\", unicode: 966 },\n    { alias: [\"digamma\"], fontFamily: \"AMS\", unicode: 989 },\n\n\t//sets\n    { alias: [\"natural-numbers\"], fontFamily: \"AMS\", unicode: 78 },\n    { alias: [\"integers\"], fontFamily: \"AMS\", unicode: 90 },\n    { alias: [\"rational-numbers\"], fontFamily: \"AMS\", unicode: 81 },\n    { alias: [\"real-numbers\"], fontFamily: \"AMS\", unicode: 82 },\n    { alias: [\"complex-numbers\"], fontFamily: \"AMS\", unicode: 67 },\n\n    //misc\n    { alias: [\"imath\"], fontFamily: \"Main\", unicode: 305 },\n    { alias: [\"jmath\"], fontFamily: \"Main\", unicode: 567 },\n    { alias: [\"nabla\"], fontFamily: \"Main\", unicode: 8711 },\n    { alias: [\"partial\"], fontFamily: \"Main\", unicode: 8706 },\n    { alias: [\"big-empty\"], fontFamily: \"Main\", unicode: 216 },\n    { alias: [\"empty\"], fontFamily: \"Main\", unicode: 248 },\n    { alias: [\"aleph\"], fontFamily: \"Main\", unicode: 8501 },\n    { alias: [\"hbar\"], fontFamily: \"Main\", unicode: 8463 },\n];\nconst lookUpAliasEntry = (alias: string) => aliasMap.find(entry => entry.alias.includes(alias));\n\nimport { pick } from 'ramda';\nexport const lookUpGlyphByCharOrAlias = (charOrAlias: string) : { fontFamily: string, unicode: number} => {\n    const aliasEntry = lookUpAliasEntry(charOrAlias);\n    if (aliasEntry){\n        return pick([\"fontFamily\", \"unicode\"], aliasEntry);\n    }\n\n    //no alias found, treat the argument as a char\n    const unicode = charOrAlias.charCodeAt(0);\n    const { fontFamily, emphasis } = lookUpFamilyNameByUnicode(unicode);\n    return {\n        fontFamily, unicode\n    };\n};\n\nexport const lookUpUnicode = (charOrAlias: string) : number => lookUpGlyphByCharOrAlias(charOrAlias).unicode;\n\nimport bboxData from './font-bbox-data.js';\nimport { BoundingBox } from '../types';\nexport const lookUpBoundingBox = (fontFamily: string, unicode: number, emphasis: string = null) : BoundingBox => {\n\temphasis = emphasis || getDefaultEmphasis(fontFamily);\n    const bbox: number[] = bboxData[`${fontFamily}-${emphasis}`][unicode];\n    return {\n        xMin: bbox[0], yMin: bbox[1],\n        xMax: bbox[2], yMax: bbox[3]\n    }\n};\n\nexport const getUrlByFontName = (fontFamily: string, emphasis: string = null) : string => {\n\temphasis = emphasis || getDefaultEmphasis(fontFamily);\n\treturn `https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/fonts/KaTeX_${fontFamily}-${emphasis}.ttf`\n};","import { identity } from \"ramda\";\nimport { FormulaNode } from \"./types\";\n\nexport interface Style {\n\ttype: \"D\" | \"T\" | \"S\" | \"SS\",\n\tcramped?: boolean,\n\tfontSize?: number,\n\temphasis?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\",\n\tfontFamily?: \"Math\"| \"Main\" |\n\t\t\"Size1\" | \"Size2\" | \"Size3\" | \"Size4\" |\n\t\t\"SansSerif\" | \"Caligraphic\" | \"AMS\" | \"Fraktur\" | \"Typewriter\" | \"Script\"\n\tcolor?: string,\n\tpreventTextPixelSnapping?: boolean\n};\n\nexport const styleType = {\n\tD: \"D\", T: \"T\", S: \"S\", SS: \"SS\"\n};\nconst styleTypeArray = [\"D\", \"T\", \"S\", \"SS\"];\nconst getSmallerStyleType = (type: string) => (type === styleType.D || type === styleType.T) ? styleType.S : styleType.SS;\nconst incrementStyleType = (type: string) => styleTypeArray[Math.min(styleTypeArray.indexOf(type) + 1, styleTypeArray.length - 1)];\n\n\nconst styleTypeToFontScale = {\n\tD: 1, T: 1, S: 0.7, SS: 0.5\n};\nexport const fontSizeOfStyleType = (defaultFontSize: number, styleType: string) => defaultFontSize * styleTypeToFontScale[styleType];\n\nconst getBaseFontSize = (style: Style) : number => style.fontSize / styleTypeToFontScale[style.type];\nexport const switchStyleType = (style: Style, nextStyleType: string): Style => identity({\n\t...style, type: nextStyleType,\n\tfontSize: fontSizeOfStyleType(getBaseFontSize(style), nextStyleType)\n});\nexport const incrementStyle = (style: Style) => switchStyleType(style, incrementStyleType(style.type));\nexport const smallerStyle = (style: Style) => switchStyleType(style, getSmallerStyleType(style.type));\nexport const smallestStyle = (style: Style) => switchStyleType(style, styleType.SS);\nexport const isDisplayStyle = (style: Style) => style.type === styleType.D;\n\n//if the node already has a style, merge the supplied style with it\nexport const createNodeStyle = (node: FormulaNode, style: Style) : Style => identity({\n\t...style, ...(node.style || {})\n});\n\n//returns a functor that merges the nodes style with the supplied style\nexport const withStyle = (style: Style) => ((node: FormulaNode) => identity({ ...node, style: createNodeStyle(node, style) }));","export const sum = (nums: number[]): number => nums.reduce((_sum: number, num: number) => _sum + num, 0);\nexport const objectToArray = (obj: object): any[] => Reflect.ownKeys(obj).map(key => obj[key]);\nexport const pickList = (keys: string[], obj: object) => keys.map(key => obj[key]);\nexport const addFontFaces = async (fontMap: object) => {\n\tconst FontFace = (window as any).FontFace;\n\tconst fonts = (document as any).fonts;\n\t\n    const keys = Reflect.ownKeys(fontMap);\n    for (const fontKey of keys) {\n\t\tconst url: string = fontMap[fontKey];\n\t\tconst katexFace = new FontFace(fontKey, `url(${url})`);\n\t\tfonts.add(katexFace);\n\t\tawait katexFace.load();\n\t}\n};\n\n//this function sums up all the numbers and records the intermediate sums along the way\nexport const accumSum = (nums: number[]) : number[] => nums.reduce((accum, num) => [...accum, accum[accum.length - 1] + num], [0]);\n\nexport const clamp = (min: number, max: number, val: number): number => {\n\tif (val < min) return min;\n\tif (val > max) return max;\n\treturn val;\n};\nexport const isDefined = (obj: any) : boolean => obj !== undefined;\n\nconst spread = (func: Function) => ((arr: any[]) => func(...arr));\nexport const min: ((input: number[]) => number) = spread(Math.min);\nexport const max: ((input: number[]) => number) = spread(Math.max);\n\nimport { fromPairs } from 'ramda';\nexport const removeKeys = (keys: string[]) => ((obj: object) => {\n\treturn fromPairs((Object as any).entries(obj).filter((entry: string) => !keys.includes(entry[0])));\n});\n\n\nimport { BoxCharNode } from '../layout/char-layout';\nimport { getMetricsObject } from '../font-data/katex-font-util';\nexport const getMetricsOfCharNode = (node: BoxCharNode) => getMetricsObject(node.style.fontFamily, node.style.emphasis, node.unicode);\n\nexport const valuesInObject = (obj: object) : [any] => (Object as any).values(obj);\n\nexport const lastInArray = <T>(array: T[]) : T => array[array.length - 1];","\nimport { pipe, map, identity, multiply, max as maxOf2, assoc } from 'ramda';\nimport { Style } from '../style';\nimport { BoxNode, Dimensions, Vector2, FormulaNode, RootNode } from '../types';\nimport { Metrics } from '../font-data/katex-font-util';\nimport { min, max, valuesInObject } from '../util/util';\nimport { isNodeTextual } from '../node-types';\n\ntype ObjectOrArrayOfBoxNodes = { [key: string]: BoxNode } | BoxNode[];\n\nexport const boxRight = (boxNode: BoxNode) : number => boxNode.position[0] + boxNode.dimensions.width;\nexport const boxTop = (boxNode: BoxNode) : number => boxNode.position[1] + boxNode.dimensions.yMax;\nexport const boxBottom = (boxNode: BoxNode) : number => boxNode.position[1] + boxNode.dimensions.yMin;\nexport const boxLeft = (boxNode: BoxNode) : number => boxNode.position[0];\n\nconst arrayify = (obj: ObjectOrArrayOfBoxNodes) : BoxNode[] => valuesInObject(obj);\n\nconst calcBoundingDimensionsOfBoxNodeArray = (boxNodes: BoxNode[]): Dimensions => identity({\n\twidth: pipe(map(boxRight), max)(boxNodes),\n\tyMin: pipe(map(boxBottom), min)(boxNodes),\n\tyMax: pipe(map(boxTop), max)(boxNodes)\n});\nexport const calcBoundingDimensions = (objs: ObjectOrArrayOfBoxNodes) : Dimensions => pipe(arrayify, calcBoundingDimensionsOfBoxNodeArray)(objs);\n\nexport const dimensionHeight = (dimensions: Dimensions) => dimensions.yMax - dimensions.yMin;\n\nexport const center = (size: number, availableSize: number) => (availableSize - size) / 2;\n\nexport const setPosition = <T extends BoxNode>(position: Vector2): ((obj: T) => T) => assoc(\"position\", position);\n\nexport const moveBox = (positionDelta: Vector2) : ((box: BoxNode) => BoxNode) => ((box: BoxNode) => assoc(\"position\", [\n\tbox.position[0] + positionDelta[0],\n\tbox.position[1] + positionDelta[1]\n], box));\n\n//this function handles overflow to the left side (xMin < 0)\nexport const alignToYAxis = (objs: ObjectOrArrayOfBoxNodes) : ObjectOrArrayOfBoxNodes => {\n\treturn map(\n\t\tpipe(\n\t\t\tmap(boxLeft), min, multiply(-1), maxOf2(0), (shift: number) => moveBox([shift, 0])\n\t\t)(objs)\n\t)(objs);\n};\n\n\n//axisHeight means the vertical position of the axis relative to the baseline. \n//this value is fixed and only scales with the font-size.\nconst normalizedAxisHeight = 0.25;\nexport const getAxisHeight = (style: Style) => style.fontSize * normalizedAxisHeight;\n\n\nconst isNodeOfAnyType = (node: FormulaNode, types: string[]) : boolean => types.includes(node.type);\n\nexport const isNodeAlignedToBaseline = (node: FormulaNode) : boolean => isNodeOfAnyType(node, [\"mathlist\", \"script\"]) ||\n\tisNodeTextual(node) || (node.type === \"root\" && isNodeAlignedToBaseline((node as RootNode).radicand));\n\n\n\nconst offsetDimensionsVertically = (dimensions: Dimensions, offset: number): Dimensions => identity({\n\t...dimensions,\n\tyMin: dimensions.yMin + offset,\n\tyMax: dimensions.yMax + offset\n});\n\nconst scaleMetrics = (metrics: Metrics, scale: number): Metrics => map(multiply(scale), metrics);\n\nconst getHeightAndDepthFromAxis = (node: FormulaNode, dim: Dimensions, axisHeight: number): [number, number] => {\n\treturn isNodeAlignedToBaseline(node) ? [dim.yMax - axisHeight, dim.yMin - axisHeight] : [dim.yMax, dim.yMin];\n};","\nimport { pick, pipe } from 'ramda';\nimport { smallerStyle, Style, withStyle } from \"../../style\";\nimport { BoxNode, Dimensions, FormulaNode, ScriptNode as FormulaScriptNode, ScriptNode, Vector2 } from '../../types';\nimport { layoutByMap, layoutNode } from \"../layout\";\nimport { alignToYAxis, calcBoundingDimensions, center, setPosition } from '../layout-util';\nimport { BoxScriptNode } from './script-layout';\n\n\n\n\n\n\nconst withLimitStyle = (scriptNode: ScriptNode) : ScriptNode => {\n\treturn {\n\t\t...scriptNode,\n\t\tnucleus: {\n\t\t\t...scriptNode.nucleus,\n\t\t\tstyle: {\n\t\t\t\t...(scriptNode.nucleus.style || {}),\n\t\t\t\tfontFamily: \"Size2\"\n\t\t\t}\n\t\t}\n\t};\n};\n\nconst layoutSupLim = (parentStyle: Style, supStyle: Style, nucleusDimensions: Dimensions) => ((sup: FormulaNode) : BoxNode => {\n\tconst supLayouted : BoxNode = pipe(withStyle(supStyle), layoutNode)(sup);\n\tconst supDim = supLayouted.dimensions;\n\tconst spacing = parentStyle.fontSize * 0.2;\n\tconst position : Vector2 = [\n\t\tcenter(supDim.width, nucleusDimensions.width),\n\t\tnucleusDimensions.yMax - supDim.yMin + spacing\n\t];\n\treturn setPosition(position)(supLayouted);\n});\nconst layoutSubLim = (parentStyle: Style, subStyle: Style, nucleusDimensions: Dimensions) => ((sub: FormulaNode) : BoxNode => {\n\tconst subLayouted = pipe(withStyle(subStyle), layoutNode)(sub);\n\tconst subDim = subLayouted.dimensions;\n\tconst spacing = parentStyle.fontSize * 0.2;\n\tconst position : Vector2 = [\n\t\tcenter(subDim.width, nucleusDimensions.width),\n\t\tnucleusDimensions.yMin - subDim.yMax - spacing\n\t];\n\treturn setPosition(position)(subLayouted);\n});\n\nexport const layoutScriptInLimitPosition = (script: FormulaScriptNode) : BoxScriptNode => {\n\tconst { style } = script;\n\tconst nucleusLayouted : BoxNode = pipe(\n\t\twithStyle(style), layoutNode, setPosition([0, 0])\n\t)(script.nucleus);\n\tconst nucleusDim = nucleusLayouted.dimensions;\n\n\tconst scriptStyle = smallerStyle(style);\n\tconst scriptLayouted = pipe(alignToYAxis)({\n\t\tnucleus: nucleusLayouted,\n\t\t...pipe(\n\t\t\tpick([\"sup\", \"sub\"]),\n\t\t\tlayoutByMap({\n\t\t\t\tsup: layoutSupLim(style, scriptStyle, nucleusDim),\n\t\t\t\tsub: layoutSubLim(style, scriptStyle, nucleusDim)\n\t\t\t})\n\t\t)(script)\n\t});\n\tconst dimensions = calcBoundingDimensions(scriptLayouted);\n\treturn {\n\t\ttype: \"script\",\n\t\tstyle, dimensions,\n\t\t...scriptLayouted\n\t};\n};","\nexport class MissingPropertyError extends Error {\n\tconstructor(message: string){\n\t\tsuper(message);\n\t\tthis.name = \"MissingPropertyError\";\n\t}\n}\nexport class WrongPropertyTypeError extends Error {\n    constructor(message: string){\n\t\tsuper(message);\n\t\tthis.name = \"PropertyTypeError\";\n\t}\n}\n\nconst isOfType = (type: string, toCheck: any) : boolean => {\n    if (type === \"array\"){\n        return Array.isArray(toCheck);\n    }\n    return type === typeof(toCheck);\n};\nexport const validateProperties = (propsObject: object) => ((obj: object) => {\n    const keys = Reflect.ownKeys(propsObject) as string[];\n    for (const key of keys){\n        const prop = obj[key];\n        const propType = typeof(prop);\n        const requiredType = propsObject[key];\n        if (propType === \"undefined\"){\n            throw new MissingPropertyError(`missing property ${key} in ` + obj);\n        }\n        if (!isOfType(requiredType, prop)){\n            throw new WrongPropertyTypeError(`property ${key} in ${obj} must be ${requiredType} but is ${propType}`);\n        }\n    }\n});\n\n\nimport { Style } from \"../style\";\nimport { hasFontFamilyUnicode } from \"../font-data/katex-font-util\";\nexport const validateCharInFont = (style: Style, char: string) => {\n\tif (!hasFontFamilyUnicode(style.fontFamily, style.emphasis, char.charCodeAt(0))){\n\t\tthrow `font ${style.fontFamily}-${style.emphasis} does not contain '${char}'`\n\t}\n};","\nimport { assocPath, map, pick, pipe, when, filter } from 'ramda';\nimport { isDisplayStyle, smallerStyle, smallestStyle, Style } from \"../../style\";\nimport { BoxNode, FormulaNode, ScriptNode as FormulaScriptNode } from '../../types';\nimport { getMetricsOfCharNode, isDefined, pickList } from \"../../util/util\";\nimport { BoxCharNode } from '../char-layout';\nimport { validateProperties } from \"../error\";\nimport { layoutByMap, layoutWithStyle } from \"../layout\";\nimport { boxBottom, boxTop, calcBoundingDimensions, moveBox, setPosition } from '../layout-util';\nimport { BoxScriptNode } from './script-layout';\nimport { isNodeChar } from '../../node-types';\n\n\n//todo: scriptspace after sup or sub\n\n//parameters ###\n\nconst defaultRuleThickness = 0.04;\nconst xHeight = 0.45;\n\n\n//how much is the superscript shifted up relative \n//to the top of the (non-char)nucleus box.\n//use negative values to shift down!\nconst supLift = -0.16;\n\n//how much is the subscript shifted up relative\n//to the bottom of the (non-char)nucleus box\nconst subLift = -0.02;//0.12;\n\n\n//fixed y-coordinate for superscript in cramped style (priority 1)\n//is called \"sup3\" in tex\nconst supYCramped = 0.3;\n\n//fixed y-coordinate for superscript in display-style (priority 2)\n//is called \"sup1\" in tex\nconst supYDisplay = 0.42;\n\n//default fixed y-coordinate for superscript (priority 3)\n//is called \"sup2\" in tex\nconst supYDefault = 0.35;\n\n\n//fixed y-coordinate for subscript when superscript is empty\n//is called \"sub1\" in tex\nconst subYSupEmpty = -0.15;\n\n//fixed y-coordinate for subscript when superscript is not empty\n//is called \"sub2\" in tex\nconst subYSupNotEmpty = -0.28;\n\n\n\nconst getSubOrSupStyle = (scriptStyle: Style, subOrSupNode: FormulaNode) : Style => {\n\treturn subOrSupNode.type === \"fraction\" ? smallestStyle(scriptStyle) : smallerStyle(scriptStyle);\n};\n\nconst isBigOperator = (node: BoxNode) => (node.style !== undefined &&\n\tnode.style.fontFamily !== undefined && [\"Size1\", \"Size2\"].includes(node.style.fontFamily));\nconst isDynamicNucleusSize = (nucleus: FormulaNode) => {\n\treturn !isNodeChar(nucleus) || nucleus.type === \"op\";\n};\n\n\nconst getPositionXOfSupAtCharNucleus = (nucleus: BoxCharNode, mainStyle: Style) => {\n\tconst metrics = getMetricsOfCharNode(nucleus);\n\treturn (metrics.width + metrics.italicCorrection) * mainStyle.fontSize;\n};\nconst getFixedSupY = (mainStyle: Style) => {\n    if (mainStyle.cramped) return supYCramped;\n    if (isDisplayStyle(mainStyle)) return supYDisplay;\n    return supYDefault;\n};\n\n\t\nconst layoutSup = (mainStyle: Style, nucleus: FormulaNode, nucleusLayouted: BoxNode) => ((sup: FormulaNode) : BoxNode => {\n\tconst supStyle = getSubOrSupStyle(mainStyle, sup);\n\tconst supLayouted: BoxNode = layoutWithStyle(supStyle)(sup);\n    const mainFontSize = mainStyle.fontSize;\n\tconst positionY = Math.max(\n\t\tisDynamicNucleusSize(nucleus) ? nucleusLayouted.dimensions.yMax + supLift * mainFontSize : 0,\n        getFixedSupY(mainStyle) * mainFontSize,\n        mainFontSize * (xHeight / 4) - supLayouted.dimensions.yMin \n    );\n\n\t//add a small spacing\n\tconst horizontalSpacing = 0;//0.08 * mainFontSize;\n\tconst positionX = (nucleusLayouted.type === \"char\" ? \n\t\tgetPositionXOfSupAtCharNucleus(nucleusLayouted as BoxCharNode, mainStyle) : \n\t\tnucleusLayouted.dimensions.width\n\t) + horizontalSpacing;\n\n\treturn setPosition([positionX, positionY])(supLayouted);\n});\n\nconst layoutSub = (mainStyle: Style, nucleus: FormulaNode, nucleusLayouted: BoxNode, hasSup: boolean) => ((sub: FormulaNode) : BoxNode => {\n    const subLayouted = layoutWithStyle(getSubOrSupStyle(mainStyle, sub))(sub);\n    const mainFontSize = mainStyle.fontSize;\n\tconst targetY = isDynamicNucleusSize(nucleus) ? nucleusLayouted.dimensions.yMin + subLift * mainFontSize : 0;\n    return setPosition([\n        nucleusLayouted.dimensions.width,\n        hasSup ? Math.min(targetY, subYSupNotEmpty * mainFontSize) : \n            Math.min(targetY, subYSupEmpty * mainFontSize, mainFontSize * 0.8 * xHeight - subLayouted.dimensions.yMax)\n\t])(subLayouted);\n});\n\n\ninterface SupSubMap {\n    sup?: BoxNode,\n    sub?: BoxNode\n};\n\n//if the sub- and superscript overlap, move the subscript down to make enough space\nconst depenetrate = (fontSize: number) => ((supSubMap: SupSubMap) : SupSubMap => {\n    const maxSubTop = boxBottom(supSubMap.sup) - (4 * defaultRuleThickness) * fontSize;\n    const overlap = maxSubTop - boxTop(supSubMap.sub);\n    const newSubY = Math.min(0, overlap) + supSubMap.sub.position[1];\n    return assocPath([\"sub\", \"position\", 1], newSubY, supSubMap);\n});\n\n//if the superscript is below 0.8 * xHeight, move both super- and subscript up\nconst adjustAlignment =  (fontSize: number) => ((supSubMap: SupSubMap) : SupSubMap => {\n    const minSupBottom = 0.8 * xHeight * fontSize;\n    const overlap = minSupBottom - boxBottom(supSubMap.sup);\n    const shift = Math.max(0, overlap);\n    return map(moveBox([0, shift]))(supSubMap);\n});\nconst supAndSubNotEmpty = (supSubMap: SupSubMap) : boolean => isDefined(supSubMap.sup) && isDefined(supSubMap.sub);\n\nexport const layoutScriptInNoLimitPosition = (script: FormulaScriptNode) : BoxScriptNode => {\n\tvalidateProperties({\n\t\tnucleus: \"object\"\n\t})(script);\n\n    const { style } = script;\n    const { fontSize } = style;\n\n\tconst { nucleus } = script;\n\tconst nucleusLayouted: BoxNode = pipe(layoutWithStyle(style), setPosition([0, 0]))(nucleus);\n\n    const supAndSubLayouted = pipe(\n        pick([\"sup\", \"sub\"]), \n        layoutByMap({\n            sup: layoutSup(style, nucleus, nucleusLayouted),\n            sub: layoutSub(style, nucleus, nucleusLayouted, script.sup !== undefined)\n        }) as SupSubMap,\n        when(supAndSubNotEmpty, pipe(depenetrate(fontSize), adjustAlignment(fontSize)))\n    )(script) as SupSubMap;\n\n\tconst scriptLayouted = {\n\t\tnucleus: nucleusLayouted,\n\t\t...supAndSubLayouted\n\t};\n\n\tconst dimensions = pipe(\n\t\tpick([\"nucleus\", \"sup\", \"sub\"]), \n\t\tfilter(isDefined),\n\t\tcalcBoundingDimensions\n\t)(scriptLayouted);\n\n\treturn {\n\t\ttype: \"script\", style, dimensions,\n\t\t...scriptLayouted\n\t};\n};","\nexport interface BoxScriptNode extends BoxNode {\n\tnucleus: BoxNode,\n\tsup?: BoxNode,\n\tsub?: BoxNode\n};\n\n\n\nimport { lookUpUnicode } from \"../../font-data/katex-font-util\";\nimport { Style } from \"../../style\";\nimport { BoxNode, CharNode, FormulaNode, ScriptNode as FormulaScriptNode, TextNode } from '../../types';\nimport { layoutScriptInLimitPosition } from './limit-layout';\nimport { layoutScriptInNoLimitPosition } from './no-limit-layout';\nimport { isNodeChar, isNodeText } from \"../../node-types\";\nimport { validateProperties } from \"../error\";\n\n\n\n\nconst isNodeDisplayOperator = (style: Style, node: FormulaNode) : boolean => {\n\treturn isNodeChar(node) && node.type === \"op\" && style.type === \"D\";\n};\n//the integral operator can only have sub- and superscripts in nolimit-position\nconst isDisplayOperatorLimitException = (node: CharNode) => lookUpUnicode(node.value) === 8747 /*integral: ∫*/;\nconst isLimitStyle = (style: Style): boolean => style !== undefined && style.fontFamily !== undefined && style.fontFamily === \"Size2\";\nconst isScriptLimitPosition = (style: Style, nucleus: FormulaNode) : boolean => {\n\treturn isLimitStyle(nucleus.style) ||\n\t\t(isNodeDisplayOperator(style, nucleus) && !isDisplayOperatorLimitException(nucleus as CharNode)) || \n\t\t(isNodeText(nucleus) && (nucleus as TextNode).text === \"lim\");\n};\n\n\n\nexport const layoutScript = (script: FormulaScriptNode) : BoxScriptNode => {\n\tvalidateProperties({\n\t\tnucleus: \"object\"\n\t})(script);\n\n\tconst { nucleus } = script;\n\tconst limitPosition = isScriptLimitPosition(script.style, nucleus);\n\tconst layoutFunc = limitPosition ? layoutScriptInLimitPosition : layoutScriptInNoLimitPosition;\n\treturn layoutFunc(script);\n};","import { incrementStyle, withStyle, isDisplayStyle } from \"../style\";\nimport { layoutNode } from \"./layout\";\nimport { setPosition, getAxisHeight, boxBottom, boxTop } from './layout-util';\nimport { center as calcCentering } from './layout-util';\nimport { pipe } from 'ramda';\n\nimport { FractionNode as FormulaFractionNode, BoxNode, RuleNode } from '../types';\nimport { Style } from '../style';\nimport { max } from \"../util/util\";\nimport { validateProperties } from \"./error\";\n\nexport interface BoxFractionNode extends BoxNode {\n\ttype: \"fraction\",\n\tnumerator: BoxNode,\n\tdenominator: BoxNode,\n\trule: RuleNode\n};\n\n/*\n\tin the texbook the layout of fractions is as follows:\n\tthe numerator and denominator are set to a fixed position (relative to the baseline) \n\twhich depends of the style. \n\tthere is a minimal spacing that also depends on the style.\n\tif the numerator of denominator overflows, shift them accordingly so \n\tthat the spacing is satisfied.\n*/\n\nconst defaultRuleThickness = 0.05;\nconst getRuleThickness = (style: Style) => style.fontSize * defaultRuleThickness;\n\nconst maxTextualHeight = 0.685;\nconst maxTextualDepth = -0.205\nconst axisHeight = 0.25;\n\nconst numeratorYDisplayStyle = axisHeight - maxTextualDepth;\nconst numeratorYInlineStyle = numeratorYDisplayStyle;\n\nconst denominatorYDisplayStyle = axisHeight - maxTextualHeight;\nconst denominatorYInlineStyle = denominatorYDisplayStyle;\n\nconst horizontalPadding = 0.12;\n\nconst calculateNumeratorPositionY = (numerator: BoxNode, fontSize: number, isDisplay: boolean, minBottom: number) : number => {\n\tconst y = (isDisplay ? numeratorYDisplayStyle : numeratorYInlineStyle) * fontSize;\n\tconst bottom = y + numerator.dimensions.yMin;\n\treturn bottom > minBottom ? y : (minBottom - numerator.dimensions.yMin);\n};\nconst calculateDenominatorPositionY = (denom: BoxNode, fontSize: number, isDisplay: boolean, maxTop: number) : number => {\n\tconst y = (isDisplay ? denominatorYDisplayStyle : denominatorYInlineStyle) * fontSize;\n\tconst top = y + denom.dimensions.yMax;\n\treturn top < maxTop ? y : (maxTop - denom.dimensions.yMax);\n};\n\n\nexport const layoutFraction = (fraction: FormulaFractionNode) : BoxFractionNode => {\n\tvalidateProperties({\n\t\tnumerator: \"object\",\n\t\tdenominator: \"object\"\n\t})(fraction);\n\t\n\tconst { style } = fraction;\n\tconst { fontSize } = style;\n\tconst isDisplay = isDisplayStyle(style);\n\tconst subStyle = incrementStyle(style);\n\tlet num: BoxNode = pipe(withStyle(subStyle), layoutNode)(fraction.numerator);\n\tlet denom: BoxNode = pipe(withStyle({ ...subStyle, cramped: true }), layoutNode)(fraction.denominator);\n\n\tconst ruleThickness = getRuleThickness(subStyle);\n\tconst halfRuleThickness = ruleThickness / 2;\n\tconst minSpacing = (isDisplay ? 3 : 1) * ruleThickness;\n\n\tconst axisHeight = getAxisHeight(style);\n\n\tconst numeratorY = calculateNumeratorPositionY(num, fontSize, isDisplay, axisHeight + halfRuleThickness + minSpacing);\n\tconst denomY = calculateDenominatorPositionY(denom, fontSize, isDisplay, axisHeight - halfRuleThickness - minSpacing);\n\n\t//calculate width and center items horizontally\n\tconst maxWidth = max([num, denom].map(n => n.dimensions.width));\n\tconst width = maxWidth + (2 * horizontalPadding * style.fontSize);\n\tconst middleXs = [num, denom].map(n => calcCentering(n.dimensions.width, width));\n\n\tnum = setPosition([middleXs[0], numeratorY])(num);\n\tdenom = setPosition([middleXs[1], denomY])(denom);\n\n\tconst dimensions = {\n\t\twidth,\n\t\tyMax: boxTop(num),\n\t\tyMin: boxBottom(denom)\n\t};\n\n\treturn {\n\t\ttype: \"fraction\", style,\n\t\tnumerator: num,\n\t\tdenominator: denom,\n\t\trule: {\n\t\t\ttype: \"rule\", style,\n\t\t\tposition: [0, axisHeight],\n\t\t\tdimensions: {\n\t\t\t\twidth: dimensions.width,\n\t\t\t\tyMax: halfRuleThickness,\n\t\t\t\tyMin: -halfRuleThickness\n\t\t\t}\n\t\t},\n\t\tdimensions\n\t};\n};","import { identity, map } from 'ramda';\nimport { Vector2 } from './types';\n\nexport interface GlyphPoint {\n\tx: number, \n\ty: number, \n\tonCurve: boolean\n\tlastPointOfContour?: boolean\n};\nexport type Contour = GlyphPoint[];\nexport type Contours = Contour[];\nexport interface Glyph {\n\tname: string,\n\tunicode: number,\n\tindex: number,\n\tgetContours: (() => Contour[]),\n\tgetPath: Function,\n\tadvanceWidth: number,\n\tyMin: number, \n\tyMax: number,\n\txMin: number,\n\txMax: number\n};\nexport interface OpentypeFont {\n\tnameToGlyph: ((name: string) => Glyph),\n\tglyphIndexToName: ((index: number) => string),\n\tglyphs: {\n\t\tglyphs: { [key: string] : Glyph }\n\t}\n};\nexport interface BoundingBox {\n\txMin: number, \n\tyMin: number, \n\txMax: number, \n\tyMax: number\n};\n\n/*\nimport { load as loadOpentype } from 'opentype.js';\n\nexport const loadOpentypeAsync = (url: string): Promise<OpentypeFont> => new Promise((resolve, reject) => {\n\tloadOpentype(url, (err, result) => {\n\t\tif (err) {\n\t\t\treject(err);\n\t\t}\n\t\tresolve((result as unknown) as OpentypeFont);\n\t});\n});\n\nexport const loadFontsAsync = async (fontUrlMap: {[key: string]: string}): Promise<{ [key: string]: OpentypeFont }> => {\n\tconst fontMap = {};\n\tconst keys = Reflect.ownKeys(fontUrlMap) as string[];\n\tfor (const key of keys){\n\t\tfontMap[key] = await loadOpentypeAsync(fontUrlMap[key]);\n\t}\n\treturn fontMap;\n};\n\nexport const getGlyphByName = (font: OpentypeFont, name: string) : Glyph => {\n\tconst glyphs = font.glyphs.glyphs;\n\tconst glyphKey = (Reflect.ownKeys(glyphs) as string[]).find(key => glyphs[key].name === name);\n\treturn glyphs[glyphKey];\n};\nexport const getCharByName = (font: OpentypeFont, name: string) : string => {\n\tconst glyph = getGlyphByName(font, name);\n\treturn String.fromCharCode(glyph.unicode);\n};\nexport const getGlyphIndexByName = (font: OpentypeFont, name: string) : number => getGlyphByName(font, name).index;\nexport const getGlyphByIndex = (font: OpentypeFont, index: number) : Glyph => font.nameToGlyph(font.glyphIndexToName(index));\nexport const getGlyphMetrics = (font: OpentypeFont, glyphName: string) : { width: number, yMin: number, yMax: number } => {\n    const glyph = getGlyphByName(font, glyphName);\n    return {\n        width: glyph.advanceWidth,\n        yMin: glyph.yMin, yMax: glyph.yMax\n    };\n};\n*/\n\ninterface ExplicitGlyphPoint {\n\tpoint: Vector2,\n\tonCurve: boolean\n};\n\nexport const getInterspersedContour = (contour: Contour) : ExplicitGlyphPoint[] => {\n\tlet allPoints : { point: Vector2, onCurve: boolean }[] = [];\n\tfor (let i = 0; i < contour.length; i++) {\n\t\tconst pointData = contour[i];\n\t\tif (i > 0 && !pointData.onCurve && !contour[i - 1].onCurve){\n\t\t\tallPoints.push(getMiddleContourPoint(contour[i - 1], contour[i]));\n\t\t}\n\t\tallPoints.push({\n\t\t\tonCurve: pointData.onCurve,\n\t\t\tpoint: [pointData.x, pointData.y]\n\t\t});\n\t};\n\n\t//last and first point cases:\n\t//onCurve, onCurve: nothing\n\t//offCurve, onCurve: nothing\n\t//onCurve, offCurve: shift array\n\t//offCurve, offCurve: insert middle point at 0\n\n\tconst firstPointData = allPoints[0];\n\tif (!firstPointData.onCurve){\n\t\tconst lastPointData = allPoints[allPoints.length - 1];\n\t\tif (lastPointData.onCurve){\n\t\t\tallPoints = [ lastPointData, ...allPoints.slice(0, allPoints.length - 1) ];\n\t\t}\n\t\telse {\n\t\t\tallPoints = [ \n\t\t\t\t{\n\t\t\t\t\tpoint: getMiddlePoint(lastPointData.point, firstPointData.point),\n\t\t\t\t\tonCurve: true\n\t\t\t\t},\n\t\t\t\t...allPoints \n\t\t\t];\n\t\t}\n\t}\n\n\treturn allPoints;\n};\n\nexport const pathInterspersedContours = (ctx: CanvasRenderingContext2D, contours: ExplicitGlyphPoint[][]) => {\n\tctx.beginPath();\n\tfor (const contour of contours){\n\t\tconst firstPoint = contour[0].point;\n\t\tctx.moveTo(firstPoint[0], firstPoint[1]);\n\t\tfor (let i = 1; i <= contour.length; i++){\n\t\t\tconst pointData = contour[i % contour.length];\n\t\t\tif (pointData.onCurve){\n\t\t\t\tctx.lineTo(pointData.point[0], pointData.point[1]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst quadraticEndPoint = contour[(i + 1) % contour.length];\n\t\t\t\tctx.quadraticCurveTo(pointData.point[0], pointData.point[1], quadraticEndPoint.point[0], quadraticEndPoint.point[1]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const pathContours = (ctx: CanvasRenderingContext2D, contours: Contour[]) => pathInterspersedContours(ctx, contours.map(getInterspersedContour));\n\nconst getMiddlePoint = (point1: Vector2, point2: Vector2) : Vector2 => [\n\t(point1[0] + point2[0]) / 2,\n\t(point1[1] + point2[1]) / 2\n];\nconst getMiddleContourPoint = (a: GlyphPoint, b: GlyphPoint) : { point: Vector2, onCurve: boolean } => {\n\treturn {\n\t\tpoint: [\n\t\t\t(a.x + b.x) / 2,\n\t\t\t(a.y + b.y) / 2\n\t\t],\n\t\tonCurve: true\n\t};\n};\n\ntype Matrix = [number, number, number, number, number, number];\nconst transformPoint = (matrix: Matrix, point: Vector2) : Vector2 => [\n\tmatrix[4] + matrix[0] * point[0] + matrix[2] * point[1],\n\tmatrix[5] + matrix[1] * point[0] + matrix[3] * point[1]\n];\nexport const transformContour = (matrix: Matrix, contour: Contour) : Contour => contour.map(pointData => {\n\tconst transformedPoint = transformPoint(matrix, [pointData.x, pointData.y]);\n\treturn {\n\t\t...pointData,\n\t\tx: transformedPoint[0],\n\t\ty: transformedPoint[1]\n\t};\n});\nexport const transformBbox = (matrix: Matrix, bbox: BoundingBox) : BoundingBox => identity({\n\txMin: bbox.xMin * matrix[0] + matrix[4],\n\txMax: bbox.xMax * matrix[0] + matrix[4],\n\tyMin: bbox.yMin * matrix[3] + matrix[5],\n\tyMax: bbox.yMax * matrix[3] + matrix[5],\n});\nexport const translateContours = (translation: Vector2, contours: Contour[]) : Contour[] => contours.map(contour => contour.map(pointData => {\n\treturn {\n\t\t...pointData,\n\t\tx: pointData.x + translation[0],\n\t\ty: pointData.y + translation[1]\n\t}\n}));\nconst scaleGlyphPoint = (scale: number) => ((glyphPoint: GlyphPoint) : GlyphPoint => identity({ ...glyphPoint, x: glyphPoint.x * scale, y: glyphPoint.y * scale }));\nexport const scaleContours = (scale: number, contours: Contour[]) => map((contour: Contour) => map(scaleGlyphPoint(scale), contour))(contours);\n\nexport const getGlyphContours = (glyph: Glyph) : Contour[] => {\n    //this has to be called to make contours available strangely\n    glyph.getPath();\n    return glyph.getContours();\n};","import { transformContour, transformBbox, BoundingBox, Contour, GlyphPoint } from \"../../opentype\";\nimport { pick } from 'ramda';\nimport { Vector2, ContoursNode, Dimensions } from '../../types';\nimport { lastInArray } from \"../../util/util\";\n\n/*\ndelimiters:\n\nparenthesis (), 40 41\nbraces {}, 123 125\nbrackets [], 91 93\nangle brackets: ⟨⟩, 10216 10217\n\nvertical lines: |, 8739\nceil: 8968 8969\nfloor: 8970 8971\n\n\n*/\n\n\n\ninterface GlyphData {\n    fontId: string,\n    bbox: BoundingBox,\n    contours: Contour[],\n    advanceWidth: number\n};\n\nexport const delimiterFontData : { [unicode: string]: GlyphData[] } = {\n    \"40\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.094,\n                \"yMin\": -0.25,\n                \"xMax\": 0.333,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -0.241\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.315,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.302,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.295,\n                        \"y\": -0.244\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": -0.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.094,\n                        \"y\": -0.062\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.094,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.094,\n                        \"y\": 0.372\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.123,\n                        \"y\": 0.473\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.169,\n                        \"y\": 0.63\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": 0.726\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.281,\n                        \"y\": 0.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.299,\n                        \"y\": 0.747\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.302,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.315,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.327,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.741\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.737\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.322,\n                        \"y\": 0.726\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.167,\n                        \"y\": 0.562\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.167,\n                        \"y\": -0.062\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.322,\n                        \"y\": -0.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": -0.237\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.389\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.152,\n                \"yMin\": -0.349,\n                \"xMax\": 0.422,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.152,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 0.448\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.275,\n                        \"y\": 0.753\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.388,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.416,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 0.844\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.422,\n                        \"y\": 0.841\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 0.837\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.412,\n                        \"y\": 0.826\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.236,\n                        \"y\": 0.628\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.236,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.236,\n                        \"y\": -0.125\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.412,\n                        \"y\": -0.325\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.336\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.422,\n                        \"y\": -0.34\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.343\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.416,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.388,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.275,\n                        \"y\": -0.252\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 0.053\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.458\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.18,\n                \"yMin\": -0.649,\n                \"xMax\": 0.561,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.561,\n                        \"y\": -0.64\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.561,\n                        \"y\": -0.643\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.555,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.527,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": -0.562\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.273,\n                        \"y\": -0.311\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.232,\n                        \"y\": -0.161\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.18,\n                        \"y\": 0.026\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.18,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.18,\n                        \"y\": 0.473\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.232,\n                        \"y\": 0.662\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.316,\n                        \"y\": 0.969\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.527,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.555,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.561,\n                        \"y\": 1.144\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.561,\n                        \"y\": 1.141\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.561,\n                        \"y\": 1.137\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.548,\n                        \"y\": 1.123\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.518,\n                        \"y\": 1.09\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.486,\n                        \"y\": 1.05\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.313,\n                        \"y\": 0.816\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.28,\n                        \"y\": 0.445\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.272,\n                        \"y\": 0.368\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.272,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.272,\n                        \"y\": 0.133\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.28,\n                        \"y\": 0.056\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.318,\n                        \"y\": -0.374\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.548,\n                        \"y\": -0.622\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.561,\n                        \"y\": -0.636\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.597\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.209,\n                \"yMin\": -0.949,\n                \"xMax\": 0.701,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.701,\n                        \"y\": -0.94\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.701,\n                        \"y\": -0.943\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.695,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.664,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.66,\n                        \"y\": -0.945\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.63,\n                        \"y\": -0.921\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.573,\n                        \"y\": -0.86\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.263,\n                        \"y\": -0.519\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.216,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.209,\n                        \"y\": 0.133\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.209,\n                        \"y\": 0.367\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.216,\n                        \"y\": 0.449\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.263,\n                        \"y\": 1.02\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.573,\n                        \"y\": 1.361\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.63,\n                        \"y\": 1.422\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.66,\n                        \"y\": 1.446\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.664,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.695,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.701,\n                        \"y\": 1.444\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.701,\n                        \"y\": 1.441\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.701,\n                        \"y\": 1.437\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.69,\n                        \"y\": 1.425\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.495,\n                        \"y\": 1.223\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.306,\n                        \"y\": 0.645\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.306,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.306,\n                        \"y\": -0.067\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.37,\n                        \"y\": -0.323\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.462,\n                        \"y\": -0.687\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.69,\n                        \"y\": -0.924\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.701,\n                        \"y\": -0.936\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.736\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.237,\n                \"yMin\": -1.249,\n                \"xMax\": 0.758,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": -1.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.752,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.736,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.718,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.717,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.711,\n                        \"y\": -1.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.672,\n                        \"y\": -1.199\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.237,\n                        \"y\": -0.706\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.237,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.237,\n                        \"y\": 1.206\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.672,\n                        \"y\": 1.7\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.697,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.716,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.718,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.735,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.752,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": 1.744\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": 1.738\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.744,\n                        \"y\": 1.719\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.56,\n                        \"y\": 1.489\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.463,\n                        \"y\": 1.176\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.348,\n                        \"y\": 0.802\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.348,\n                        \"y\": -0.301\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.463,\n                        \"y\": -0.675\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.56,\n                        \"y\": -0.988\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.744,\n                        \"y\": -1.218\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.792\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.237,\n                \"yMin\": -1.249,\n                \"xMax\": 0.758,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": -1.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.752,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.736,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.718,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.717,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.711,\n                        \"y\": -1.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.672,\n                        \"y\": -1.199\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.237,\n                        \"y\": -0.706\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.237,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.237,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.237,\n                        \"y\": 1.206\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.672,\n                        \"y\": 1.7\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.697,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.716,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.718,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.735,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.752,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": 1.744\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.758,\n                        \"y\": 1.738\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.744,\n                        \"y\": 1.719\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.56,\n                        \"y\": 1.489\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.463,\n                        \"y\": 1.176\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.348,\n                        \"y\": 0.802\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.348,\n                        \"y\": -0.301\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.463,\n                        \"y\": -0.675\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.56,\n                        \"y\": -0.988\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.744,\n                        \"y\": -1.218\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.792\n        }\n    ],\n    \"41\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.055,\n                \"yMin\": -0.25,\n                \"xMax\": 0.294,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.06,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.064,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.069,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.086,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.093,\n                        \"y\": 0.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.114,\n                        \"y\": 0.726\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.294,\n                        \"y\": 0.562\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.294,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.294,\n                        \"y\": 0.127\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.265,\n                        \"y\": 0.028\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.219,\n                        \"y\": -0.13\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.114,\n                        \"y\": -0.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.107,\n                        \"y\": -0.232\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.089,\n                        \"y\": -0.247\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.086,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.062,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.055,\n                        \"y\": -0.246\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.055,\n                        \"y\": -0.238\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.056,\n                        \"y\": -0.237\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.066,\n                        \"y\": -0.225\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.221,\n                        \"y\": -0.064\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.221,\n                        \"y\": 0.564\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.066,\n                        \"y\": 0.725\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.056,\n                        \"y\": 0.737\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.055,\n                        \"y\": 0.738\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.055,\n                        \"y\": 0.746\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.389\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.035,\n                \"yMin\": -0.349,\n                \"xMax\": 0.305,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.305,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.305,\n                        \"y\": 0.052\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.183,\n                        \"y\": -0.252\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.069,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.043,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.035,\n                        \"y\": -0.345\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.035,\n                        \"y\": -0.338\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.037,\n                        \"y\": -0.333\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.047,\n                        \"y\": -0.322\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.221,\n                        \"y\": -0.126\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.221,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.221,\n                        \"y\": 0.627\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.047,\n                        \"y\": 0.823\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.037,\n                        \"y\": 0.834\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.035,\n                        \"y\": 0.839\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.035,\n                        \"y\": 0.847\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.043,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.069,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.182,\n                        \"y\": 0.753\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.305,\n                        \"y\": 0.448\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.458\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.035,\n                \"yMin\": -0.649,\n                \"xMax\": 0.416,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.035,\n                        \"y\": 1.138\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.035,\n                        \"y\": 1.146\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.043,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.069,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.171,\n                        \"y\": 1.063\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.323,\n                        \"y\": 0.812\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.364,\n                        \"y\": 0.662\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.416,\n                        \"y\": 0.475\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.416,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.416,\n                        \"y\": 0.028\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.364,\n                        \"y\": -0.161\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.28,\n                        \"y\": -0.468\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.069,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.042,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.035,\n                        \"y\": -0.645\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.035,\n                        \"y\": -0.637\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.036,\n                        \"y\": -0.636\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.048,\n                        \"y\": -0.622\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.278,\n                        \"y\": -0.374\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.316,\n                        \"y\": 0.056\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": 0.133\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.324,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": 0.368\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.316,\n                        \"y\": 0.445\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.283,\n                        \"y\": 0.816\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.11,\n                        \"y\": 1.05\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.078,\n                        \"y\": 1.091\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.048,\n                        \"y\": 1.123\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.036,\n                        \"y\": 1.137\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.597\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.034,\n                \"yMin\": -0.949,\n                \"xMax\": 0.526,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.428,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.428,\n                        \"y\": 1.044\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.034,\n                        \"y\": 1.438\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.034,\n                        \"y\": 1.446\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.042,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.071,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.075,\n                        \"y\": 1.446\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": 1.422\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.162,\n                        \"y\": 1.361\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.472,\n                        \"y\": 1.02\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.519,\n                        \"y\": 0.449\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.526,\n                        \"y\": 0.367\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.526,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.526,\n                        \"y\": 0.134\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.519,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.472,\n                        \"y\": -0.519\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.162,\n                        \"y\": -0.86\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": -0.921\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.075,\n                        \"y\": -0.945\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.071,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.041,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.034,\n                        \"y\": -0.945\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.034,\n                        \"y\": -0.937\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.081,\n                        \"y\": -0.89\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.14,\n                        \"y\": -0.813\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.428,\n                        \"y\": -0.429\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.736\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.033,\n                \"yMin\": -1.249,\n                \"xMax\": 0.554,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.033,\n                        \"y\": 1.741\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.052,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.06,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.073,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.08,\n                        \"y\": 1.746\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": 1.7\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": 1.207\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": -0.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": -1.199\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.08,\n                        \"y\": -1.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.068,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.061,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.033,\n                        \"y\": -1.239\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": -1.236\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": -1.215\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.218,\n                        \"y\": -1.006\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.311,\n                        \"y\": -0.727\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.443,\n                        \"y\": -0.335\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.443,\n                        \"y\": 0.836\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.311,\n                        \"y\": 1.228\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.218,\n                        \"y\": 1.507\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": 1.716\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": 1.737\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.792\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.033,\n                \"yMin\": -1.249,\n                \"xMax\": 0.554,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.033,\n                        \"y\": 1.741\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.052,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.06,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.073,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.08,\n                        \"y\": 1.746\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": 1.7\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": 1.207\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.554,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.554,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": -0.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": -1.199\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.08,\n                        \"y\": -1.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.074,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.068,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.061,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.056,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.033,\n                        \"y\": -1.239\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": -1.236\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": -1.215\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.218,\n                        \"y\": -1.006\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.311,\n                        \"y\": -0.727\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.443,\n                        \"y\": -0.335\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.443,\n                        \"y\": 0.836\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.311,\n                        \"y\": 1.228\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.218,\n                        \"y\": 1.507\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.05,\n                        \"y\": 1.716\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.033,\n                        \"y\": 1.737\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.792\n        }\n\t],\n\t\n    \"91\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.118,\n                \"yMin\": -0.25,\n                \"xMax\": 0.255,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.118,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.118,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.255,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.255,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.158,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.158,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.255,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.255,\n                        \"y\": -0.25\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.278\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.202,\n                \"yMin\": -0.349,\n                \"xMax\": 0.394,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": -0.349\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.417\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.224,\n                \"yMin\": -0.649,\n                \"xMax\": 0.455,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.455,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.455,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.455,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.455,\n                        \"y\": -0.649\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.247,\n                \"yMin\": -0.949,\n                \"xMax\": 0.516,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.247,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.247,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.516,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.516,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.516,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.516,\n                        \"y\": -0.949\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.269,\n                \"yMin\": -1.249,\n                \"xMax\": 0.577,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.577,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.577,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.577,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.577,\n                        \"y\": -1.249\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        }\n    ],\n    \"93\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.022,\n                \"yMin\": -0.25,\n                \"xMax\": 0.159,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.159,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.159,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": 0.71\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.278\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.022,\n                \"yMin\": -0.349,\n                \"xMax\": 0.214,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": 0.81\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.417\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.016,\n                \"yMin\": -0.649,\n                \"xMax\": 0.247,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.247,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.247,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.196,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.196,\n                        \"y\": 1.099\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.011,\n                \"yMin\": -0.949,\n                \"xMax\": 0.28,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.28,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.28,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.218,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.218,\n                        \"y\": 1.388\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.005,\n                \"yMin\": -1.249,\n                \"xMax\": 0.313,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.313,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.313,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.24,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.24,\n                        \"y\": 1.677\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        }\n\t],\n\t\n    \"123\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.065,\n                \"yMin\": -0.25,\n                \"xMax\": 0.434,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.434,\n                        \"y\": -0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": -0.244\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.428,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.334,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.225,\n                        \"y\": -0.199\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.212,\n                        \"y\": -0.145\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.21,\n                        \"y\": -0.138\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.209,\n                        \"y\": 0.021\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.208,\n                        \"y\": 0.142\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.204,\n                        \"y\": 0.153\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.203,\n                        \"y\": 0.154\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": 0.155\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.191,\n                        \"y\": 0.186\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.082,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.071,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": 0.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.071,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.082,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.191,\n                        \"y\": 0.314\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": 0.345\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.207,\n                        \"y\": 0.357\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.208,\n                        \"y\": 0.383\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0.501\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.21,\n                        \"y\": 0.638\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.212,\n                        \"y\": 0.645\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.22,\n                        \"y\": 0.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.244,\n                        \"y\": 0.698\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.27,\n                        \"y\": 0.724\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.324,\n                        \"y\": 0.74\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.361,\n                        \"y\": 0.748\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.377,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.379,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.402,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.408,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.428,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": 0.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.434,\n                        \"y\": 0.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": 0.719\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.431,\n                        \"y\": 0.716\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.429,\n                        \"y\": 0.713\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.415,\n                        \"y\": 0.713\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.359,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.322,\n                        \"y\": 0.681\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.302,\n                        \"y\": 0.666\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": 0.647\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.291,\n                        \"y\": 0.634\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.291,\n                        \"y\": 0.499\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.291,\n                        \"y\": 0.369\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.29,\n                        \"y\": 0.363\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.28,\n                        \"y\": 0.285\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.17,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.221,\n                        \"y\": 0.232\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.285,\n                        \"y\": 0.18\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.29,\n                        \"y\": 0.137\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.291,\n                        \"y\": 0.131\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.291,\n                        \"y\": 0.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.291,\n                        \"y\": -0.134\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": -0.147\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.306,\n                        \"y\": -0.175\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.374,\n                        \"y\": -0.211\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.415,\n                        \"y\": -0.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.429,\n                        \"y\": -0.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.431,\n                        \"y\": -0.216\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": -0.219\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.5\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.105,\n                \"yMin\": -0.349,\n                \"xMax\": 0.477,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": -0.343\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.471,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.444,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.407,\n                        \"y\": -0.338\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.309,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": -0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.258,\n                        \"y\": -0.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.25,\n                        \"y\": -0.212\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": -0.051\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": -0.027\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": 0.012\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.248,\n                        \"y\": 0.118\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.244,\n                        \"y\": 0.128\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.243,\n                        \"y\": 0.129\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": 0.13\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.224,\n                        \"y\": 0.177\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.162,\n                        \"y\": 0.21\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": 0.224\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.121,\n                        \"y\": 0.228\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.109,\n                        \"y\": 0.232\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": 0.238\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.105,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.109,\n                        \"y\": 0.268\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.121,\n                        \"y\": 0.273\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": 0.277\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.162,\n                        \"y\": 0.291\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.224,\n                        \"y\": 0.324\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": 0.371\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.243,\n                        \"y\": 0.372\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.244,\n                        \"y\": 0.373\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.248,\n                        \"y\": 0.384\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": 0.469\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": 0.475\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": 0.489\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": 0.528\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": 0.552\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.25,\n                        \"y\": 0.714\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.258,\n                        \"y\": 0.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": 0.764\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.312,\n                        \"y\": 0.813\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.422,\n                        \"y\": 0.843\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.44,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.441,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.445,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.449,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.455,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.457,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.471,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": 0.844\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": 0.83\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.477,\n                        \"y\": 0.812\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.469,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": 0.798\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.349,\n                        \"y\": 0.752\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.338,\n                        \"y\": 0.724\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.55\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.395\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.389\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.326,\n                        \"y\": 0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.295,\n                        \"y\": 0.318\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.257,\n                        \"y\": 0.28\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.181,\n                        \"y\": 0.255\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.169,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.184,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.275,\n                        \"y\": 0.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": 0.167\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.327,\n                        \"y\": 0.14\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.112\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.106\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -0.049\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": -0.209\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.338,\n                        \"y\": -0.223\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.349,\n                        \"y\": -0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": -0.297\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.469,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.477,\n                        \"y\": -0.311\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": -0.329\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.119,\n                \"yMin\": -0.649,\n                \"xMax\": 0.547,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": -0.643\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.541,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.528,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.515,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.503,\n                        \"y\": -0.645\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": -0.582\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.293,\n                        \"y\": -0.466\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.289,\n                        \"y\": -0.449\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.288,\n                        \"y\": -0.407\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.287,\n                        \"y\": -0.2\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.286,\n                        \"y\": 0.042\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.284,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.279,\n                        \"y\": 0.077\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.272,\n                        \"y\": 0.092\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.238,\n                        \"y\": 0.177\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": 0.228\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": 0.238\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": 0.262\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": 0.273\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.238,\n                        \"y\": 0.324\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.272,\n                        \"y\": 0.409\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.279,\n                        \"y\": 0.424\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.284,\n                        \"y\": 0.449\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.286,\n                        \"y\": 0.46\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.287,\n                        \"y\": 0.701\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.287,\n                        \"y\": 0.737\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.287,\n                        \"y\": 0.794\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.288,\n                        \"y\": 0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.292,\n                        \"y\": 0.963\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.293,\n                        \"y\": 0.966\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.293,\n                        \"y\": 0.967\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.314,\n                        \"y\": 1.044\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.406,\n                        \"y\": 1.101\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.449,\n                        \"y\": 1.126\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.508,\n                        \"y\": 1.148\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.516,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.527,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.541,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": 1.144\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": 1.13\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.547,\n                        \"y\": 1.117\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.544,\n                        \"y\": 1.112\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.536,\n                        \"y\": 1.109\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.498,\n                        \"y\": 1.094\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.467,\n                        \"y\": 1.071\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.396,\n                        \"y\": 1.021\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.381,\n                        \"y\": 0.95\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.379,\n                        \"y\": 0.94\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": 0.699\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": 0.657\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": 0.594\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.377,\n                        \"y\": 0.452\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.374,\n                        \"y\": 0.438\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.373,\n                        \"y\": 0.437\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.373,\n                        \"y\": 0.436\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.35,\n                        \"y\": 0.348\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": 0.282\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.192,\n                        \"y\": 0.257\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.186,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.176,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.188,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.343,\n                        \"y\": 0.183\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.373,\n                        \"y\": 0.065\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.373,\n                        \"y\": 0.064\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.374,\n                        \"y\": 0.063\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.377,\n                        \"y\": 0.049\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": -0.093\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": -0.156\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": -0.198\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.379,\n                        \"y\": -0.438\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.381,\n                        \"y\": -0.449\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.396,\n                        \"y\": -0.52\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.467,\n                        \"y\": -0.57\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.498,\n                        \"y\": -0.593\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.536,\n                        \"y\": -0.608\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.544,\n                        \"y\": -0.611\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.547,\n                        \"y\": -0.616\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": -0.629\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.667\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.13,\n                \"yMin\": -0.949,\n                \"xMax\": 0.618,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.618,\n                        \"y\": -0.943\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.612,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.582,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.568,\n                        \"y\": -0.943\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.472,\n                        \"y\": -0.903\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.35,\n                        \"y\": -0.778\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": -0.703\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.327,\n                        \"y\": -0.682\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.326,\n                        \"y\": -0.623\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.325,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": -0.028\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.323,\n                        \"y\": -0.018\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.311,\n                        \"y\": 0.06\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.213,\n                        \"y\": 0.189\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 0.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.132,\n                        \"y\": 0.233\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.131,\n                        \"y\": 0.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.13,\n                        \"y\": 0.24\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.13,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.132,\n                        \"y\": 0.268\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.136,\n                        \"y\": 0.271\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 0.275\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.207,\n                        \"y\": 0.308\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.256,\n                        \"y\": 0.367\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.31,\n                        \"y\": 0.436\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.323,\n                        \"y\": 0.519\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": 0.529\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.325,\n                        \"y\": 0.851\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.326,\n                        \"y\": 1.124\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.327,\n                        \"y\": 1.184\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 1.205\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.369,\n                        \"y\": 1.358\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.566,\n                        \"y\": 1.443\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.582,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.612,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.618,\n                        \"y\": 1.444\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.618,\n                        \"y\": 1.429\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.618,\n                        \"y\": 1.413\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.616,\n                        \"y\": 1.411\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.616,\n                        \"y\": 1.409\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.606,\n                        \"y\": 1.405\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.57,\n                        \"y\": 1.387\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.544,\n                        \"y\": 1.367\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.449,\n                        \"y\": 1.294\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.429,\n                        \"y\": 1.2\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": 1.18\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.424,\n                        \"y\": 1.124\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.423,\n                        \"y\": 0.851\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 0.579\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.421,\n                        \"y\": 0.519\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.416,\n                        \"y\": 0.498\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.401,\n                        \"y\": 0.429\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.3,\n                        \"y\": 0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.221,\n                        \"y\": 0.267\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.218,\n                        \"y\": 0.265\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.206,\n                        \"y\": 0.259\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.199,\n                        \"y\": 0.255\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.197,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.188,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.205,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.29,\n                        \"y\": 0.2\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.4,\n                        \"y\": 0.075\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.416,\n                        \"y\": 0.003\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.421,\n                        \"y\": -0.018\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.078\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.423,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.423,\n                        \"y\": -0.397\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.423,\n                        \"y\": -0.472\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.424,\n                        \"y\": -0.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.428,\n                        \"y\": -0.694\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.429,\n                        \"y\": -0.697\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.429,\n                        \"y\": -0.699\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.449,\n                        \"y\": -0.793\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.544,\n                        \"y\": -0.866\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.57,\n                        \"y\": -0.886\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.606,\n                        \"y\": -0.904\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.616,\n                        \"y\": -0.908\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.616,\n                        \"y\": -0.91\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.618,\n                        \"y\": -0.912\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.618,\n                        \"y\": -0.928\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.75\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.144,\n                \"yMin\": -1.249,\n                \"xMax\": 0.661,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.655,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.622,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.604,\n                        \"y\": -1.24\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.48,\n                        \"y\": -1.179\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": -1.075\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.361,\n                        \"y\": -1.001\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": -0.909\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": -0.098\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.343,\n                        \"y\": -0.082\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.34,\n                        \"y\": -0.052\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": -0.024\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.313,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.222,\n                        \"y\": 0.181\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.157,\n                        \"y\": 0.223\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.155,\n                        \"y\": 0.225\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.149,\n                        \"y\": 0.229\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.148,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.145,\n                        \"y\": 0.234\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.239\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.259\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.264\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 0.267\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.149,\n                        \"y\": 0.271\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.151,\n                        \"y\": 0.273\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.155,\n                        \"y\": 0.277\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.157,\n                        \"y\": 0.278\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.222,\n                        \"y\": 0.32\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.313,\n                        \"y\": 0.448\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.525\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.34,\n                        \"y\": 0.553\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.343,\n                        \"y\": 0.583\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": 0.6\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": 1.41\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.355,\n                        \"y\": 1.459\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.371,\n                        \"y\": 1.5\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.413,\n                        \"y\": 1.61\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.52,\n                        \"y\": 1.689\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.553,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.6,\n                        \"y\": 1.739\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.622,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.655,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.727\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.715\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 1.706\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.651,\n                        \"y\": 1.702\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.602,\n                        \"y\": 1.675\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.519,\n                        \"y\": 1.585\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.495,\n                        \"y\": 1.533\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.465,\n                        \"y\": 1.47\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.459,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 1.389\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 0.614\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.457,\n                        \"y\": 0.605\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": 0.477\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": 0.37\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.281,\n                        \"y\": 0.29\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.261,\n                        \"y\": 0.215\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.301,\n                        \"y\": 0.185\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.325,\n                        \"y\": 0.165\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": 0.131\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": 0.024\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.457,\n                        \"y\": -0.104\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.113\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.888\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.459,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.469,\n                        \"y\": -1.017\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.543,\n                        \"y\": -1.108\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.569,\n                        \"y\": -1.141\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.602,\n                        \"y\": -1.167\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.625,\n                        \"y\": -1.187\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.651,\n                        \"y\": -1.201\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": -1.205\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.214\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.226\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.144,\n                \"yMin\": -1.249,\n                \"xMax\": 0.661,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.655,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.622,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.604,\n                        \"y\": -1.24\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.48,\n                        \"y\": -1.179\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": -1.075\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.361,\n                        \"y\": -1.001\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": -0.909\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": -0.098\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.343,\n                        \"y\": -0.082\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.34,\n                        \"y\": -0.052\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": -0.024\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.313,\n                        \"y\": 0.053\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.222,\n                        \"y\": 0.181\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.157,\n                        \"y\": 0.223\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.155,\n                        \"y\": 0.225\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.149,\n                        \"y\": 0.229\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.148,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.145,\n                        \"y\": 0.234\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.239\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.259\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 0.264\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 0.267\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.149,\n                        \"y\": 0.271\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.151,\n                        \"y\": 0.273\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.155,\n                        \"y\": 0.277\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.157,\n                        \"y\": 0.278\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.222,\n                        \"y\": 0.32\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.313,\n                        \"y\": 0.448\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.525\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.34,\n                        \"y\": 0.553\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.343,\n                        \"y\": 0.583\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": 0.6\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.348,\n                        \"y\": 1.41\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.355,\n                        \"y\": 1.459\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.371,\n                        \"y\": 1.5\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.413,\n                        \"y\": 1.61\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.52,\n                        \"y\": 1.689\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.553,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.6,\n                        \"y\": 1.739\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.622,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.655,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.744\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.727\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": 1.715\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 1.706\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.651,\n                        \"y\": 1.702\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.602,\n                        \"y\": 1.675\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.519,\n                        \"y\": 1.585\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.495,\n                        \"y\": 1.533\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.465,\n                        \"y\": 1.47\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.459,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 1.389\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 0.614\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.457,\n                        \"y\": 0.605\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": 0.477\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": 0.37\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.281,\n                        \"y\": 0.29\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.261,\n                        \"y\": 0.215\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.301,\n                        \"y\": 0.185\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.325,\n                        \"y\": 0.165\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": 0.131\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": 0.024\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.457,\n                        \"y\": -0.104\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.113\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.888\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.459,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.469,\n                        \"y\": -1.017\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.543,\n                        \"y\": -1.108\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.569,\n                        \"y\": -1.141\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.602,\n                        \"y\": -1.167\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.625,\n                        \"y\": -1.187\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.651,\n                        \"y\": -1.201\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": -1.205\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.214\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.661,\n                        \"y\": -1.226\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        }\n    ],\n    \"125\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.065,\n                \"yMin\": -0.25,\n                \"xMax\": 0.434,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.065,\n                        \"y\": 0.731\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": 0.744\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.069,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.079,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.088,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.168,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.274,\n                        \"y\": 0.696\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.288,\n                        \"y\": 0.645\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.291,\n                        \"y\": 0.636\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.292,\n                        \"y\": 0.365\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.293,\n                        \"y\": 0.357\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.303,\n                        \"y\": 0.321\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.373,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.417,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.428,\n                        \"y\": 0.269\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.434,\n                        \"y\": 0.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.428,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.417,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.309,\n                        \"y\": 0.187\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.298,\n                        \"y\": 0.157\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.293,\n                        \"y\": 0.144\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.292,\n                        \"y\": 0.117\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.291,\n                        \"y\": 0\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.29,\n                        \"y\": -0.138\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.288,\n                        \"y\": -0.145\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.28,\n                        \"y\": -0.177\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.256,\n                        \"y\": -0.198\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.202,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.089,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.078,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.07,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": -0.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.065,\n                        \"y\": -0.23\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": -0.219\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.069,\n                        \"y\": -0.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.077,\n                        \"y\": -0.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": -0.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.197,\n                        \"y\": -0.171\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.207,\n                        \"y\": -0.139\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.208,\n                        \"y\": -0.134\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0.003\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.21,\n                        \"y\": 0.139\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.23,\n                        \"y\": 0.223\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.33,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.297,\n                        \"y\": 0.261\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.28,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.225,\n                        \"y\": 0.303\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.212,\n                        \"y\": 0.352\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.21,\n                        \"y\": 0.362\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.209,\n                        \"y\": 0.498\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.208,\n                        \"y\": 0.635\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.207,\n                        \"y\": 0.64\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.197,\n                        \"y\": 0.672\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": 0.713\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.077,\n                        \"y\": 0.713\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.069,\n                        \"y\": 0.713\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.065,\n                        \"y\": 0.719\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.5\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.105,\n                \"yMin\": -0.349,\n                \"xMax\": 0.477,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.11,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.115,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.12,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.125,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.138,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.175,\n                        \"y\": 0.839\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.273,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": 0.764\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": 0.747\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.714\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.552\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.528\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.489\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.334,\n                        \"y\": 0.383\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.338,\n                        \"y\": 0.373\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.339,\n                        \"y\": 0.372\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.339,\n                        \"y\": 0.371\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.351,\n                        \"y\": 0.34\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": 0.284\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.469,\n                        \"y\": 0.271\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.477,\n                        \"y\": 0.268\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.477,\n                        \"y\": 0.233\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.469,\n                        \"y\": 0.23\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.425,\n                        \"y\": 0.217\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.351,\n                        \"y\": 0.161\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.339,\n                        \"y\": 0.13\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.339,\n                        \"y\": 0.129\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.338,\n                        \"y\": 0.128\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.334,\n                        \"y\": 0.117\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.032\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.026\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.012\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": -0.027\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -0.051\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": -0.212\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": -0.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": -0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.273,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.175,\n                        \"y\": -0.338\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.139,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.111,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": -0.343\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.105,\n                        \"y\": -0.329\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": -0.316\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.106,\n                        \"y\": -0.314\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.109,\n                        \"y\": -0.31\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.13,\n                        \"y\": -0.304\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.192,\n                        \"y\": -0.284\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.222,\n                        \"y\": -0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.242,\n                        \"y\": -0.234\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.248,\n                        \"y\": -0.209\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": -0.203\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": -0.049\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": 0.106\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.25,\n                        \"y\": 0.112\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.255,\n                        \"y\": 0.14\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": 0.167\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.307,\n                        \"y\": 0.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.398,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.413,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.401,\n                        \"y\": 0.255\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.309,\n                        \"y\": 0.286\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": 0.334\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.255,\n                        \"y\": 0.361\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.25,\n                        \"y\": 0.389\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": 0.395\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.249,\n                        \"y\": 0.55\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.249,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.244,\n                        \"y\": 0.724\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.224,\n                        \"y\": 0.774\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.13,\n                        \"y\": 0.805\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": 0.806\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": 0.808\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.113,\n                        \"y\": 0.811\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.112,\n                        \"y\": 0.811\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": 0.813\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.105,\n                        \"y\": 0.83\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.105,\n                        \"y\": 0.845\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.119,\n                \"yMin\": -0.649,\n                \"xMax\": 0.547,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": 1.13\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": 1.145\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.124,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.139,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.165,\n                        \"y\": 1.145\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.227,\n                        \"y\": 1.123\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": 1.092\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.354,\n                        \"y\": 1.037\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.373,\n                        \"y\": 0.964\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": 0.942\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": 0.702\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": 0.469\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.379,\n                        \"y\": 0.462\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.386,\n                        \"y\": 0.394\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.439,\n                        \"y\": 0.339\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.482,\n                        \"y\": 0.296\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.535,\n                        \"y\": 0.272\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.544,\n                        \"y\": 0.268\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.547,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.547,\n                        \"y\": 0.238\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.544,\n                        \"y\": 0.233\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.535,\n                        \"y\": 0.229\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.503,\n                        \"y\": 0.214\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.477,\n                        \"y\": 0.194\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.39,\n                        \"y\": 0.129\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.379,\n                        \"y\": 0.039\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": 0.032\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.378,\n                        \"y\": -0.201\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.378,\n                        \"y\": -0.441\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.373,\n                        \"y\": -0.463\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.354,\n                        \"y\": -0.536\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.273,\n                        \"y\": -0.591\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.227,\n                        \"y\": -0.622\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.165,\n                        \"y\": -0.644\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.139,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.125,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": -0.643\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": -0.629\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": -0.62\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": -0.611\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.127,\n                        \"y\": -0.608\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.139,\n                        \"y\": -0.604\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.143,\n                        \"y\": -0.602\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.195,\n                        \"y\": -0.579\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.275,\n                        \"y\": -0.498\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.285,\n                        \"y\": -0.447\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.286,\n                        \"y\": -0.435\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.288,\n                        \"y\": 0.038\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.289,\n                        \"y\": 0.051\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.301,\n                        \"y\": 0.101\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.347,\n                        \"y\": 0.166\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.39,\n                        \"y\": 0.197\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.431,\n                        \"y\": 0.227\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.478,\n                        \"y\": 0.246\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.489,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.48,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.366,\n                        \"y\": 0.303\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.321,\n                        \"y\": 0.374\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.302,\n                        \"y\": 0.402\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.293,\n                        \"y\": 0.434\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.289,\n                        \"y\": 0.451\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.288,\n                        \"y\": 0.493\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.287,\n                        \"y\": 0.699\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.286,\n                        \"y\": 0.941\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.285,\n                        \"y\": 0.948\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.275,\n                        \"y\": 0.999\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.195,\n                        \"y\": 1.08\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.143,\n                        \"y\": 1.103\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.139,\n                        \"y\": 1.105\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.127,\n                        \"y\": 1.109\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.123,\n                        \"y\": 1.112\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.119,\n                        \"y\": 1.121\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.667\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.131,\n                \"yMin\": -0.949,\n                \"xMax\": 0.618,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": 1.414\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": 1.444\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.136,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.148,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.167,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.182,\n                        \"y\": 1.444\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.276,\n                        \"y\": 1.404\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.397,\n                        \"y\": 1.281\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.415,\n                        \"y\": 1.207\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.421,\n                        \"y\": 1.184\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 1.123\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.423,\n                        \"y\": 0.851\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.424,\n                        \"y\": 0.531\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.426,\n                        \"y\": 0.517\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.443,\n                        \"y\": 0.399\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.547,\n                        \"y\": 0.313\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.584,\n                        \"y\": 0.285\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.608,\n                        \"y\": 0.274\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.615,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.618,\n                        \"y\": 0.264\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.618,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.618,\n                        \"y\": 0.241\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.617,\n                        \"y\": 0.234\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.613,\n                        \"y\": 0.23\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.608,\n                        \"y\": 0.227\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.55,\n                        \"y\": 0.198\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.508,\n                        \"y\": 0.151\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.441,\n                        \"y\": 0.078\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.426,\n                        \"y\": -0.015\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.424,\n                        \"y\": -0.029\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.423,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.622\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.421,\n                        \"y\": -0.683\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.415,\n                        \"y\": -0.706\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.397,\n                        \"y\": -0.78\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.276,\n                        \"y\": -0.903\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.182,\n                        \"y\": -0.943\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.167,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.137,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": -0.945\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.131,\n                        \"y\": -0.935\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.131,\n                        \"y\": -0.928\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.131,\n                        \"y\": -0.922\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.131,\n                        \"y\": -0.913\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.135,\n                        \"y\": -0.907\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.142,\n                        \"y\": -0.904\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": -0.903\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.148,\n                        \"y\": -0.902\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.298,\n                        \"y\": -0.82\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.323,\n                        \"y\": -0.68\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": -0.663\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.326,\n                        \"y\": -0.035\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.327,\n                        \"y\": -0.019\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.34,\n                        \"y\": 0.06\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.392,\n                        \"y\": 0.125\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.415,\n                        \"y\": 0.154\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.452,\n                        \"y\": 0.184\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.493,\n                        \"y\": 0.216\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.541,\n                        \"y\": 0.241\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.561,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.541,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.354,\n                        \"y\": 0.357\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.327,\n                        \"y\": 0.52\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.326,\n                        \"y\": 0.537\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.324,\n                        \"y\": 1.164\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.323,\n                        \"y\": 1.181\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.298,\n                        \"y\": 1.321\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.148,\n                        \"y\": 1.403\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.134,\n                        \"y\": 1.409\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.132,\n                        \"y\": 1.413\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.75\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.144,\n                \"yMin\": -1.249,\n                \"xMax\": 0.661,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 1.727\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 1.743\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.147,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.156,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.167,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.183,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": 1.74\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.247,\n                        \"y\": 1.718\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.285,\n                        \"y\": 1.689\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.414,\n                        \"y\": 1.593\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.447,\n                        \"y\": 1.456\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.453,\n                        \"y\": 1.436\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.456,\n                        \"y\": 1.41\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.459,\n                        \"y\": 0.661\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.46,\n                        \"y\": 0.587\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.465,\n                        \"y\": 0.558\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.479,\n                        \"y\": 0.471\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.577,\n                        \"y\": 0.322\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.649,\n                        \"y\": 0.277\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.651,\n                        \"y\": 0.275\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.659,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.258\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.659,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.652,\n                        \"y\": 0.226\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.649,\n                        \"y\": 0.224\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.577,\n                        \"y\": 0.179\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.479,\n                        \"y\": 0.03\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.465,\n                        \"y\": -0.057\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.46,\n                        \"y\": -0.086\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.459,\n                        \"y\": -0.16\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.456,\n                        \"y\": -0.909\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.453,\n                        \"y\": -0.935\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.447,\n                        \"y\": -0.955\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -1.062\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -1.147\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.278,\n                        \"y\": -1.201\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": -1.239\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.183,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.168,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.15,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": -1.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.147,\n                        \"y\": -1.206\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": -1.202\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.204,\n                        \"y\": -1.173\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": -1.129\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.334,\n                        \"y\": -1.03\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.888\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.113\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.347,\n                        \"y\": -0.104\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.356,\n                        \"y\": 0.019\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.124\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.464,\n                        \"y\": 0.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.503,\n                        \"y\": 0.184\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.556,\n                        \"y\": 0.227\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.603,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": 0.274\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.503,\n                        \"y\": 0.317\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.464,\n                        \"y\": 0.351\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.377\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.356,\n                        \"y\": 0.482\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.347,\n                        \"y\": 0.605\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 0.614\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.002\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 1.389\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.338,\n                        \"y\": 1.497\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.232,\n                        \"y\": 1.656\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": 1.703\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 1.707\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 1.713\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.144,\n                \"yMin\": -1.249,\n                \"xMax\": 0.661,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": 1.727\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 1.743\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.147,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.156,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.167,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.183,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": 1.74\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.247,\n                        \"y\": 1.718\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.285,\n                        \"y\": 1.689\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.414,\n                        \"y\": 1.593\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.447,\n                        \"y\": 1.456\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.453,\n                        \"y\": 1.436\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.456,\n                        \"y\": 1.41\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": 1.001\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.459,\n                        \"y\": 0.661\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.46,\n                        \"y\": 0.587\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.465,\n                        \"y\": 0.558\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.479,\n                        \"y\": 0.471\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.577,\n                        \"y\": 0.322\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.649,\n                        \"y\": 0.277\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.651,\n                        \"y\": 0.275\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.659,\n                        \"y\": 0.27\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.263\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.258\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.661,\n                        \"y\": 0.237\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.659,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 0.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.652,\n                        \"y\": 0.226\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.649,\n                        \"y\": 0.224\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.577,\n                        \"y\": 0.179\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.479,\n                        \"y\": 0.03\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.465,\n                        \"y\": -0.057\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.46,\n                        \"y\": -0.086\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.459,\n                        \"y\": -0.16\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.458,\n                        \"y\": -0.499\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.458,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.456,\n                        \"y\": -0.909\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.453,\n                        \"y\": -0.935\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.447,\n                        \"y\": -0.955\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -1.062\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -1.147\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.278,\n                        \"y\": -1.201\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.203,\n                        \"y\": -1.239\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.183,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.168,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.15,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": -1.243\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.144,\n                        \"y\": -1.226\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.147,\n                        \"y\": -1.206\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": -1.202\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.204,\n                        \"y\": -1.173\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": -1.129\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.334,\n                        \"y\": -1.03\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": -0.897\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.888\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": -0.501\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": -0.113\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.347,\n                        \"y\": -0.104\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.356,\n                        \"y\": 0.019\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.124\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.464,\n                        \"y\": 0.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.503,\n                        \"y\": 0.184\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.556,\n                        \"y\": 0.227\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.603,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.554,\n                        \"y\": 0.274\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.503,\n                        \"y\": 0.317\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.464,\n                        \"y\": 0.351\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.443,\n                        \"y\": 0.377\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.356,\n                        \"y\": 0.482\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.347,\n                        \"y\": 0.605\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 0.614\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.002\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.346,\n                        \"y\": 1.002\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.346,\n                        \"y\": 1.389\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.345,\n                        \"y\": 1.398\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.338,\n                        \"y\": 1.497\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.232,\n                        \"y\": 1.656\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.153,\n                        \"y\": 1.703\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.146,\n                        \"y\": 1.707\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": 1.713\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        }\n\t],\n\t\n    \"8739\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.119,\n                \"yMin\": -0.249,\n                \"xMax\": 0.159,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": -0.235\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.119,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.12,\n                        \"y\": 0.737\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.13,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.139,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.159,\n                        \"y\": 0.735\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.159,\n                        \"y\": -0.235\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.278\n\t\t},\n\t\t/*{\n\t\t\t\"fontId\": \"Size1-Regular\",\n\t\t\t\"bbox\": {\n\t\t\t\t\"xMin\": 0.145,\n\t\t\t\t\"yMin\": -0.015,\n\t\t\t\t\"xMax\": 0.188,\n\t\t\t\t\"yMax\": 0.627\n\t\t\t},\n\t\t\t\"contours\": [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.612\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.627\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.182,\n\t\t\t\t\t\t\"y\": 0.627\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.187,\n\t\t\t\t\t\t\"y\": 0.612\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.188,\n\t\t\t\t\t\t\"y\": 0.61\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.188,\n\t\t\t\t\t\t\"y\": 0.002\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.187,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.184,\n\t\t\t\t\t\t\"y\": -0.015\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.166,\n\t\t\t\t\t\t\"y\": -0.015\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.149,\n\t\t\t\t\t\t\"y\": -0.015\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.01\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.019\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.052\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.095\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.15\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.208\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.275\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.337\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.404\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.145,\n\t\t\t\t\t\t\"y\": 0.462\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.517\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.56\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": false,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.593\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.146,\n\t\t\t\t\t\t\"y\": 0.602\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"fontId\": \"Size2-Regular\",\n\t\t\t\"bbox\": {\n\t\t\t\t\"xMin\": 0.05,\n\t\t\t\t\"yMin\": 0,\n\t\t\t\t\"xMax\": 0.2,\n\t\t\t\t\"yMax\": 0.533\n\t\t\t},\n\t\t\t\"contours\": [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"fontId\": \"Size3-Regular\",\n\t\t\t\"bbox\": {\n\t\t\t\t\"xMin\": 0.05,\n\t\t\t\t\"yMin\": 0,\n\t\t\t\t\"xMax\": 0.2,\n\t\t\t\t\"yMax\": 0.533\n\t\t\t},\n\t\t\t\"contours\": [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"fontId\": \"Size4-Regular\",\n\t\t\t\"bbox\": {\n\t\t\t\t\"xMin\": 0.05,\n\t\t\t\t\"yMin\": 0,\n\t\t\t\t\"xMax\": 0.2,\n\t\t\t\t\"yMax\": 0.533\n\t\t\t},\n\t\t\t\"contours\": [\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.05,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0.533\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.2,\n\t\t\t\t\t\t\"y\": 0\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.05\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.15,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\t\"x\": 0.1,\n\t\t\t\t\t\t\"y\": 0.483\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t}*/\n\t],\n\t\n    \"8968\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.174,\n                \"yMin\": -0.25,\n                \"xMax\": 0.422,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": 0.734\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.178,\n                        \"y\": 0.746\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.19,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.298,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.406,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": 0.748\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 0.742\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": 0.718\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": 0.712\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.406,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.31,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": -0.235\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.207,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.196,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.184,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": -0.234\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.444\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.202,\n                \"yMin\": -0.349,\n                \"xMax\": 0.449,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.449,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.449,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": -0.349\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.224,\n                \"yMin\": -0.649,\n                \"xMax\": 0.511,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.511,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.511,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": -0.649\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.246,\n                \"yMin\": -0.949,\n                \"xMax\": 0.571,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.246,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.246,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.571,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.571,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.308,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.308,\n                        \"y\": -0.949\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.269,\n                \"yMin\": -1.249,\n                \"xMax\": 0.633,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.633,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.633,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": -1.249\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.639\n        }\n    ],\n    \"8969\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.021,\n                \"yMin\": -0.25,\n                \"xMax\": 0.269,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -0.235\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.262,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.251,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.239,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": -0.234\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.037,\n                        \"y\": 0.71\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.034,\n                        \"y\": 0.712\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.021,\n                        \"y\": 0.718\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.021,\n                        \"y\": 0.742\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.034,\n                        \"y\": 0.748\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.037,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.147,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.256,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.266,\n                        \"y\": 0.742\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 0.735\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.444\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.022,\n                \"yMin\": -0.349,\n                \"xMax\": 0.269,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.81\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": 0.81\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.016,\n                \"yMin\": -0.649,\n                \"xMax\": 0.303,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": 1.099\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.303,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.303,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.252,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.252,\n                        \"y\": 1.099\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.011,\n                \"yMin\": -0.949,\n                \"xMax\": 0.336,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": 1.388\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.336,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.336,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": 1.388\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.005,\n                \"yMin\": -1.249,\n                \"xMax\": 0.369,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": 1.677\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.369,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.369,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": 1.677\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.639\n        }\n\t],\n\t\n    \"8970\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.174,\n                \"yMin\": -0.25,\n                \"xMax\": 0.422,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.19,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.178,\n                        \"y\": -0.246\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": -0.234\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.174,\n                        \"y\": 0.734\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.184,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.196,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.207,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": 0.735\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.31,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.406,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": -0.212\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.218\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.422,\n                        \"y\": -0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.41,\n                        \"y\": -0.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.406,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.298,\n                        \"y\": -0.25\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.444\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.202,\n                \"yMin\": -0.349,\n                \"xMax\": 0.449,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.202,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.242,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.449,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.449,\n                        \"y\": -0.349\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.224,\n                \"yMin\": -0.649,\n                \"xMax\": 0.511,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.224,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.275,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.511,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.511,\n                        \"y\": -0.649\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.246,\n                \"yMin\": -0.949,\n                \"xMax\": 0.571,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.246,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.246,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.308,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.308,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.571,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.571,\n                        \"y\": -0.949\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.269,\n                \"yMin\": -1.249,\n                \"xMax\": 0.633,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.342,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.633,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.633,\n                        \"y\": -1.249\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.639\n        }\n    ],\n    \"8971\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.021,\n                \"yMin\": -0.25,\n                \"xMax\": 0.269,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.251,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.262,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 0.735\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -0.235\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.267,\n                        \"y\": -0.24\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.256,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.147,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.059,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.032,\n                        \"y\": -0.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.027,\n                        \"y\": -0.244\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.021,\n                        \"y\": -0.238\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.021,\n                        \"y\": -0.23\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.021,\n                        \"y\": -0.218\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.034,\n                        \"y\": -0.212\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.037,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": -0.21\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": 0.734\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.239,\n                        \"y\": 0.75\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.444\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.022,\n                \"yMin\": -0.349,\n                \"xMax\": 0.269,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": -0.309\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.229,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.269,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.349\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.022,\n                        \"y\": -0.309\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.016,\n                \"yMin\": -0.649,\n                \"xMax\": 0.303,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.252,\n                        \"y\": -0.598\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.252,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.303,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.303,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.016,\n                        \"y\": -0.598\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.528\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.011,\n                \"yMin\": -0.949,\n                \"xMax\": 0.336,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": -0.887\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.274,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.336,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.336,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.011,\n                        \"y\": -0.887\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.583\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.005,\n                \"yMin\": -1.249,\n                \"xMax\": 0.369,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": -1.176\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.369,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.369,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": -1.249\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.005,\n                        \"y\": -1.176\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.639\n        }\n\t],\n\t\n    \"10216\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.11,\n                \"yMin\": -0.25,\n                \"xMax\": 0.333,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": -0.232\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.332,\n                        \"y\": -0.239\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.321,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.313,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.303,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": -0.24\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.293,\n                        \"y\": -0.233\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.11,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.11,\n                        \"y\": 0.255\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.293,\n                        \"y\": 0.733\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.296,\n                        \"y\": 0.74\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.299,\n                        \"y\": 0.745\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.306,\n                        \"y\": 0.749\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.309,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.312,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.313,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.331,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.333,\n                        \"y\": 0.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": 0.727\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": 0.489\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 0.252\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.152,\n                        \"y\": 0.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.243,\n                        \"y\": 0.011\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.333,\n                        \"y\": -0.227\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.389\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.097,\n                \"yMin\": -0.35,\n                \"xMax\": 0.394,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.373,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.392,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": 0.832\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.394,\n                        \"y\": 0.825\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.267,\n                        \"y\": 0.538\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.139,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.267,\n                        \"y\": -0.038\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.394,\n                        \"y\": -0.325\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.394,\n                        \"y\": -0.332\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.392,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.375,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.362,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": -0.338\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.354,\n                        \"y\": -0.331\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.224,\n                        \"y\": -0.04\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.097,\n                        \"y\": 0.246\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.097,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.224,\n                        \"y\": 0.54\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.354,\n                        \"y\": 0.831\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.356,\n                        \"y\": 0.838\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.363,\n                        \"y\": 0.85\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.112,\n                \"yMin\": -0.649,\n                \"xMax\": 0.523,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.112,\n                        \"y\": 0.244\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.112,\n                        \"y\": 0.258\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.29,\n                        \"y\": 0.689\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": 1.061\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.473,\n                        \"y\": 1.13\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.479,\n                        \"y\": 1.141\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.488,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.498,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.51,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.524,\n                        \"y\": 1.135\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.523,\n                        \"y\": 1.125\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.523,\n                        \"y\": 1.118\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.344,\n                        \"y\": 0.685\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.304,\n                        \"y\": 0.587\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.209,\n                        \"y\": 0.359\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.187,\n                        \"y\": 0.305\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.165,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.344,\n                        \"y\": -0.184\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.523,\n                        \"y\": -0.616\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.523,\n                        \"y\": -0.623\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.524,\n                        \"y\": -0.634\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.509,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.499,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.484,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.473,\n                        \"y\": -0.629\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.446,\n                        \"y\": -0.56\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.29,\n                        \"y\": -0.188\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.611\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.126,\n                \"yMin\": -0.95,\n                \"xMax\": 0.654,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.126,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.126,\n                        \"y\": 0.259\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.361,\n                        \"y\": 0.845\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.595,\n                        \"y\": 1.431\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.597,\n                        \"y\": 1.435\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.608,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.624,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.637,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.654,\n                        \"y\": 1.432\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.654,\n                        \"y\": 1.419\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.654,\n                        \"y\": 1.411\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.422,\n                        \"y\": 0.831\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.19,\n                        \"y\": 0.253\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.19,\n                        \"y\": 0.247\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.422,\n                        \"y\": -0.331\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.654,\n                        \"y\": -0.91\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.654,\n                        \"y\": -0.919\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.654,\n                        \"y\": -0.933\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.636,\n                        \"y\": -0.95\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.612,\n                        \"y\": -0.95\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.597,\n                        \"y\": -0.935\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.595,\n                        \"y\": -0.931\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.361,\n                        \"y\": -0.345\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.75\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.14,\n                \"yMin\": -1.248,\n                \"xMax\": 0.703,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.14,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.14,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.386,\n                        \"y\": 0.994\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.633,\n                        \"y\": 1.729\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.635,\n                        \"y\": 1.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.643,\n                        \"y\": 1.745\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.657,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.666,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.668,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.682,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.702,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": 1.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.457,\n                        \"y\": -0.478\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.703,\n                        \"y\": -1.204\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.702,\n                        \"y\": -1.229\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.683,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.667,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.647,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.635,\n                        \"y\": -1.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.633,\n                        \"y\": -1.228\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.386,\n                        \"y\": -0.493\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.14,\n                \"yMin\": -1.248,\n                \"xMax\": 0.703,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.14,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.14,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.635,\n                        \"y\": 1.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.643,\n                        \"y\": 1.745\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.657,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.658,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.666,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.668,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.682,\n                        \"y\": 1.749\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.702,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": 1.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.214,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.703,\n                        \"y\": -1.204\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.702,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.702,\n                        \"y\": -1.229\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.683,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.667,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.647,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.635,\n                        \"y\": -1.231\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        }\n    ],\n    \"10217\": [\n        {\n            \"fontId\": \"Main-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.055,\n                \"yMin\": -0.25,\n                \"xMax\": 0.278,\n                \"yMax\": 0.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.055,\n                        \"y\": 0.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.056,\n                        \"y\": 0.739\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.067,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.075,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.085,\n                        \"y\": 0.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.092,\n                        \"y\": 0.74\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.095,\n                        \"y\": 0.733\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.278,\n                        \"y\": 0.255\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.278,\n                        \"y\": 0.245\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.095,\n                        \"y\": -0.233\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.092,\n                        \"y\": -0.24\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.085,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.075,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.067,\n                        \"y\": -0.25\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.056,\n                        \"y\": -0.239\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.055,\n                        \"y\": -0.232\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.055,\n                        \"y\": -0.227\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.145,\n                        \"y\": 0.011\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.236,\n                        \"y\": 0.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.236,\n                        \"y\": 0.252\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.145,\n                        \"y\": 0.489\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.055,\n                        \"y\": 0.727\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.389\n        },\n        {\n            \"fontId\": \"Size1-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.077,\n                \"yMin\": -0.35,\n                \"xMax\": 0.374,\n                \"yMax\": 0.85\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.077,\n                        \"y\": 0.832\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.079,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.098,\n                        \"y\": 0.85\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.11,\n                        \"y\": 0.849\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.115,\n                        \"y\": 0.838\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.117,\n                        \"y\": 0.831\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.247,\n                        \"y\": 0.54\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.374,\n                        \"y\": 0.254\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.374,\n                        \"y\": 0.246\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.247,\n                        \"y\": -0.04\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.117,\n                        \"y\": -0.331\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.115,\n                        \"y\": -0.338\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.109,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.096,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.079,\n                        \"y\": -0.35\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.077,\n                        \"y\": -0.332\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.077,\n                        \"y\": -0.325\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.204,\n                        \"y\": -0.038\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.332,\n                        \"y\": 0.25\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.204,\n                        \"y\": 0.538\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.077,\n                        \"y\": 0.825\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.472\n        },\n        {\n            \"fontId\": \"Size2-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.086,\n                \"yMin\": -0.649,\n                \"xMax\": 0.498,\n                \"yMax\": 1.15\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.112,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.102,\n                        \"y\": -0.649\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.086,\n                        \"y\": -0.633\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.087,\n                        \"y\": -0.623\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.087,\n                        \"y\": -0.616\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.266,\n                        \"y\": -0.184\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.445,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.445,\n                        \"y\": 0.252\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.267,\n                        \"y\": 0.68\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.088,\n                        \"y\": 1.116\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.086,\n                        \"y\": 1.123\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.085,\n                        \"y\": 1.133\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.099,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.11,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": 1.15\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": 1.137\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.134,\n                        \"y\": 1.136\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.317,\n                        \"y\": 0.695\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.498,\n                        \"y\": 0.258\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.498,\n                        \"y\": 0.244\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.317,\n                        \"y\": -0.194\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.134,\n                        \"y\": -0.635\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.133,\n                        \"y\": -0.636\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.126,\n                        \"y\": -0.649\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.611\n        },\n        {\n            \"fontId\": \"Size3-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.094,\n                \"yMin\": -0.949,\n                \"xMax\": 0.623,\n                \"yMax\": 1.45\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.125,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.095,\n                        \"y\": -0.949\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.095,\n                        \"y\": -0.919\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.095,\n                        \"y\": -0.91\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.327,\n                        \"y\": -0.331\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.559,\n                        \"y\": 0.247\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.559,\n                        \"y\": 0.253\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.327,\n                        \"y\": 0.831\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.094,\n                        \"y\": 1.411\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.094,\n                        \"y\": 1.424\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.094,\n                        \"y\": 1.426\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.095,\n                        \"y\": 1.428\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.104,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.124,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.141,\n                        \"y\": 1.45\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.152,\n                        \"y\": 1.435\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.154,\n                        \"y\": 1.431\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.388,\n                        \"y\": 0.845\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.623,\n                        \"y\": 0.259\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.623,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.388,\n                        \"y\": -0.345\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.153,\n                        \"y\": -0.933\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.152,\n                        \"y\": -0.934\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.144,\n                        \"y\": -0.949\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.75\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.103,\n                \"yMin\": -1.248,\n                \"xMax\": 0.665,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.138,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.122,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.103,\n                        \"y\": -1.229\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": -1.204\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.184,\n                        \"y\": -0.961\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.509,\n                        \"y\": 0.008\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.591,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": 1.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.103,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.122,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.137,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.157,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.17,\n                        \"y\": 1.732\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.172,\n                        \"y\": 1.729\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.419,\n                        \"y\": 0.994\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.665,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.665,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.419,\n                        \"y\": -0.493\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.172,\n                        \"y\": -1.228\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.17,\n                        \"y\": -1.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.158,\n                        \"y\": -1.248\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        },\n        {\n            \"fontId\": \"Size4-Regular\",\n            \"bbox\": {\n                \"xMin\": 0.103,\n                \"yMin\": -1.248,\n                \"xMax\": 0.665,\n                \"yMax\": 1.75\n            },\n            \"contours\": [\n                [\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.138,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.122,\n                        \"y\": -1.248\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.103,\n                        \"y\": -1.229\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": -1.213\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": -1.204\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.591,\n                        \"y\": 0.251\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": 1.705\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.103,\n                        \"y\": 1.714\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.103,\n                        \"y\": 1.73\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.122,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.137,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.157,\n                        \"y\": 1.75\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.17,\n                        \"y\": 1.732\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.665,\n                        \"y\": 0.26\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.665,\n                        \"y\": 0.242\n                    },\n                    {\n                        \"onCurve\": true,\n                        \"x\": 0.17,\n                        \"y\": -1.231\n                    },\n                    {\n                        \"onCurve\": false,\n                        \"x\": 0.158,\n                        \"y\": -1.248\n                    }\n                ]\n            ],\n            \"advanceWidth\": 0.806\n        }\n    ]\n};\n\ninterface ShiftData {\n    downShifted: Vector2,\n    upShifted: Vector2\n};\n\nconst extensionData: { [unicode: string]: ShiftData } = {\n\t\"40\": {\n\t\tdownShifted: [25, 10],\n\t\tupShifted: [10, 25]\n\t},\n\t\"41\": {\n\t\tdownShifted: [10, 27],\n\t\tupShifted: [27, 10]\n\t},\n\n\t\"91\": {\n\t\tdownShifted: [5, 1],\n\t\tupShifted: [1, 5]\n\t},\n\t\"93\": {\n\t\tdownShifted: [3, 7], \n\t\tupShifted: [7, 3]\n\t},\n\n\t\"123\": {\n\t\tdownShifted: [79, 10],\n\t\tupShifted: [41, 64]\n\t},\n\t\"125\": {\n\t\tdownShifted: [39, 62],\n\t\tupShifted: [79, 15]\n\t},\n\n\t\"8739\": {\n\t\tdownShifted: [9, 3],\n\t\tupShifted: [4, 9]\n\t},\n\n\t\"8968\": {\n\t\tdownShifted: [5, 1],\n\t\tupShifted: [1, 5]\n\t},\n\t\"8969\": {\n\t\tdownShifted: [3, 5],\n\t\tupShifted: [5, 3]\n\t},\n\n\t\"8970\": {\n\t\tdownShifted: [3, 1],\n\t\tupShifted: [1, 3]\n\t},\n\t\"8971\": {\n\t\tdownShifted: [3, 1],\n\t\tupShifted: [1, 3]\n\t},\n\n\t\"10216\": {\n\t\tdownShifted: [13, 0], \n\t\tupShifted: [2, 12]\n\t},\n\t\"10217\": {\n\t\tdownShifted: [15, 5],\n\t\tupShifted: [6, 13]\n\t}\n};\n\nconst isNumInLoopingRange = (start: number, end: number, num: number) : boolean => {\n\treturn (end > start) ? (num >= start && num < end) : (num >= start || num < end);\n};\nconst translateGlyphPoint = (glyphPoint: GlyphPoint, translation: Vector2) : GlyphPoint => {\n\treturn {\n\t\t...glyphPoint, \n\t\tx: glyphPoint.x + translation[0],\n\t\ty: glyphPoint.y + translation[1]\n\t}\n};\nconst getGlyphTranslationByShiftData = (index: number, shiftData: ShiftData, extension: number) : number => {\n\tif (isNumInLoopingRange(shiftData.downShifted[0], shiftData.downShifted[1], index)) return -extension;\n\tif (isNumInLoopingRange(shiftData.upShifted[0], shiftData.upShifted[1], index)) return extension;\n\treturn 0;\n};\nconst extendContour = (contour: Contour, shiftData: ShiftData, extension: number) : Contour => contour.map((glyphPoint, index) => {\n\treturn translateGlyphPoint(glyphPoint, [0, getGlyphTranslationByShiftData(index, shiftData, extension)]);\n});\n\n//the height and depth should be the same for all delimiters, \n//here only height is returned, so half of the vertical size\nconst axisHeight = 0.25;\nconst getHeightOfDelimiterToAxis = (bbox: BoundingBox) : number => bbox.yMax - axisHeight;\n\nconst lookUpGlyphByHeightToAxis = (unicode: number, heightFromAxis: number) : GlyphData => delimiterFontData[unicode]\n\t.find((entry, index) => index === delimiterFontData[unicode].length - 1 || getHeightOfDelimiterToAxis(entry.bbox) >= heightFromAxis);\n\nconst generateDelimiterContours = (unicode: number, heightFromAxis: number) : { contours: Contour[], dimensions: Dimensions } => {\n\tconst entry = lookUpGlyphByHeightToAxis(unicode, heightFromAxis);\n\tconst { bbox } = entry;\n\tconst entryHeight = getHeightOfDelimiterToAxis(bbox);\n\tif (entryHeight >= heightFromAxis) {\n\t\tconst sizeRatio = heightFromAxis / entryHeight;\n\t\tconst matrix : [number, number, number, number, number, number] = [sizeRatio, 0, 0, sizeRatio, 0, (1 - sizeRatio) * axisHeight];\n\t\tconst scaledContours = entry.contours.map(contour => transformContour(matrix, contour));\n\t\tconst scaledBbox = transformBbox(matrix, entry.bbox);\n\t\treturn {\n\t\t\tcontours: scaledContours,\n\t\t\tdimensions: {\n\t\t\t\t...pick([\"yMin\", \"yMax\"], scaledBbox),\n\t\t\t\twidth: entry.advanceWidth * sizeRatio\n\t\t\t}\n\t\t};\n\t}\n\tconst remainingHeight = heightFromAxis - entryHeight;\n\tif (extensionData[unicode]) {\n\t\tconst extendableEntry = lastInArray(delimiterFontData[unicode]);\n\t\tconst extendedContour = extendContour(extendableEntry.contours[0], extensionData[unicode], remainingHeight);\n\t\treturn {\n\t\t\tcontours: [extendedContour],\n\t\t\tdimensions: {\n\t\t\t\tyMin: bbox.yMin - remainingHeight, \n\t\t\t\tyMax: bbox.yMax + remainingHeight, \n\t\t\t\twidth: entry.advanceWidth\n\t\t\t}\n\t\t};\n\t}\n};\nexport const createDelimiter = (unicode: number, heightFromAxis: number) : ContoursNode => {\n\tconst contoursData = generateDelimiterContours(unicode, heightFromAxis);\n\tif (!contoursData) return;\n\treturn {\n\t\ttype: \"contours\",\n\t\t...contoursData\n\t};\n};\n\n","import { compositeTypes, glyphTypes } from \"../node-types\";\nimport { FormulaNode } from '../types';\n\nconst nodeSpacingTable: number[][] = [\n\t[0, 1, 2, 3, 2, 0, 0, 1],\n\t[1, 1, 0, 3, 0, 0, 0, 1],\n\t[2, 2, 0, 0, 2, 0, 0, 2],\n\t[3, 3, 0, 0, 3, 0, 0, 3],\n\t[0, 0, 0, 0, 0, 0, 0, 0],\n\t[0, 1, 2, 3, 0, 0, 0, 1],\n\t[1, 1, 0, 1, 1, 1, 1, 1],\n\t[1, 1, 2, 3, 1, 0, 1, 1]\n];\nconst getIndexOfNodeType = (type: string): number => compositeTypes.includes(type) ? 7 : glyphTypes.indexOf(type);\nconst typeOfNode = (node: FormulaNode): string => node.type;\n\n//the horizontal spacing between two nodes depends on their respective types\nexport const lookUpHorizontalSpacing = (node1: FormulaNode, node2: FormulaNode): number => {\n\tconst [ind1, ind2] = [node1, node2].map(typeOfNode).map(getIndexOfNodeType);\n\tif (ind1 < 0 || ind2 < 0) {\n\t\treturn 0;\n\t}\n\treturn 2 * nodeSpacingTable[ind1][ind2] / 18;\n};","import { layoutNode } from \"../layout\";\nimport { setPosition, calcBoundingDimensions, getAxisHeight, isNodeAlignedToBaseline } from '../layout-util';\nimport { createDelimiter } from \"./create-delimiter\";\nimport { accumSum } from \"../../util/util\";\nimport { map, pipe, multiply, identity } from 'ramda';\nimport { withStyle } from \"../../style\";\nimport { lookUpHorizontalSpacing } from \"../horizontal-layout\";\n\nimport { DelimitedNode as FormulaDelimitedNode, FormulaNode, Dimensions, BoxNode, CharNode, ContoursNode } from '../../types';\nimport { Style } from '../../style';\nimport { lookUpGlyphByCharOrAlias } from \"../../font-data/katex-font-util\";\nimport { validateProperties } from \"../error\";\n\nexport interface BoxDelimitedNode extends BoxNode {\n\ttype: \"delimited\",\n\tdelimited: BoxNode,\n\tleftDelim: ContoursNode,\n\trightDelim: ContoursNode\n}\n\nconst calculateDelimiterHeight = (delimited: FormulaNode, delimitedMetrics: Dimensions, style: Style): number => {\n\tconst axisOffset = -getAxisHeight(style);// isNodeAlignedToBaseline(delimited) ? -getAxisHeight(style) : 0;\n\tconst [height, depth] = [delimitedMetrics.yMax, delimitedMetrics.yMin]\n\t\t.map(val => val + axisOffset)\n\t\t.map(val => val / style.fontSize);\n\tconst delimiterSpacing = 0.15;\n\treturn Math.max(height, -depth) + delimiterSpacing;\n};\n\nconst validOpenChars = [\n\t\"(\", \"[\", \"{\", \"⟨\", \"|\", \"⌈\", \"⌊\"\n];\nconst validCloseChars = [\n\t\")\", \"]\", \"}\", \"⟩\", \"|\", \"⌉\", \"⌋\"\n];\nconst validateDelimiterNode = (delimNode: any, label: string, isOpen: boolean) => {\n\t//{ type: \"open\", value: \"(\" | \"[\" | \"{\" | \"⟨\" | \"|\" | \"⌉\" | \"⌋\" }\n\t//{ type: \"close\", value: \"\" }\n\tif (typeof(delimNode.type) !== \"string\") throw `${label} is either missing the type-property or it's not a string`;\n\tconst requiredType = isOpen ? \"open\" : \"close\";\n\tif (delimNode.type !== requiredType) throw `${label} must be of type ${requiredType}`;\n\tif (typeof(delimNode.value) !== \"string\") throw `${label} is either missing the value-property or it's not a string`;\n\n\tconst char = String.fromCharCode(lookUpGlyphByCharOrAlias(delimNode.value).unicode);\n\tconst curValidChars = isOpen ? validOpenChars : validCloseChars;\n\tif (!curValidChars.includes(char)) throw `${char} is not a valid ${requiredType}-character`;\n};\nexport const layoutDelimited = (delimNode: FormulaDelimitedNode) : BoxDelimitedNode => {\n\tvalidateProperties({\n\t\tdelimited: \"object\",\n\t\tleftDelim: \"object\",\n\t\trightDelim: \"object\"\n\t})(delimNode);\n\t\n\tconst { delimited } = delimNode;\n\tconst { style } = delimNode;\n\tconst delimitedLayouted: BoxNode = pipe(withStyle(style), layoutNode)(delimited);\n\t\n\tconst { leftDelim, rightDelim } = delimNode;\n\tvalidateDelimiterNode(leftDelim, \"leftDelim\", true);\n\tvalidateDelimiterNode(rightDelim, \"rightDelim\", false);\n\n\tconst delimiterHeight = calculateDelimiterHeight(delimited, delimitedLayouted.dimensions, style);\n\tconst [leftDelimBox, rightDelimBox] = [leftDelim, rightDelim]\n\t\t.map(delimNode => createDelimiter((delimNode as CharNode).value.charCodeAt(0), delimiterHeight))\n\t\t.map(delim => identity({ \n\t\t\t...delim, dimensions: map(multiply(style.fontSize), delim.dimensions), style \n\t\t})) as [ContoursNode, ContoursNode];\n\n\tconst itemXs = accumSum([\n\t\tleftDelimBox.dimensions.width + lookUpHorizontalSpacing(leftDelim, delimited),\n\t\tdelimitedLayouted.dimensions.width + lookUpHorizontalSpacing(delimited, rightDelim)\n\t]);\n\tconst layoutedItems = {\n\t\tdelimited: setPosition([itemXs[1], 0])(delimitedLayouted),\n\t\tleftDelim: setPosition<ContoursNode>([itemXs[0], 0])(leftDelimBox),\n\t\trightDelim: setPosition<ContoursNode>([itemXs[2], 0])(rightDelimBox)\n\t};\n\treturn {\n\t\ttype: \"delimited\",\n\t\tdimensions: calcBoundingDimensions(layoutedItems),\n\t\t...layoutedItems\n\t};\n};","import { scaleContours, Contour } from \"../../opentype\";\nimport { map } from 'ramda';\nimport { BoundingBox, Vector2, ContoursNode } from '../../types';\n\ninterface GlyphData {\n    fontFamily: string,\n    innerHeight: number\n    bbox: BoundingBox,\n    contours: Contour[],\n    advanceWidth?: number\n};\n\nconst rootData : GlyphData[] = [\n    {\n\t\t\"fontFamily\": \"Size1\",\n\t\t\"innerHeight\": 1.146,\n        \"bbox\": {\n            \"xMin\": 0.111,\n            \"yMin\": -0.35,\n            \"xMax\": 1.02,\n            \"yMax\": 0.85\n        },\n        \"contours\": [\n            [\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.263,\n                    \"y\": 0.249\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.264,\n                    \"y\": 0.249\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.366,\n                    \"y\": 0.011\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.469,\n                    \"y\": -0.227\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.47,\n                    \"y\": -0.228\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.98,\n                    \"y\": 0.829\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.982,\n                    \"y\": 0.839\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.989,\n                    \"y\": 0.85\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 0.85\n                },\n                //upper tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 0.85\n                },\n                //lower tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.005,\n                    \"y\": 0.796\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.005,\n                    \"y\": 0.796\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.741,\n                    \"y\": 0.243\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.683,\n                    \"y\": 0.122\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.527,\n                    \"y\": -0.202\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.46,\n                    \"y\": -0.342\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.459,\n                    \"y\": -0.343\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.452,\n                    \"y\": -0.35\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.436,\n                    \"y\": -0.35\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -0.349\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.315,\n                    \"y\": -0.096\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.206,\n                    \"y\": 0.156\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.205,\n                    \"y\": 0.156\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.189,\n                    \"y\": 0.144\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.171,\n                    \"y\": 0.13\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.138,\n                    \"y\": 0.104\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.137,\n                    \"y\": 0.104\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.111,\n                    \"y\": 0.13\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": true,\n                    \"x\": 0.187,\n                    \"y\": 0.189\n                }\n            ]\n        ]\n    },\n    {\n\t\t\"fontFamily\": \"Size2\",\n\t\t\"innerHeight\": 1.746,\n        \"bbox\": {\n            \"xMin\": 0.111,\n            \"yMin\": -0.65,\n            \"xMax\": 1.02,\n            \"yMax\": 1.15\n        },\n        \"contours\": [\n            [\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 1.15\n                },\n\n                //upper tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 1.15\n                },\n                //lower tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.008,\n                    \"y\": 1.096\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.008,\n                    \"y\": 1.096\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.478,\n                    \"y\": -0.588\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.46,\n                    \"y\": -0.643\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.453,\n                    \"y\": -0.65\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.436,\n                    \"y\": -0.65\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -0.65\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.422,\n                    \"y\": -0.645\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.417,\n                    \"y\": -0.625\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.364,\n                    \"y\": -0.437\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.203,\n                    \"y\": 0.119\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.188,\n                    \"y\": 0.101\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.17,\n                    \"y\": 0.08\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.138,\n                    \"y\": 0.041\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.129,\n                    \"y\": 0.049\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.111,\n                    \"y\": 0.067\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.136,\n                    \"y\": 0.097\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.176,\n                    \"y\": 0.146\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.212,\n                    \"y\": 0.188\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.264,\n                    \"y\": 0.248\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.472,\n                    \"y\": -0.474\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.556,\n                    \"y\": -0.211\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.81,\n                    \"y\": 0.595\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.971,\n                    \"y\": 1.106\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.983,\n                    \"y\": 1.14\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": true,\n                    \"x\": 0.989,\n                    \"y\": 1.15\n                }\n            ]\n        ]\n    },\n    {\n\t\t\"fontFamily\": \"Size3\",\n\t\t\"innerHeight\": 2.346,\n        \"bbox\": {\n            \"xMin\": 0.111,\n            \"yMin\": -0.95,\n            \"xMax\": 1.02,\n            \"yMax\": 1.45\n        },\n        \"contours\": [\n            [\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -0.948\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.422,\n                    \"y\": -0.947\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.203,\n                    \"y\": 0.079\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.202,\n                    \"y\": 0.08\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.202,\n                    \"y\": 0.083\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.17,\n                    \"y\": 0.031\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.163,\n                    \"y\": 0.02\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.146,\n                    \"y\": -0.008\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.142,\n                    \"y\": -0.014\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.137,\n                    \"y\": -0.021\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.131,\n                    \"y\": -0.016\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.124,\n                    \"y\": -0.008\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.111,\n                    \"y\": 0.005\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.187,\n                    \"y\": 0.127\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.264,\n                    \"y\": 0.248\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.473,\n                    \"y\": -0.72\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.473,\n                    \"y\": -0.717\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.981,\n                    \"y\": 1.435\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.983,\n                    \"y\": 1.44\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.989,\n                    \"y\": 1.45\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 1.45\n                },\n                //upper tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 1.45\n                },\n                //lower tail-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.011,\n                    \"y\": 1.396\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.011,\n                    \"y\": 1.396\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.464,\n                    \"y\": -0.937\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.46,\n                    \"y\": -0.941\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.457,\n                    \"y\": -0.95\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.436,\n                    \"y\": -0.95\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": true,\n                    \"x\": 0.424,\n                    \"y\": -0.95\n                }\n            ]\n        ]\n    },\n    {\n\t\t\"fontFamily\": \"Size4\",\n\t\t\"innerHeight\": 2.946,\n        \"bbox\": {\n            \"xMin\": 0.111,\n            \"yMin\": -1.25,\n            \"xMax\": 1.02,\n            \"yMax\": 1.75\n        },\n        \"contours\": [\n            [\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.473,\n                    \"y\": -0.963\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.982,\n                    \"y\": 1.736\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.983,\n                    \"y\": 1.739\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.988,\n                    \"y\": 1.75\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.001,\n                    \"y\": 1.75\n\t\t\t\t},\n\t\t\t\t//upper tail-point\n\t\t\t\t{\n\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\"lastPointOfContour\": false,\n\t\t\t\t\t\"x\": 1.001,\n\t\t\t\t\t\"y\": 1.75\n\t\t\t\t},\n\t\t\t\t//lower tail-point\n\t\t\t\t{\n\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\"lastPointOfContour\": false,\n\t\t\t\t\t\"x\": 1.013,\n\t\t\t\t\t\"y\": 1.696\n\t\t\t\t},\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 1.013,\n\t\t\t\t\t\"y\": 1.696\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.463,\n                    \"y\": -1.238\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.46,\n                    \"y\": -1.241\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.457,\n                    \"y\": -1.25\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.436,\n                    \"y\": -1.25\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -1.25\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -1.248\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.424,\n                    \"y\": -1.246\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.408,\n                    \"y\": -1.156\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.332,\n                    \"y\": -0.716\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.201,\n                    \"y\": 0.044\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.201,\n                    \"y\": 0.046\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.169,\n                    \"y\": -0.018\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.153,\n                    \"y\": -0.05\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.137,\n                    \"y\": -0.083\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.111,\n                    \"y\": -0.057\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.187,\n                    \"y\": 0.096\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.264,\n                    \"y\": 0.247\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.265,\n                    \"y\": 0.246\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.369,\n                    \"y\": -0.357\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": true,\n                    \"x\": 0.47,\n                    \"y\": -0.958\n                }\n            ]\n        ]\n    },\n    {\n\t\t\"fontFamily\": \"Size4\",\n\t\t\"innerHeight\": 1.805,\n        \"bbox\": {\n            \"xMin\": 0.111,\n            \"yMin\": -0.885,\n            \"xMax\": 0.742,\n            \"yMax\": 0.935\n\t\t},\n\t\t\"advanceWidth\": 1.056,\n        \"contours\": [\n            [\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.742,\n                    \"y\": -0.871\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.741,\n                    \"y\": -0.872\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.735,\n                    \"y\": -0.878\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.733,\n                    \"y\": -0.88\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.727,\n                    \"y\": -0.883\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.72,\n                    \"y\": -0.885\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.714,\n                    \"y\": -0.885\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.702,\n                    \"y\": -0.885\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.674,\n                    \"y\": -0.801\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.649,\n                    \"y\": -0.723\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.434,\n                    \"y\": -0.074\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.222,\n                    \"y\": 0.569\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.137,\n                    \"y\": 0.399\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.131,\n                    \"y\": 0.404\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.124,\n                    \"y\": 0.412\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.111,\n                    \"y\": 0.425\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.188,\n                    \"y\": 0.58\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.265,\n                    \"y\": 0.736\n                },\n                {\n                    \"onCurve\": false,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.364,\n                    \"y\": 0.437\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.484,\n                    \"y\": 0.075\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.702,\n                    \"y\": -0.586\n                },\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.702,\n                    \"y\": 0.168\n\t\t\t\t},\n\t\t\t\t//left tower-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": false,\n                    \"x\": 0.703,\n                    \"y\": 0.92\n\t\t\t\t},\n\t\t\t\t//upper tail-point\n\t\t\t\t{\n\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\"lastPointOfContour\": false,\n\t\t\t\t\t\"x\": 0.703,\n\t\t\t\t\t\"y\": 0.92\n\t\t\t\t},\n                // {\n                //     \"onCurve\": false,\n                //     \"lastPointOfContour\": false,\n                //     \"x\": 0.713,\n                //     \"y\": 0.935\n                // },\n                // {\n                //     \"onCurve\": true,\n                //     \"lastPointOfContour\": false,\n                //     \"x\": 0.722,\n                //     \"y\": 0.935\n                // },\n                // {\n                //     \"onCurve\": false,\n                //     \"lastPointOfContour\": false,\n                //     \"x\": 0.734,\n                //     \"y\": 0.935\n\t\t\t\t// },\n\t\t\t\t//lower tail-point\n\t\t\t\t{\n\t\t\t\t\t\"onCurve\": true,\n\t\t\t\t\t\"lastPointOfContour\": true,\n\t\t\t\t\t\"x\": 0.742,\n\t\t\t\t\t\"y\": 0.92\n\t\t\t\t},\n\t\t\t\t//right tower-point\n                {\n                    \"onCurve\": true,\n                    \"lastPointOfContour\": true,\n                    \"x\": 0.742,\n                    \"y\": 0.92\n                }\n            ]\n        ]\n    }\n];\nconst extensionIndices : Vector2[] = [\n    [9, 10], [1, 2], [21, 22], [5, 6], [22, 25]\n];\n\nconst indexPositions : Vector2[] = [\n    [0.52, 0.29], [0.52, 0.29], [0.52, 0.29], [0.52, 0.29], [0.54, 0.8]\n];\nconst roofThickness = 0.054;\n\ninterface ModifiedGlyphPoint {\n    index: number,\n    point: {\n        x: number, \n        y: number\n    }\n};\n\nconst moveContourPoints = (contour: Contour, movedPoints: ModifiedGlyphPoint[]) : Contour => contour.map((glyphPoint, index) => {\n\tconst point : { x: number, y: number } = (movedPoints.find(mov => mov.index === index) || { point: { x: glyphPoint.x, y: glyphPoint.y } }).point;\n\treturn { ...glyphPoint, ...point }\n});\nexport const extendRootTail = (rootIndex: number, width: number) : Contour => {\n\tconst extendInds = extensionIndices[rootIndex];\n\tconst rootEntry = rootData[rootIndex];\n\tconst contour = rootEntry.contours[0];\n\tconst tailX = contour[extendInds[1]].x + width;\n\treturn moveContourPoints(contour, [\n\t\t{ index: extendInds[0], point: { x: tailX, y: contour[extendInds[0]].y } },\n\t\t{ index: extendInds[1], point: { x: tailX, y: contour[extendInds[1]].y } },\n\t]);\n};\nexport const extendRootBrella = (height: number, width: number) : Contour => {\n\tconst rootEntry = rootData[4];\n\tconst bottomY = rootEntry.bbox.yMin;\n\tconst lowerRoofY = bottomY + height;\n\tconst upperRoofY = lowerRoofY + roofThickness;\n\tconst tailX = rootEntry.advanceWidth + width;\n\tconst contour = rootEntry.contours[0];\n\treturn moveContourPoints(contour, [\n\t\t{ index: 22, point: { x: contour[22].x, y: upperRoofY } },\n\t\t{ index: 23, point: { x: tailX, y: upperRoofY } },\n\t\t{ index: 24, point: { x: tailX, y: lowerRoofY } },\n\t\t{ index: 25, point: { x: contour[25].x, y: lowerRoofY } }\n\t]);\n};\n\n//height means distance from lowest point to bottom of root-\"roof\"\nconst getRootIndexByHeight = (height: number) : number => {\n\tfor (let i = 0; i < 4; i++){\n\t\tif (rootData[i].innerHeight > height){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn 4;\n};\n\nexport interface RootContoursNode extends ContoursNode {\n    innerStartX: number,\n    innerHeight: number, \n    indexCorner: Vector2\n};\n\n//{ contours, innerStartX, metrics }\nexport const createRadical = (width: number, height: number) : RootContoursNode => {\n\tconst rootIndex = getRootIndexByHeight(height);\n\tconst rootEntry = rootData[rootIndex];\n\tconst { bbox } = rootEntry;\n\tif (rootIndex < 4){\n\t\tconst heightRatio = height / rootEntry.innerHeight;\n\t\tconst scale = Math.min(1, Math.min(heightRatio, 0.9) / 0.9);\n\t\tconst scaledBbox = map(val => val * scale, bbox);\n\t\tconst contour = extendRootTail(rootIndex, width / scale);\n\t\tconst scaledContours = scaleContours(scale, [contour]);\n\t\treturn {\n            type: \"contours\",\n\t\t\tcontours: scaledContours,\n\t\t\tinnerStartX: scaledBbox.xMax,\n            innerHeight: scale * rootEntry.innerHeight,\n            indexCorner: indexPositions[rootIndex],\n\t\t\tdimensions: {\n\t\t\t\twidth: scaledBbox.xMax + width,\n\t\t\t\tyMin: scaledBbox.yMin,\n\t\t\t\tyMax: scaledBbox.yMax\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tconst startX = rootData[rootIndex].advanceWidth;\n\t\treturn {\n            type: \"contours\",\n\t\t\tcontours: [extendRootBrella(height, width)],\n\t\t\tinnerStartX: startX,\n            innerHeight: height - bbox.yMin,\n            indexCorner: indexPositions[rootIndex],\n\t\t\tdimensions: {\n\t\t\t\twidth: startX + width,\n\t\t\t\tyMin: bbox.yMin,\n\t\t\t\tyMax: bbox.yMin + height\n\t\t\t}\n\t\t}\n\t}\n};\n","import { layoutNode } from \"../layout\";\nimport { setPosition, dimensionHeight, calcBoundingDimensions, alignToYAxis } from '../layout-util';\nimport { isDefined } from \"../../util/util\";\nimport { map, pipe, multiply } from 'ramda';\nimport { createRadical } from \"./create-radical\";\nimport { switchStyleType, withStyle, Style } from \"../../style\";\n\nimport { BoxNode, RootNode as FormulaRootNode, ContoursNode, Vector2, FormulaNode } from '../../types';\nimport { validateProperties } from \"../error\";\n\nexport interface BoxRootNode extends BoxNode {\n\ttype: \"root\",\n\tradical: ContoursNode,\n\tradicand: BoxNode,\n\tindex?: BoxNode\n};\n\nconst layoutIndex = (mainStyle: Style, contoursOffset: Vector2, bottomRightCorner: Vector2, index: FormulaNode) : BoxNode => {\n\tconst indexLayouted: BoxNode = pipe(withStyle(switchStyleType(mainStyle, \"SS\")), layoutNode)(index);\n\tconst scaledCorner: Vector2 = map(multiply(mainStyle.fontSize))(bottomRightCorner) as Vector2;\n\tconst rightBottomPosition = [\n\t\tcontoursOffset[0] + scaledCorner[0],\n\t\tcontoursOffset[1] + scaledCorner[1]\n\t];\n\tconst indexPosition: Vector2 = [\n\t\trightBottomPosition[0] - indexLayouted.dimensions.width,\n\t\trightBottomPosition[1] - indexLayouted.dimensions.yMin\n\t];\n\treturn setPosition(indexPosition)(indexLayouted);\n};\n\nexport const layoutRoot = (root: FormulaRootNode) : BoxRootNode => {\n\tvalidateProperties({\n\t\tradicand: \"object\"\n\t})(root);\n\n\tconst { style } = root;\n\tconst { fontSize } = style;\n\tlet radicandLayouted : BoxNode = pipe(withStyle(style), layoutNode)(root.radicand);\n\n\tconst radicandDim = radicandLayouted.dimensions;\n\tconst radicandDimEm = map(multiply(1 / fontSize), radicandLayouted.dimensions);\n\tconst margin = [0.07, 0.18];\n\tconst [radicandWidth, radicandHeight] = [\n\t\tmargin[0] * 2 + radicandDimEm.width,\n\t\tmargin[1] * 2 + dimensionHeight(radicandDimEm)\n\t];\n\n\tconst radical = createRadical(radicandWidth, radicandHeight);\n\tconst rootMetrics = map(multiply(fontSize), radical.dimensions);\n\tconst rootContours = radical.contours;\n\n\tconst spareYHalf = (radical.innerHeight * fontSize - radicandDim.yMax + radicandDim.yMin) * 0.7;\n\tconst contourY = spareYHalf - (rootMetrics.yMax - radicandDim.yMax);\n\tconst contoursOffset : Vector2 = [0, contourY];\n\n\tconst radicandPosition = [\n\t\tfontSize * (radical.innerStartX + margin[0]), 0\n\t];\n\tObject.assign(radicandLayouted, { position: radicandPosition });\n\n\tlet radicalLayouted : ContoursNode = {\n\t\ttype: \"contours\", style,\n\t\tcontours: rootContours,\n\t\tposition: [contoursOffset[0], contoursOffset[1] + radicandPosition[1]],\n\t\tdimensions: rootMetrics\n\t};\n\tlet indexLayouted : BoxNode = root.index ? layoutIndex(style, contoursOffset, radical.indexCorner, root.index) : undefined;\n\n\t// const alignedNodes = alignToYAxis({\n\t// \tradicand: radicandLayouted,\n\t// \tradical: radicalLayouted,\n\t// \t...(indexLayouted ? { index: indexLayouted } : {})\n\t// });\n\n\tconst shift = (indexLayouted && indexLayouted.position[0] < 0) ? -indexLayouted.position[0] : 0;\n\tif (shift > 0){\n\t\tindexLayouted.position[0] = 0;\n\t\tradicandLayouted.position[0] += shift;\n\t\tradicalLayouted.position[0] += shift;\n\t}\n\n\tconst dimensions = calcBoundingDimensions([radicalLayouted, indexLayouted].filter(isDefined));\n\n\treturn {\n\t\ttype: \"root\", dimensions,\n\t\tradical: radicalLayouted,\n\t\tradicand: radicandLayouted,\n\t\t...(indexLayouted ? { index: indexLayouted } : {})\n\t}\n};","import { sum, pipe, map, multiply } from 'ramda';\nimport { getMetricsObject } from '../font-data/katex-font-util';\nimport { createNodeStyle } from '../style';\nimport { BoxNode, TextNode as FormulaTextNode } from '../types';\nimport { Style } from '../style';\nimport { validateProperties, validateCharInFont } from './error';\nimport { nodeType } from '../node-types';\n\nexport interface BoxTextNode extends BoxNode {\n\ttype: \"text\",\n\tsrcType: \"ord\" | \"op\",\n\ttext: string,\n\tstyle: Style\n};\n\nconst maxTextualHeight = 0.685;\nconst maxTextualDepth = -0.205;\n\nconst getMetricsOfChar = (style: Style, char: string) => getMetricsObject(style.fontFamily, style.emphasis, char.charCodeAt(0));\nconst calculateTextWidth = (style: Style, text:  string) => pipe(\n\tArray.from, map((char: string) => getMetricsOfChar(style, char).width), sum\n)(text);\n\nexport const layoutTextNode = (textNode: FormulaTextNode) : BoxTextNode => {\n\tvalidateProperties({\n\t\ttext: \"string\"\n\t})(textNode);\n\t\n\tconst { text } = textNode;\n\tconst style = createNodeStyle(textNode, {\n\t\ttype: textNode.style.type,\n\t\tfontFamily: \"Main\", \n\t\temphasis: \"Regular\",\n\t});\n\tArray.from(text).forEach(char => validateCharInFont(style, char));\n\tconst { fontSize } = style;\n\tconst dimensions = map(multiply(fontSize))({\n\t\twidth: calculateTextWidth(style, text),\n\t\tyMax: maxTextualHeight,\n\t\tyMin: maxTextualDepth,\n\t});\n\treturn {\n\t\ttype: \"text\", \n\t\tsrcType: textNode.type,\n\t\ttext, dimensions, style\n\t};\n};","import { \n\tlookUpGlyphByCharOrAlias, getMetricsObject, \n\tgetDefaultEmphasis, lookUpBoundingBox, hasFontFamilyUnicode \n} from \"../font-data/katex-font-util\";\nimport { map, multiply, assoc, pipe } from 'ramda';\nimport { createNodeStyle } from \"../style\";\n\nimport { Metrics } from '../font-data/katex-font-util';\nimport { Dimensions, BoundingBox, CharNode as FormulaCharNode, BoxNode, TextualType } from '../types';\nimport { Style } from '../style';\nimport { validateProperties } from \"./error\";\n\nexport interface BoxCharNode extends BoxNode {\n\ttype: \"char\",\n\tsrcType: TextualType,\n\tchar: string,\n\tunicode: number,\n\tstyle: Style,\n\tdimensions: Dimensions,\n\tbbox: BoundingBox\n};\n\nconst getDimensionsOfCharNode = (style: Style, node: FormulaCharNode, unicode: number) : Dimensions => {\n\tconst metrics: Metrics = getMetricsObject(style.fontFamily, style.emphasis, unicode);\n\treturn map(multiply(style.fontSize))({\n\t\twidth: metrics.width,\n\t\tyMin: -metrics.depth,\n\t\tyMax: metrics.height\n\t});\n};\n\nconst handleOperatorStyle = (node: FormulaCharNode) => ((style: Style) : Style => {\n\tif (node.type !== \"op\" || ![\"Size1\", \"Size2\"].includes(style.fontFamily)){\n\t\treturn style;\n\t}\n\tconst fontFamily = style.type === \"D\" ? \"Size2\" : \"Size1\";\n\treturn assoc(\"fontFamily\", fontFamily, style);\n});\n\nexport const layoutCharNode = (node: FormulaCharNode) : BoxCharNode => {\n\tvalidateProperties({\n\t\tvalue: \"string\"\n\t})(node);\n\t\n\tconst { fontFamily, unicode } = lookUpGlyphByCharOrAlias(node.value);\n\tconst char = String.fromCharCode(unicode);\n\tconst emphasis : string = getDefaultEmphasis(fontFamily);\n\tconst implicitStyle = pipe(handleOperatorStyle(node))({ \n\t\ttype: node.style.type,\n\t\tfontFamily, emphasis \n\t}) as Style;\n\tconst style = createNodeStyle(node, implicitStyle);\n\tif (!hasFontFamilyUnicode(style.fontFamily, style.emphasis, unicode)){\n\t\tthrow `font ${style.fontFamily}-${style.emphasis} does not contain char '${char}'`;\n\t}\n\treturn {\n\t\ttype: \"char\", \n\t\tsrcType: node.type,\n\t\tunicode, style,\n\t\tchar: String.fromCharCode(unicode), \n\t\tdimensions: getDimensionsOfCharNode(style, node, unicode),\n\t\tbbox: map(\n\t\t\tmultiply(style.fontSize)\n\t\t)(lookUpBoundingBox(style.fontFamily, unicode, style.emphasis))\n\t};\n};","import { layoutNode } from \"./layout\";\nimport { calcBoundingDimensions } from './layout-util';\nimport { lookUpHorizontalSpacing } from \"./horizontal-layout\";\nimport { map, pipe } from 'ramda';\nimport { withStyle } from \"../style\";\nimport { FormulaNode, MathListNode, BoxNode } from '../types';\nimport { Style } from '../style';\nimport { WrongPropertyTypeError, validateProperties } from './error';\n\nexport interface BoxMathListNode extends BoxNode {\n\titems: BoxNode[]\n};\n\nconst calculateHorizontalSpacing = (style: Style, index: number, itemCount: number, node1: FormulaNode, node2: FormulaNode) : number => {\n\treturn (index >= itemCount - 1 || [\"S\", \"SS\"].includes(style.type)) ? 0 : lookUpHorizontalSpacing(node1, node2) * style.fontSize;\n};\nexport const layoutMathList = (mathList: MathListNode) : BoxMathListNode => {\n\tvalidateProperties({\n\t\titems: \"array\"\n\t})(mathList);\n\t\n\tconst { items } = mathList;\n\tconst { style } = mathList;\n\tconst layoutItems : BoxNode[] = map(pipe(withStyle(style), layoutNode))(items);\n\n\tlet curX = 0;\n\tconst positions: [number, number][] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst layoutItem = layoutItems[i];\n\n\t\tpositions.push([curX, 0]);\n\t\tcurX += layoutItem.dimensions.width;\n\n\t\t//spacing\n\t\tcurX += calculateHorizontalSpacing(style, i, items.length, items[i], items[i + 1]);\n\t}\n\n\tconst positionedItems : BoxNode[] = layoutItems.map((layoutItem, index) => {\n\t\treturn { ...layoutItem, position: positions[index] }\n\t});\n\n\treturn {\n\t\ttype: \"mathlist\",\n\t\tstyle,\n\t\tdimensions: calcBoundingDimensions(positionedItems),\n\t\titems: positionedItems\n\t};\n};","import { add, identity, map, multiply, pick, pipe, range, partial } from 'ramda';\nimport { BoxNode, MatrixNode as FormulaMatrixNode, MatrixStyle } from \"../types\";\nimport { accumSum, max, sum } from \"../util/util\";\nimport { layoutDelimited } from './delimiter/delimited-layout';\nimport { validateProperties } from \"./error\";\nimport { layoutWithStyle } from \"./layout\";\nimport { setPosition, getAxisHeight } from './layout-util';\n\n\nexport interface BoxMatrixNode extends BoxNode {\n\ttype: \"matrix\",\n\titems: BoxNode[],\n\trowCount: number,\n\tcolCount: number,\n};\n\n\nconst getPositionInMatrix = (colCount: number, flatIndex: number) => {\n\treturn [\n\t\tMath.floor(flatIndex / colCount), \n\t\tflatIndex % colCount\n\t];\n};\n\nconst partitionIntoCols = <T>(colCount: number, array: T[]): T[][] => {\n\treturn array.reduce(\n\t\t(cols: T[][], item: T, ind) => {\n\t\t\tconst colInd = ind % cols.length;\n\t\t\tcols[colInd].push(item);\n\t\t\treturn cols;\n\t\t}, \n\t\tmap(() => [], range(0, colCount))\n\t);\n};\n\nconst partitionIntoRows = <T>(colCount: number, array: T[]): T[][] => {\n\treturn array.reduce(\n\t\t(rows, item, ind) => {\n\t\t\tconst rowInd = Math.floor(ind / colCount);\n\t\t\trows[rowInd].push(item);\n\t\t\treturn rows;\n\t\t}, \n\t\tmap(() => [], range(0, array.length / colCount))\n\t);\n};\n\n\n\ninterface HeightAndDepth {\n\tyMin: number, yMax: number\n};\nconst heightOfNode = (node: BoxNode): HeightAndDepth => pick([\"yMin\", \"yMax\"], node.dimensions);\nconst widthOfNode = (node: BoxNode) => node.dimensions.width;\nconst maxHeightAndDepth = (heightsAndDepths: HeightAndDepth[]) => identity({\n\tyMin: Math.min(...heightsAndDepths.map(obj => obj.yMin)),\n\tyMax: Math.max(...heightsAndDepths.map(obj => obj.yMax)),\n});\n\nconst calculateXOffsetByAlignment = (alignment: \"left\" | \"right\" | \"center\", availableSpace: number): number => {\n\tif (alignment === \"left\"){\n\t\treturn 0;\n\t}\n\tif (alignment === \"center\"){\n\t\treturn availableSpace / 2;\n\t}\n\tif (alignment === \"right\"){\n\t\treturn availableSpace;\n\t}\n};\n\nconst alignItems = (\n\tcolCount: number, colPositions: number[], \n\trowPositions: number[], colWidths: number[], \n\tstyle: MatrixStyle, items: BoxNode[], ) => {\n\t\n\treturn map(\n\t\t(index: number) => {\n\t\t\tconst item = items[index];\n\t\t\tconst [rowIndex, colIndex] = getPositionInMatrix(colCount, index);\n\t\t\treturn setPosition([\n\t\t\t\tcolPositions[colIndex] + calculateXOffsetByAlignment(\n\t\t\t\t\tstyle.horizontalAlignment, colWidths[colIndex] - item.dimensions.width\n\t\t\t\t),\n\t\t\t\trowPositions[rowIndex]\n\t\t\t])(item);\n\t\t}\n\t)(range(0, items.length));\n};\n\nconst defaultMatrixStyle: Partial<MatrixStyle> = {\n\tcolSpacing: 0.3,\n\trowSpacing: 0.3,\n\thorizontalAlignment: \"center\"\n};\n\n//every item is aligned to the baseline\nexport const layoutMatrix = (matrixNode: FormulaMatrixNode) : BoxMatrixNode => {\n\tvalidateProperties({\n\t\trowCount: \"number\", \n\t\tcolCount: \"number\",\n\t\titems: \"array\"\n\t});\n\tif (matrixNode.rowCount * matrixNode.colCount !== matrixNode.items.length){\n\t\tthrow `the number of matrix-items (${matrixNode.items.length}) does not match rowCount * colCount (${matrixNode.rowCount * matrixNode.colCount})`\n\t}\n\n\tconst style = {\n\t\t...defaultMatrixStyle,\n\t\t...matrixNode.style\n\t};\n\tconst spacings: { colSpacing: number, rowSpacing: number } = pick([\"rowSpacing\", \"colSpacing\"], style);\n\tconst { fontSize } = style;\n\tconst { rowCount, colCount, items } = matrixNode;\n\tlet itemsLayouted: BoxNode[] = map(layoutWithStyle(style), items);\n\t\n\tconst colWidths: number[] = pipe(\n\t\tpartial(partitionIntoCols, [colCount]), \n\t\tmap(\n\t\t\t(col: BoxNode[]) => pipe(\n\t\t\t\tmap(widthOfNode), \n\t\t\t\tmax\n\t\t\t)(col)\n\t\t)\n\t)(itemsLayouted);\n\t\n\tconst rowDims: HeightAndDepth[] = pipe(\n\t\tpartial(partitionIntoRows, [colCount]), \n\t\tmap(\n\t\t\t(row: BoxNode[]) => maxHeightAndDepth(\n\t\t\t\tmap((item: BoxNode) => heightOfNode(item), row)\n\t\t\t)\n\t\t)\n\t)(itemsLayouted);\n\n\tconst rowAndColSpacing: { rowSpacing: number, colSpacing: number } = pipe(\n\t\tpick([\"rowSpacing\", \"colSpacing\"]), \n\t\tmap(multiply(fontSize))\n\t)(spacings);\n\n\tconst { rowSpacing, colSpacing } = rowAndColSpacing;\n\tconst totalWidth = sum(colWidths) + (colCount - 1) * colSpacing;\n\tconst totalHeight = sum(map(dim => dim.yMax - dim.yMin)(rowDims)) + (rowCount - 1) * rowSpacing;\n\tconst halfHeight = totalHeight / 2;\n\tconst topY = halfHeight + getAxisHeight(style);\n\tconst colPositions: number[] = pipe(map(add(colSpacing)), accumSum)(colWidths);\n\tconst rowPositions: number[] = rowDims.reduce(\n\t\t(posArr, rowDim, rowInd) => {\n\t\t\tif (rowInd === rowCount - 1) return posArr;\n\t\t\tconst lastVal = posArr[posArr.length - 1];\n\t\t\tconst [curDim, nextDim] = [rowDim, rowDims[rowInd + 1]];\n\t\t\tconst descend = curDim.yMin - rowSpacing - nextDim.yMax;\n\t\t\tposArr.push(lastVal + descend);\n\t\t\treturn posArr;\n\t\t}, \n\t\t[topY - rowDims[0].yMax]\n\t);\n\n\titemsLayouted = alignItems(colCount, colPositions, rowPositions, colWidths, style, itemsLayouted);\n\n\tconst dimensions = {\n\t\twidth: totalWidth,\n\t\tyMin: topY - totalHeight,\n\t\tyMax: topY\n\t};\n\n\treturn {\n\t\ttype: \"matrix\",\n\t\trowCount, colCount,\n\t\tdimensions, style,\n\t\titems: itemsLayouted\n\t};\n}","import { layoutWithStyle } from \"./layout\";\nimport { center, setPosition, calcBoundingDimensions } from './layout-util';\nimport { isNodeChar } from \"../node-types\";\nimport { getMetricsObject, Metrics } from \"../font-data/katex-font-util\";\n\nimport { FormulaNode, BoxNode, CharNode, AccentNode as FormulaAccentNode } from '../types';\nimport { Style } from '../style';\nimport { BoxCharNode } from './char-layout';\nimport { validateProperties } from \"./error\";\n\nexport interface BoxAccentNode extends BoxNode {\n    type: \"accented\",\n    nucleus: BoxNode,\n    accent: BoxCharNode\n};\n\nconst getAccentWidthAndOffset = (style: Style, nucleusMetrics: Metrics, accent: CharNode, accentLayouted: BoxCharNode) => {\n    let accentWidth = accentLayouted.dimensions.width;\n    let offsetX = isNodeChar(accent) ? style.fontSize * nucleusMetrics.skew : 0;\n    \n    //vector\n    if (accentLayouted.unicode === 8407){\n        accentWidth = 0.471 * style.fontSize;\n        offsetX += accentWidth;\n    }\n\n    return {\n        accentWidth, accentOffsetX: offsetX\n    };\n};\n\nconst getAccentPlacementData = (style: Style, nucleus: FormulaNode, nucleusLayouted: BoxNode, accent: CharNode, accentLayouted: BoxCharNode) : { accentWidth: number, accentOffsetX: number, nucleusWidth: number } => {\n    if (isNodeChar(nucleus)){\n        const nucleusStyle = nucleusLayouted.style;\n        const nucleusUnicode = (nucleusLayouted as BoxCharNode).unicode;\n        const nucleusMetrics = getMetricsObject(nucleusStyle.fontFamily, nucleusStyle.emphasis, nucleusUnicode);\n        const nucleusWidth = nucleusLayouted.dimensions.width + nucleusMetrics.italicCorrection;\n        \n        const { accentWidth, accentOffsetX } = getAccentWidthAndOffset(style, nucleusMetrics, accent, accentLayouted);\n        return { nucleusWidth, accentWidth, accentOffsetX };\n    }\n    return {\n        nucleusWidth: nucleusLayouted.dimensions.width,\n        accentWidth: accentLayouted.dimensions.width,\n        accentOffsetX: 0\n    };\n};\n\nexport const layoutAccent = (node: FormulaAccentNode) : BoxAccentNode => {\n    validateProperties({\n        nucleus: \"object\",\n        accent: \"object\"\n    })(node);\n    \n    const { nucleus, accent } = node;\n    const { style } = node;\n    const { fontSize } = style;\n    const nucleusLayouted = layoutWithStyle(style)(nucleus);\n    const accentLayouted = layoutWithStyle(style)(accent) as BoxCharNode;\n\n    const accentPlacementData = getAccentPlacementData(style, nucleus, nucleusLayouted, accent, accentLayouted);  \n\n    const accentX = center(accentPlacementData.accentWidth, accentPlacementData.nucleusWidth) + accentPlacementData.accentOffsetX;\n    const verticalSpacing = 0.1 * fontSize;\n    const accentY = nucleusLayouted.dimensions.yMax - accentLayouted.bbox.yMin + verticalSpacing;\n\n    const horizontalShift = Math.max(0, -accentX);\n    const nucleusPositioned: BoxNode = setPosition([horizontalShift, 0])(nucleusLayouted);\n    const accentPositioned: BoxCharNode = setPosition<BoxCharNode>([accentX, accentY])(accentLayouted);\n\n    if (accentLayouted.unicode === 8407){\n        accentLayouted.dimensions.width -= accentPlacementData.accentOffsetX;\n    }\n\n    const dimensions = calcBoundingDimensions([nucleusPositioned, accentPositioned]);\n    return {\n        type: \"accented\",\n        style, dimensions,\n        nucleus: nucleusPositioned, \n        accent: accentPositioned,\n    }\n};","\n\n\n//pre-processing ###\n/*\nconst getSubNodePaths = node => {\n\tif (node.type === nodeType.mathlist) {\n\t\treturn map(index => [\"items\", index], range(0, node.items.length));\n\t}\n\telse if (node.type === nodeType.script) {\n\t\treturn [[\"nucleus\"], [\"sup\"], [\"sub\"]];\n\t}\n\telse if (node.type === nodeType.fraction) {\n\t\treturn [[\"numerator\"], [\"denominator\"]];\n\t}\n\telse if (node.type === nodeType.root) {\n\t\treturn [[\"index\"], [\"radical\"], [\"radicand\"]];\n\t}\n\telse if (node.type === nodeType.delimited){\n\t\treturn [[\"leftDelim\"], [\"delimited\"], [\"rightDelim\"]];\n\t}\n\treturn [];\n};\n*/\n// const mapFormulaTree = (mapFunc, formulaNode) => {};\n// const insertCharCode = node => isNodeChar(node) ? { ...node, unicode:  } : node;\n// const insertCharCodes = parent => mapFormulaTree(insertCharCode, parent);\n\n\n//layout ###\n\nimport { FormulaNode, BoxNode } from '../types';\n\nimport { isNodeChar, isNodeText } from \"../node-types\";\nimport { pipe } from 'ramda';\n\nimport { layoutScript } from \"./script/script-layout\";\nimport { layoutFraction } from './fraction-layout';\nimport { layoutDelimited } from './delimiter/delimited-layout';\nimport { layoutRoot } from './root/root-layout';\nimport { layoutTextNode } from './text-layout';\nimport { layoutCharNode } from './char-layout';\nimport { layoutMathList } from './mathlist-layout';\nimport { layoutMatrix } from './matrix-layout';\nimport { layoutAccent } from './accent-layout';\nimport { Style, withStyle } from \"../style\";\nimport { dimensionHeight } from './layout-util';\n\ninterface LayoutFunction {\n\t(node: FormulaNode): BoxNode\n}\n\nconst nodeLayoutFuncMap : { [key: string]: LayoutFunction } = {\n\t\"mathlist\": layoutMathList,\n\t\"fraction\": layoutFraction,\n\t\"script\": layoutScript,\n\t\"delimited\": layoutDelimited,\n\t\"root\": layoutRoot,\n\t\"matrix\": layoutMatrix,\n\t\"accented\": layoutAccent\n};\n\nclass InvalidNodeError extends Error {\n\tconstructor(message: string){\n\t\tsuper(message);\n\t\tthis.name = \"InvalidNodeError\";\n\t}\n}\nclass UntypedNodeError extends Error {\n\tconstructor(message: string){\n\t\tsuper(message);\n\t\tthis.name = \"UntypedNodeError\";\n\t}\n}\n\nconst getLayoutFuncByNode = (node: FormulaNode): LayoutFunction => {\n\tif (typeof(node) !== \"object\"){\n\t\tthrow 'this node is not an object!';\n\t}\n\tif (node.type === undefined){\n\t\tthrow new UntypedNodeError(\"this node is lacking a type.\");\n\t}\n\n\n\tif (Reflect.ownKeys(nodeLayoutFuncMap).includes(node.type)) {\n\t\treturn nodeLayoutFuncMap[node.type];\n\t}\n\tif (isNodeChar(node)) return layoutCharNode;\n\tif (isNodeText(node)) return layoutTextNode;\n\t\n\n\tthrow new InvalidNodeError((node as any).type === \"char\" ? \n\t\t\"char is not a valid node-type. use ord, bin, ... instead.\" : \n\t\t`\"${node.type}\" is not a valid node-type`);\n};\n\n\n//useful function for layouting optional nodes\n//supply a map with layout-functions for all possible nodes and get back \n//the layouted nodes that actually exist\ninterface BoxNodeMap {\n\t[key: string]: BoxNode\n};\ninterface FormulaNodeObject {\n\t[key: string]: FormulaNode\n}\nexport const layoutByMap = (layoutMap: { [key: string]: LayoutFunction }) => ((inputMap: FormulaNodeObject) : BoxNodeMap => {\n\tconst layouted : BoxNodeMap = {};\n\tconst keys: string[] = Reflect.ownKeys(inputMap) as string[];\n\tfor (const key of keys){\n\t\tlayouted[key] = layoutMap[key](inputMap[key]);\n\t}\n\treturn layouted;\n});\n\n\nexport const layoutNode : LayoutFunction = (node: FormulaNode) : BoxNode => {\n\treturn getLayoutFuncByNode(node)(node);\n};\nexport const layoutWithStyle = (style: any) : LayoutFunction => {\n\treturn pipe(withStyle(style), layoutNode) as LayoutFunction;\n};\n\n\n//this is the main function to call for layouting the root-node (root as in tree) of a formula\nconst defaultStyle : Style = {\n\ttype: \"D\", \n\tfontSize: 40,\n\tcolor: \"black\"\n};\nexport interface LayoutResult extends BoxNode {\n\twidth: number, \n\theight: number\n};\nconst attachTotalSize = (node: BoxNode) : LayoutResult => Object.assign(node, {\n\twidth: node.dimensions.width,\n\theight: dimensionHeight(node.dimensions)\n});\nexport const layout = (formulaNode: FormulaNode) : LayoutResult => pipe(\n\tlayoutWithStyle(defaultStyle), attachTotalSize\n)(formulaNode);","import { fontIdentifiers } from '../font-data/katex-font-util';\nimport { BoxCharNode } from '../layout/char-layout';\nimport { setPosition } from '../layout/layout-util';\nimport { BoxMathListNode } from '../layout/mathlist-layout';\nimport { BoxMatrixNode } from '../layout/matrix-layout';\nimport { BoxTextNode } from '../layout/text-layout';\nimport { pathContours } from '../opentype';\nimport { Style } from '../style';\nimport { BoxNode, ContoursNode, RuleNode } from '../types';\nimport { addFontFaces, isDefined, pickList } from '../util/util';\n\nexport const loadKatexFontFaces = async () => {\n\tconst baseUrl = \"https://cdn.jsdelivr.net/npm/katex@0.11.1/dist/fonts/\";\n\tconst katexPrefix = \"KaTeX_\";\n\tconst fontUrlMap : { [fontKey: string]: string } = fontIdentifiers.reduce((urlMap, key) => Object.assign(urlMap, { \n\t\t[katexPrefix + key]: `${baseUrl}${katexPrefix}${key}.ttf`\n\t}), {});\n\tawait addFontFaces(fontUrlMap);\n};\n\n\n// const renderAxisLine = (ctx: CanvasRenderingContext2D, node: BoxNode) => {\n// \tctx.save();\n// \tctx.beginPath();\n// \tconst axisHeight = getAxisHeight(node.style);\n// \tctx.translate(0, axisHeight);\n// \tctx.moveTo(0, 0);\n// \tctx.lineTo(node.width, 0);\n// \tctx.setTransform(1, 0, 0, 1, 0, 0);\n// \tObject.assign(ctx, { lineWidth: 1, strokeStyle: \"red\" });\n// \tctx.stroke();\n// \tctx.restore();\n// };\nconst renderBoundingBox = (ctx: CanvasRenderingContext2D, node: BoxNode) => {\n\tconst dim = node.dimensions;\n\tconst height = dim.yMax - dim.yMin;\n\n\tctx.save();\n\tctx.beginPath();\n\tctx.rect(0, dim.yMin, dim.width, height);\n\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\tctx.lineWidth = 1;\n\tctx.stroke();\n\tctx.restore();\n\n\tctx.save();\n\tctx.beginPath();\n\tconst y = 0;//0.25 * (node.style.fontSize);\n\tctx.moveTo(0, y);\n\tctx.lineTo(dim.width, y);\n\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = \"red\";\n\tctx.stroke();\n\tctx.restore();\n};\nconst renderText = (ctx: CanvasRenderingContext2D, style: Style, text: string) => {\n\tctx.save();\n\tctx.font = `${style.fontSize}px KaTeX_${style.fontFamily}-${style.emphasis}`;\n\tctx.scale(1, -1);\n\tif (style.preventTextPixelSnapping){\n\t\t//this rotation prevents vertical pixel-snapping, so animations run smoother\n\t\tctx.rotate(0.0005); \n\t}\n\tctx.fillText(text, 0, 0);\n\tctx.restore();\n};\nconst renderChar = (ctx: CanvasRenderingContext2D, node: BoxCharNode) => renderText(ctx, node.style, node.char);\nconst renderTextNode = (ctx: CanvasRenderingContext2D, node: BoxTextNode) => renderText(ctx, node.style, node.text);\n\nconst renderContours = (ctx: CanvasRenderingContext2D, node: ContoursNode) => {\n\tctx.save();\n\tconst { fontSize } = node.style;\n\tctx.scale(fontSize, fontSize);\n\tpathContours(ctx, node.contours);\n\tctx.fill();\n\tctx.restore();\n};\nconst renderRule = (ctx: CanvasRenderingContext2D, node: RuleNode) => {\n\tconst thickness = node.dimensions.yMax - node.dimensions.yMin;\n\tctx.beginPath();\n\tctx.moveTo(0, 0);\n\tctx.lineTo(node.dimensions.width, 0);\n\tctx.lineWidth = thickness;\n\tctx.stroke();\n};\nconst renderSubNodes = (ctx: CanvasRenderingContext2D, node: BoxNode, props: string[]) => pickList(props, node)\n\t.filter(isDefined).forEach((subNode => renderNode(ctx, subNode)));\n\nconst renderNodes = (ctx: CanvasRenderingContext2D, nodes: BoxNode[]) => nodes.forEach(node => renderNode(ctx, node));\nexport const renderNode = (ctx: CanvasRenderingContext2D, node: BoxNode) => {\n\n\tctx.save();\n\t\n\tctx.translate(...node.position);\n\tif (node.style && node.style.color){\n\t\tconst color = node.style.color;\n\t\tObject.assign(ctx, {\n\t\t\tstrokeStyle: color,\n\t\t\tfillStyle: color\n\t\t});\n\t}\n\n\t// renderBoundingBox(ctx, node);\n\n\tconst nodeType = node.type;\n\tif (nodeType === \"char\") {\n\t\trenderChar(ctx, node as BoxCharNode);\n\t}\n\telse if (nodeType === \"text\") {\n\t\trenderTextNode(ctx, node as BoxTextNode);\n\t}\n\telse if (nodeType === \"contours\") {\n\t\trenderContours(ctx, node as ContoursNode);\n\t}\n\telse if (nodeType === \"mathlist\") {\n\t\trenderNodes(ctx, (node as BoxMathListNode).items as BoxNode[]);\n\t}\n\telse if (nodeType === \"fraction\") {\n\t\trenderSubNodes(ctx, node, [\"numerator\", \"rule\", \"denominator\"]);\n\t}\n\telse if (nodeType === \"rule\") {\n\t\trenderRule(ctx, node as RuleNode);\n\t}\n\telse if (nodeType === \"script\") {\n\t\trenderSubNodes(ctx, node, [\"nucleus\", \"sup\", \"sub\"]);\n\t}\n\telse if (nodeType === \"root\") {\n\t\trenderSubNodes(ctx, node, [\"radical\", \"radicand\", \"index\"]);\n\t}\n\telse if (nodeType === \"matrix\"){\n\t\trenderNodes(ctx, (node as BoxMatrixNode).items as BoxNode[]);\n\t}\n\telse if (nodeType === \"accented\"){\n\t\trenderSubNodes(ctx, node, [\"nucleus\", \"accent\"]);\n\t}\n\telse if (nodeType === \"delimited\"){\n\t\trenderSubNodes(ctx, node, [\"delimited\", \"leftDelim\", \"rightDelim\"]);\n\t}\n\n\tctx.restore();\n};\nexport const calculateCenterPosition = (canvas: HTMLCanvasElement, node: BoxNode) : [number, number] => {\n\treturn [\n\t\t(canvas.width - node.dimensions.width) / 2,\n\t\t(canvas.height - node.dimensions.yMax - node.dimensions.yMin) / 2\n\t];\n};\nexport const centerNodeOnCanvas = (canvas: HTMLCanvasElement, node: BoxNode) : BoxNode => setPosition(calculateCenterPosition(canvas, node))(node);\n\nexport const renderFormulaLayout = (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, formulaLayout: BoxNode) => {\n\tctx.save();\n\tctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n\trenderNode(ctx, formulaLayout);\n\tctx.restore();\n};","import fonts from './*.ttf';\nimport { addFontFaces } from '../util/util';\n\nexport const loadFontFaces = () => addFontFaces(fonts);","import { TextualType } from \"./types\";\nimport { lookUpUnicode } from \"./font-data/katex-font-util\";\n\nexport const unicodeToTypeMap: { [key: number]: TextualType } = {\n    8747: \"op\",\n    8721: \"op\",\n    8719: \"op\",\n    8899: \"op\",\n\n    43: \"bin\",\n\t8722: \"bin\",\n\t45: \"bin\",\n    177: \"bin\",\n    8901: \"bin\",\n    247: \"bin\",\n    215: \"bin\",\n    8728: \"bin\",\n    42: \"bin\",\n    47: \"bin\",\n\n    60: \"rel\",\n    61: \"rel\",\n    62: \"rel\",\n    8804: \"rel\",\n    8805: \"rel\",\n    8810: \"rel\",\n    8811: \"rel\",\n    8776: \"rel\",\n    8801: \"rel\",\n    8712: \"rel\",\n    8715: \"rel\",\n    8834: \"rel\",\n    8838: \"rel\",\n    10233: \"rel\",\n    8614: \"rel\",\n    8594: \"rel\",\n\n    40: \"open\",\n    123: \"open\",\n    91: \"open\",\n    10216: \"open\",\n    8968: \"open\",\n    8970: \"open\",\n\n    41: \"close\",\n    125: \"close\",\n    93: \"close\",\n    10217: \"close\",\n    8969: \"close\",\n    8971: \"close\",\n\n    44: \"punct\",\n    46: \"punct\",\n    59: \"punct\",\n\n    729: \"ord\",\n    8407: \"ord\",\n    713: \"ord\",\n    168: \"ord\",\n    730: \"ord\",\n    94: \"ord\",\n\n    8734: \"ord\",\n    8943: \"ord\",\n    8242: \"ord\",\n    97: \"ord\",\n    98: \"ord\",\n    99: \"ord\",\n    100: \"ord\",\n    101: \"ord\",\n    102: \"ord\",\n    103: \"ord\",\n    104: \"ord\",\n    105: \"ord\",\n    106: \"ord\",\n    107: \"ord\",\n    108: \"ord\",\n    109: \"ord\",\n    110: \"ord\",\n    111: \"ord\",\n    112: \"ord\",\n    113: \"ord\",\n    114: \"ord\",\n    115: \"ord\",\n    116: \"ord\",\n    117: \"ord\",\n    118: \"ord\",\n    119: \"ord\",\n    120: \"ord\",\n    121: \"ord\",\n    122: \"ord\",\n    \n    65: \"ord\", \n    66: \"ord\", \n    915: \"ord\", \n    916: \"ord\", \n    69: \"ord\", \n    90: \"ord\", \n    72: \"ord\", \n    920: \"ord\", \n    73: \"ord\", \n    75: \"ord\", \n    923: \"ord\", \n    77: \"ord\", \n    78: \"ord\", \n    926: \"ord\", \n    79: \"ord\", \n    928: \"ord\", \n    80: \"ord\", \n    931: \"ord\", \n    84: \"ord\", \n    933: \"ord\", \n    934: \"ord\", \n    88: \"ord\", \n    936: \"ord\", \n    937: \"ord\", \n    945: \"ord\", \n    946: \"ord\", \n    947: \"ord\", \n    948: \"ord\", \n    1013: \"ord\", \n    950: \"ord\", \n    951: \"ord\", \n    952: \"ord\", \n    953: \"ord\", \n    954: \"ord\", \n    955: \"ord\", \n    956: \"ord\", \n    957: \"ord\", \n    958: \"ord\", \n    959: \"ord\", \n    960: \"ord\", \n    961: \"ord\", \n    963: \"ord\", \n    964: \"ord\", \n    965: \"ord\", \n    981: \"ord\", \n    967: \"ord\", \n    968: \"ord\", \n    969: \"ord\", \n    949: \"ord\", \n    1008: \"ord\", \n    977: \"ord\", \n    982: \"ord\", \n    1009: \"ord\", \n    962: \"ord\", \n    966: \"ord\", \n    989: \"ord\", \n    81: \"ord\", \n    82: \"ord\", \n    67: \"ord\", \n    305: \"ord\", \n    567: \"ord\", \n    8711: \"ord\", \n    8706: \"ord\", \n    216: \"ord\", \n    248: \"ord\", \n    8501: \"ord\", \n    8463: \"ord\"\n};\n\nexport const charOrAliasToType = (charOrAlias: string): TextualType => {\n    const unicode = lookUpUnicode(charOrAlias);\n    if (!unicode) return;\n    return unicodeToTypeMap[unicode];\n};","/*\n    the parse-function takes an expression as string, and outputs a FormulaNode. \n    \n    examples of expressions:\n    a + b + 3 * c = d / 5\n    2 * \\pi = \\tau\n    f(t) = 4 - 2 * t + 5 * t^3\n    f(t) = c_0 + c_1 * t + c_2 * t^2 + c_3 * t^3 + \\...\n    2^{2^2} = 8\n    t_1^3 * t_2^2 * t_4 * t_5^3\n    (\\frac({1}{2 + (\\frac({1}{3 + (\\frac({1}{4 + \\...}))}))}))\n\n    features: \n\t- binary operators, relations, punctuation \n\t- unary operators\n    - numbers, 24, 0.01, 3.1457\n    - sub- and superscripts, a^b, a_c, a^b_c, a_c^b,\n        a^b_c and a_c^b are equivalent, order does not matter\n    - special characters by \\[alias], example: \\gamma\n    - grouping by {}, everything inside curly braces will be parsed to a single node\n    - autosized delimiter, ()[]{}⌈⌉⌊⌋||, \n        curly braces must be escaped to act as delimiters: \\{ and \\}\n    - roots, \n        root({2}) is the square-root of 2\n\t\troot({2}{3}) is the cube-root of 2\n\t- fractions, \\fraction({1}{2})\t\n\t- accents, example: \\accent({v}{\\vector})\n\t- matrix, example: \\matrix({1}{0}, {0}{1}), \n\t\tthe size of the matrix is infered from the colons\n    - text\n\n\n\ttodo: \n\t- functions like sin, ln, ...\n    - maybe instead of frac({a}{b}) just use a / b,\n    and if inline fractions are desired, escape the slash: a \\/ b\n    - better handling of text-functions, \n        currently, the end of a text-function is determined by \n        looking at the corresponding closing parenthesis. \n        however the text could be like: func(t), so: \\text(func(t))\n        which would we interpreted as \\text(func(t) -> func(t.     \n    - complete error handling with position of error in the text     \n\n\n\talgorithm: \n\t- first tokenize the entire expression:\n\t\t- process text-functions, converts text-functions into FormulaNodes\n\t\t- process escape-sequences, example: \\pi, \\frac\n\t\t\tescape sequences are either function-names or aliases. \n\t\t\taliases are converted directly into FormulaNodes.\n\t\t\tfunction-names are converted into FunctionNameTokens\n\t\t- convert number-literals into either ord- or text-nodes \n\t\t- tokenize unescaped braces \n\t\t- convert chars to FormulaNodes, + - ; f p and so on \n\t- recursively parse the tokens:\n\t\t- detect groups by delimiters and parse them recursively\n        - parse functions by supplying them with their arguments\n        - parse scripts \n        - if the result is an array, pack it into a mathlist, if not, return the node    \n\n*/\n\n\nimport { curry, last, pipe, range, flatten, endsWith } from 'ramda';\nimport { aliasMap, getDefaultEmphasis } from \"../font-data/katex-font-util\";\nimport { unicodeToTypeMap } from \"../type-from-unicode\";\nimport { AccentNode, CharNode, DelimitedNode, FormulaNode, FractionNode, MathListNode, RootNode, ScriptNode, TextNode, TextualType, MatrixStyle, MatrixNode } from \"../types\";\n\n\n\n//Token-types ###\n\ninterface Token {\n    type: string\n    value: string,\n    [key: string]: any\n};\n\ntype ParseNode = Token | FormulaNode;\n\n//^\ninterface SuperScript extends Token { type: \"superscript\" };\n//_\ninterface SubScript extends Token { type: \"subscript\" };\n\n//{\ninterface GroupOpen extends Token { type: \"group-open\" };\n//}\ninterface GroupClose extends Token { type: \"group-close\" };\n\n// \\frac({}{}), \\root({}{}), \\matrix(rowCount, colCount, {}), \\accent({}{}), \\text()\ninterface ParseFunctionName extends Token { type: \"parse-function-name\" };\n\n\nconst parseFunctionNames = [\n    \"frac\", \"root\", \"accent\", \"matrix\", \"text\"\n];\n\n\n\n\n//tokenization ###\n\ntype PartiallyProcessedExpression = (string | Token | FormulaNode)[];\ntype TokenizationFunction = (expression: string) => PartiallyProcessedExpression;\n\nconst appendOrPushChar = (array: any[], char: string): any[] => {\n    if (array.length === 0 || typeof(last(array)) !== \"string\"){\n        array.push(char);\n    }\n    else {\n        array[array.length - 1] += char;\n    }\n    return array;\n};\nconst isArray = (val: any): boolean => Array.isArray(val);\n\nconst tokenizeTextFunctions = (expression: string): (string | TextNode)[] => {\n    let processed: (string | TextNode)[] = [];\n    for (let i = 0; i < expression.length; i++){\n        const char = expression[i];\n        const restString = expression.substr(i);\n        if (restString.startsWith(\"\\\\text(\")){\n            const textStartIndex = i + 6;\n            const textEndIndex = expression.indexOf(\")\", textStartIndex);\n            if (textEndIndex < 0){\n                throw 'text-function is missing a closing parenthesis';\n            }\n            const textVal = expression.substring(textStartIndex, textEndIndex);\n            processed.push({\n                type: \"ord\",\n                text: textVal\n            } as TextNode);\n            i = textEndIndex;\n\t\t\tcontinue;\n\t\t}\n\t\tif (restString.startsWith(\"\\\\opname(\")){\n\t\t\tconst textStartIndex = i + 8;\n\t\t\tconst textEndIndex = expression.indexOf(\")\", textStartIndex);\n\t\t\tif (textEndIndex < 0) {\n\t\t\t\tthrow 'operator-name-function is missing a closing parenthesis';\n\t\t\t}\n\t\t\tconst textVal = expression.substring(textStartIndex, textEndIndex);\n\t\t\tprocessed.push({\n\t\t\t\ttype: \"op\",\n\t\t\t\ttext: textVal\n\t\t\t} as TextNode);\n\t\t\ti = textEndIndex;\n\t\t\tcontinue;\n\t\t}\n\t\tprocessed = appendOrPushChar(processed, char);\n    }\n    return processed;\n};\n\n//alias and function-names ###\nconst getNodeTypeByUnicode = (unicode: number): TextualType => {\n\tlet nodeType = unicodeToTypeMap[unicode];\n\tif (!nodeType) {\n\t\tconsole.warn(`${String.fromCharCode(unicode)} has no corresponding type. maybe add an entry in \"type-from-unicode.ts\" `);\n\t\tnodeType = \"ord\";\n\t}\n\treturn nodeType;\n};\nconst getMatchingAlias = (str: string): { alias: string, unicode: number, fontFamily: string } => {\n    let curMatch = null;\n    for (let i = 0; i < aliasMap.length; i++){\n        const aliasEntry = aliasMap[i];\n        for (let j = 0; j < aliasEntry.alias.length; j++){\n            const curAlias = aliasEntry.alias[j];\n            if (!str.startsWith(curAlias)) continue;\n\n            if (!curMatch || curAlias.length > curMatch.alias.length){\n                curMatch = { \n\t\t\t\t\talias: curAlias, \n\t\t\t\t\tunicode: aliasEntry.unicode, \n\t\t\t\t\tfontFamily: aliasEntry.fontFamily\n\t\t\t\t};\n            }\n        }\n    }\n    return curMatch;\n};\nconst getMatchingParseFunction = (str: string): string => {\n    return parseFunctionNames.find(funcName => str.startsWith(funcName));\n};\nconst isEscapeChar = (char: string) => char.charCodeAt(0) === 92;\nconst tokenizeEscapeSequences = (expression: string): (string | ParseFunctionName | CharNode)[] => {\n    let processed: (string | ParseFunctionName | CharNode)[] = [];\n    for (let i = 0; i < expression.length; i++){\n        const char = expression[i];\n        if (isEscapeChar(char)){\n            const restString = expression.substr(i + 1);\n            \n            const parseFuncName = getMatchingParseFunction(restString);\n            if (parseFuncName){\n                processed.push({\n                    type: \"parse-function-name\",\n                    value: parseFuncName\n                } as ParseFunctionName);\n                i += parseFuncName.length;\n                continue;\n            }\n\n            const aliasMatch = getMatchingAlias(restString);\n            if (aliasMatch){\n                const { unicode } = aliasMatch;\n                let nodeType = unicodeToTypeMap[unicode];\n                if (!nodeType){\n                    console.warn(`found a match for the alias ${aliasMatch.alias} but not a corresponsing type. maybe add an entry in \"type-from-unicode.ts\" `);\n\t\t\t\t\tnodeType = \"ord\";\n\t\t\t\t}\n                processed.push({\n                    type: nodeType,\n\t\t\t\t\tvalue: String.fromCharCode(unicode),\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontFamily: aliasMatch.fontFamily,\n\t\t\t\t\t\temphasis: getDefaultEmphasis(aliasMatch.fontFamily)\n\t\t\t\t\t}\n                } as CharNode);\n                i += aliasMatch.alias.length;\n                continue;\n            }\n\n            throw `could not find a match for escaped string \"${restString}\"`;\n        }\n        processed = appendOrPushChar(processed, char);\n    }\n    return processed;\n};\n\n\n//number literals ###\n\nconst isDigit = (char: string): boolean => [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].includes(char);\nconst tokenizeNumberLiterals = (expression: string): (string | CharNode | TextNode)[] => {\n    let processed: (string | CharNode | TextNode)[] = [];\n    let numberSequenceStarted = false;\n    let curNumberSequence: string = null;\n    const pushCurrentNumber = () => {\n        processed.push(\n            curNumberSequence.length > 1 ? \n            { type: \"ord\", text: curNumberSequence } as TextNode : \n            { type: \"ord\", value: curNumberSequence } as CharNode\n        );\n    };\n    for (let i = 0; i < expression.length; i++){\n        const char = expression[i];\n\t\tif (isDigit(char) || char === \".\"){\n            if (!numberSequenceStarted){\n                numberSequenceStarted = true;\n                curNumberSequence = \"\";\n            }\n            curNumberSequence += char;\n        }\n        else {\n            if (numberSequenceStarted){\n                pushCurrentNumber();\n                numberSequenceStarted = false;\n            }\n            processed = appendOrPushChar(processed, char);\n        }\n    }\n    if (numberSequenceStarted){\n        pushCurrentNumber();\n    }\n    return processed;\n};\n\nconst tokenizeBraces = (expression: string): (string | GroupOpen | GroupClose)[] => {\n\tlet processed: (string | GroupOpen | GroupClose)[] = [];\n\tfor (let i = 0; i < expression.length; i++) {\n\t\tconst char = expression[i];\n\t\tif (char === \"{\") {\n\t\t\tprocessed.push({\n\t\t\t\ttype: \"group-open\",\n\t\t\t\tvalue: char\n\t\t\t} as GroupOpen);\n\t\t\tcontinue;\n\t\t}\n\t\tif (char === \"}\") {\n\t\t\tprocessed.push({\n\t\t\t\ttype: \"group-close\",\n\t\t\t\tvalue: char\n\t\t\t} as GroupClose);\n\t\t\tcontinue;\n\t\t}\n\t\tprocessed = appendOrPushChar(processed, char);\n\t}\n\treturn processed;\n};\n\nconst tokenizeScripts = (expression: string): (string | SuperScript | SubScript)[] => {\n    let processed:  (string | SuperScript | SubScript)[] = [];\n    for (let i = 0; i < expression.length; i++){\n        const char = expression[i];\n        if (char === \"^\"){\n            processed.push({\n                type: \"superscript\",\n                value: \"^\"\n            } as SuperScript);\n            continue;\n        }\n        if (char === \"_\"){\n            processed.push({\n                type: \"subscript\",\n                value: \"_\"\n            } as SubScript);\n            continue;\n        }\n        processed = appendOrPushChar(processed, char);\n    }\n    return processed;\n};\n\nconst ignoredUnicodes = [\n\t32 /*space*/, \n\t9 /*tab*/,\n\t10, /*return*/\n];\nconst isCharIgnored = (unicode: number) => ignoredUnicodes.includes(unicode);\nconst tokenizeChars = (expression: string): (string | CharNode)[] => {\n    const processed: (string | CharNode)[] = [];\n    for (let i = 0; i < expression.length; i++){\n        const char = expression[i];\n\t\tconst unicode = char.charCodeAt(0);\n\t\tif (isCharIgnored(unicode)) continue;\n        const nodeType = getNodeTypeByUnicode(unicode);\n        processed.push({\n            type: nodeType,\n            value: String.fromCharCode(unicode),\n        } as CharNode);\n    }\n    return processed;\n};\n\nconst tokenizeStringParts = curry(\n    (tokenizeFunc: TokenizationFunction, partialExpression: PartiallyProcessedExpression): PartiallyProcessedExpression => {\n        const tokenized: PartiallyProcessedExpression = [];\n        for (let i = 0; i < partialExpression.length; i++){\n            const part = partialExpression[i];\n            if (typeof(part) === \"string\"){\n                tokenized.push(...tokenizeFunc(part as string));\n            }\n            else {\n                tokenized.push(part);\n            }\n        }\n        return tokenized;\n    }\n);\n\nconst tokenizeFuncs: TokenizationFunction[] = [\n    tokenizeTextFunctions, \n    tokenizeEscapeSequences, \n    tokenizeNumberLiterals, \n    tokenizeBraces, \n    tokenizeScripts,\n    tokenizeChars\n];\nconst tokenize = (expression: string): ParseNode[] => {\n    let result: PartiallyProcessedExpression = [expression];\n    for (const tokenizeFunc of tokenizeFuncs){\n        result = tokenizeStringParts(tokenizeFunc, result);\n\t}\n    return result as ParseNode[];\n};\n\n\n\n//recursive parsing ###\n\n\nconst matchTypeAndValue = curry(\n    (type: string, value: string, toMatch: ParseNode): boolean => {\n        return toMatch.type === type && (toMatch as any).value === value\n    }\n);\nconst openToClosingCharMap = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\",\n    \"|\": \"|\"\n};\nconst isNodeOfType = (node: ParseNode, type: string): boolean => node.type === type;\nconst isNodeOfAnyType = (node: ParseNode, types: string[]): boolean => types.includes(node.type);\n\n//group and delimiter ###\n\ntype NodeMatchFunc = (toMatch: ParseNode) => boolean;\nconst getIndexOfLayerEnd = (tokens: ParseNode[], startIndex: number, isStartToken: NodeMatchFunc, isEndToken: NodeMatchFunc) => {\n    let level = 1;\n    for (let i = startIndex + 1; i < tokens.length; i++){\n        const token = tokens[i];\n        if (isStartToken(token)){\n            level++;\n            continue;\n        }\n        if (isEndToken(token)){\n            level--;\n            if (level === 0){\n                return i;\n            }\n        }\n    }\n    return -1;\n};\nconst parseSubLayers = (nodes: ParseNode[]): (FormulaNode | ParseFunctionName | SuperScript | SubScript)[] => {\n\tconst processed: (FormulaNode | ParseFunctionName | SuperScript | SubScript)[] = [];\n    for (let i = 0; i < nodes.length; i++){\n        const node = nodes[i];\n        if (isNodeOfAnyType(node, [\"group-open\", \"open\"])){\n            const closingType = node.type === \"group-open\" ? \"group-close\" : \"close\";\n            const nodeValue = (node as (GroupOpen | GroupClose | CharNode)).value;\n            const endIndex = getIndexOfLayerEnd(\n                nodes, i, \n                matchTypeAndValue(node.type, nodeValue),\n                matchTypeAndValue(closingType, openToClosingCharMap[nodeValue])\n            );\n            if (endIndex < 0){\n                throw 'no corresponding closing delimiter found';\n\t\t\t}\n\t\t\t\n\t\t\tconst subLayer = nodes.slice(i + 1, endIndex);\n\t\t\tconst subLayerParsed = parseTokenLayer(subLayer);\n\t\t\tif (node.type === \"group-open\"){\n\t\t\t\tprocessed.push(subLayerParsed)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tprocessed.push({\n\t\t\t\t\ttype: \"delimited\",\n\t\t\t\t\tdelimited: subLayerParsed,\n\t\t\t\t\tleftDelim: nodes[i],\n\t\t\t\t\trightDelim: nodes[endIndex]\n\t\t\t\t} as DelimitedNode);\n\t\t\t}\n            \n\t\t\ti = endIndex;\n\t\t\tcontinue;\n\t\t}\n\t\t//if there is a right-brace without a corresponding left-brace, ignore it\n\t\tif (isNodeOfType(node, \"group-close\")) continue;\n\t\tprocessed.push(node as (FormulaNode | ParseFunctionName | SuperScript | SubScript));\n    }\n\treturn processed;\n};\n\n\n//functions ###\n\nconst parseFractionFunc = (args: FormulaNode[]): FractionNode => {\n    if (args.length !== 2){\n        throw 'fractions need exactly two arguments';\n\t}\n    return {\n        type: \"fraction\",\n\t\tnumerator: args[0],\n\t\tdenominator: args[1]\n    } as FractionNode;\n};\nconst parseRootFunc = (args: FormulaNode[]): RootNode => {\n\tif (args.length === 0 || args.length > 2) {\n\t\tthrow 'roots take either one or two arguments';\n\t}\n\t\n\tif (args.length === 1){\n\t\treturn {\n\t\t\ttype: \"root\",\n\t\t\tradicand: args[0]\n\t\t} as RootNode;\n\t}\n\telse {\n\t\treturn {\n\t\t\ttype: \"root\",\n\t\t\tradicand: args[0],\n\t\t\tindex: args[1]\n    \t} as RootNode;\n\t}\t\n};\nconst parseAccentFunc = (args: FormulaNode[]): AccentNode => {\n\tif (args.length !== 2) {\n        throw 'accents need exactly two arguments';\n\t}\n    return {\n        type: \"accented\",\n\t\tnucleus: args[0],\n\t\taccent: args[1]\n    } as AccentNode;\n};\nconst parseMatrixFunc = (args: FormulaNode[]): MatrixNode => {\n\tif (args.length < 1){\n\t\tthrow 'matrix must have more than 1 argument';\n\t}\n\tlet rows: FormulaNode[][] = [[]];\n\tlet maxRowSize: number = 0;\n\tfor (let i = 0; i < args.length; i++){\n\t\tconst node = args[i];\n\t\tif (matchTypeAndValue(\"punct\", \",\", node)){\n\t\t\trows.push([]);\n\t\t\tcontinue;\n\t\t}\n\t\trows[rows.length - 1].push(node);\n\t\tmaxRowSize = Math.max(maxRowSize, last(rows).length);\n\t}\n\tconst emptyNode = {\n\t\ttype: \"mathlist\",\n\t\titems: []\n\t} as MathListNode;\n\n\t//fill the rows so the matrix is uniform\n\trows = rows.map(row => [\n\t\t...row, \n\t\t...range(0, maxRowSize - row.length).map(() => emptyNode)\n\t]);\n\n\treturn {\n\t\ttype: \"matrix\",\n\t\trowCount: rows.length, \n\t\tcolCount: maxRowSize,\n\t\titems: flatten(rows)\n\t} as MatrixNode;\n};\nconst functionNameToParseMap: { [name: string]: (args: FormulaNode[]) => FormulaNode } = {\n    \"frac\": parseFractionFunc,\n    \"root\": parseRootFunc,\n\t\"accent\": parseAccentFunc,\n\t\"matrix\": parseMatrixFunc\n};\nconst isDelimitedByParenthesis = (node: ParseNode): boolean => {\n\treturn (node.type === \"delimited\" && (((node as DelimitedNode).leftDelim) as CharNode).value === \"(\");\n};\nconst isOpenParenthesis = (node: ParseNode): boolean => matchTypeAndValue(\"open\", \"(\", node);\nconst parseFunctionArgs = (nodes: ParseNode[]): FormulaNode[] => {\n\tconst processed = [];\n\tfor (let i = 0; i < nodes.length; i++){\n\t\tconst node = nodes[i];\n\t\tif (isNodeOfType(node, \"group-open\")){\n\t\t\tconst groupCloseIndex = getIndexOfLayerEnd(\n\t\t\t\tnodes, i, \n\t\t\t\tmatchTypeAndValue(\"group-open\", \"{\"),\n\t\t\t\tmatchTypeAndValue(\"group-close\", \"}\")\n\t\t\t);\n\t\t\tif (groupCloseIndex < 0){\n\t\t\t\tthrow 'brace-group was not closed';\n\t\t\t}\n\t\t\tconst group = nodes.slice(i + 1, groupCloseIndex);\n\t\t\tprocessed.push(parseTokenLayer(group));\n\t\t\ti = groupCloseIndex;\n\t\t\tcontinue;\n\t\t}\n\t\tif (!matchTypeAndValue(\"punct\", \",\", node)){\n\t\t\tthrow `node of type \"${node.type}\" is not allowed in an argument-list`;\n\t\t}\n\t\tprocessed.push(node);\n\t}\n\treturn processed;\n};\nconst parseFunctions = (nodes: ParseNode[]): (FormulaNode | SuperScript | SubScript | GroupOpen | GroupClose)[] => {\n\tconst processed: (FormulaNode | SuperScript | SubScript | GroupOpen | GroupClose)[] = [];\n\tfor (let i = 0; i < nodes.length; i++) {\n\t\tconst node = nodes[i];\n\t\tif (isNodeOfType(node as ParseNode, \"parse-function-name\")) {\n\t\t\tconst funcName = (node as ParseFunctionName).value;\n\t\t\tif (!functionNameToParseMap[funcName]) {\n\t\t\t\tthrow `${funcName} is not a valid function`;\n\t\t\t}\n\t\t\tif (i === nodes.length - 1 || !isOpenParenthesis(nodes[i + 1])) {\n\t\t\t\tthrow `function ${funcName} is missing arguments`;\n\t\t\t}\n\t\t\tconst endIndex = getIndexOfLayerEnd(\n\t\t\t\tnodes, i + 1,\n\t\t\t\tmatchTypeAndValue(\"open\", \"(\"),\n\t\t\t\tmatchTypeAndValue(\"close\", \")\")\n\t\t\t);\n\t\t\tif (endIndex < 0) {\n\t\t\t\tthrow 'parenthesis are not closed';\n\t\t\t}\n\n\t\t\tconst funcArgs = parseFunctionArgs(nodes.slice(i + 2, endIndex));\n\t\t\tprocessed.push(functionNameToParseMap[funcName](funcArgs));\n\t\t\ti = endIndex;\n\t\t\tcontinue;\n\t\t}\n\t\tprocessed.push(node as (FormulaNode | SuperScript | SubScript | GroupOpen | GroupClose));\n\t}\n\treturn processed;\n};\n\n\nconst isSubOrSuperscript = (node: (FormulaNode | SuperScript | SubScript)): boolean => {\n\treturn isNodeOfAnyType(node, [\"subscript\", \"superscript\"])\n};\nconst parseScripts = (nodes: (FormulaNode | SuperScript | SubScript)[]): FormulaNode[] => {\n    const processed: FormulaNode[] = [];\n    for (let i = 0; i < nodes.length; i++){\n\t\tconst node = nodes[i];\n\t\tif (isSubOrSuperscript(node)){\n\t\t\tthrow 'a sub- or super-script must be preceded by a node';\n\t\t}\n        if (i === nodes.length - 1 || !isSubOrSuperscript(nodes[i + 1])){\n            processed.push(node as FormulaNode);\n            continue;\n        }\n        \n        const nextNode = nodes[i + 1];\n        const remainingNodeCount = nodes.length - i - 1;\n\t\tconst isSuperscript = isNodeOfType(nextNode, \"superscript\");\n\t\tconst curScriptType = nextNode.type;\n\t\tconst nextScriptType = isSuperscript ? \"subscript\" : \"superscript\";\n        if (remainingNodeCount === 1 || isSubOrSuperscript(nodes[i + 2])){\n\t\t\tthrow `${curScriptType} expected`;\n        }\n        const scriptNode = {\n            type: \"script\",\n            nucleus: nodes[i]\n        } as ScriptNode;\n        scriptNode[isSuperscript ? \"sup\" : \"sub\"] = nodes[i + 2] as FormulaNode;\n        \n        if (remainingNodeCount === 2 || !isNodeOfType(nodes[i + 3], nextScriptType)){\n            processed.push(scriptNode);\n            i += 2;\n            continue;\n        }\n\n        if (remainingNodeCount === 3){\n\t\t\tthrow `${nextScriptType} expected`;\n        }\n        scriptNode[isSuperscript ? \"sub\" : \"sup\"] = nodes[i + 4] as FormulaNode;\n        processed.push(scriptNode);\n        i += 4;\n    }\n    return processed;\n};\n\nconst layerToMathlistOrSingleNode = (nodes: FormulaNode[]): (FormulaNode | MathListNode) => {\n\tif (nodes.length === 1) return nodes[0];\n    return {\n        type: \"mathlist\",\n\t\titems: nodes\n    };\n};\n\nconst isPotentialUnaryOperator = (node: FormulaNode): boolean => {\n\tif (node.type !== \"bin\") return false;\n\tconst char = (node as CharNode).value;\n\treturn [\"+\", \"-\", \"−\"].includes(char);\n};\nconst isOperand = (node: FormulaNode): boolean => {\n\treturn ![\"bin\", \"rel\", \"punct\"].includes(node.type);\n};\nconst handleUnaryOperators = (nodes: FormulaNode[]): FormulaNode[] => {\n\tif (nodes.length === 1) return nodes;\n\tconst processed = [];\n\tfor (let i = 0; i < nodes.length; i++){\n\t\tconst node = nodes[i];\n\t\tif (!isPotentialUnaryOperator(node)){\n\t\t\tprocessed.push(node);\n\t\t\tcontinue;\n\t\t}\n\t\tif (i === 0 || i === nodes.length - 1){\n\t\t\tprocessed.push({\n\t\t\t\t...node,\n\t\t\t\ttype: \"ord\"\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tconst leftOperand = processed[i - 1];\n\t\tconst rightOperand = nodes[i + 1];\n\t\tif (!isOperand(leftOperand) || !isOperand(rightOperand)){\n\t\t\tprocessed.push({\n\t\t\t\t...node,\n\t\t\t\ttype: \"ord\"\n\t\t\t});\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tprocessed.push(node);\n\t}\n\treturn processed;\n};\n\nconst parseTokenLayer = (layer: ParseNode[]): FormulaNode => pipe(\n    parseFunctions,\n\tparseSubLayers,\n    parseScripts,\n\thandleUnaryOperators,\n\tlayerToMathlistOrSingleNode\n)(layer);\n\n\n\n\n\nexport const parse = (expression: string): FormulaNode => {\n    return pipe(\n        tokenize,\n\t\tparseTokenLayer\n    )(expression);\n};","export { layout as layoutFormula } from './layout/layout';\nexport { centerNodeOnCanvas, renderFormulaLayout } from './rendering/render';\nexport { loadFontFaces } from './fonts/load-fonts';\nexport { parse as stringToFormula } from './parsing/parser';"]}